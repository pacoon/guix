This is guix.fr.info, produced by makeinfo version 6.7 from
guix.fr.texi.

Copyright © 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020 Ludovic
Courtès
Copyright © 2013, 2014, 2016 Andreas Enge
Copyright © 2013 Nikita Karetnikov
Copyright © 2014, 2015, 2016 Alex Kost
Copyright © 2015, 2016 Mathieu Lirzin
Copyright © 2014 Pierre-Antoine Rault
Copyright © 2015 Taylan Ulrich Bayırlı/Kammer
Copyright © 2015, 2016, 2017, 2019, 2020 Leo Famulari
Copyright © 2015, 2016, 2017, 2018, 2019, 2020 Ricardo Wurmus
Copyright © 2016 Ben Woodcroft
Copyright © 2016, 2017, 2018 Chris Marusich
Copyright © 2016, 2017, 2018, 2019, 2020 Efraim Flashner
Copyright © 2016 John Darrington
Copyright © 2016, 2017 Nikita Gillmann
Copyright © 2016, 2017, 2018, 2019, 2020 Jan Nieuwenhuizen
Copyright © 2016, 2017, 2018, 2019, 2020 Julien Lepiller
Copyright © 2016 Alex ter Weele
Copyright © 2016, 2017, 2018, 2019 Christopher Baines
Copyright © 2017, 2018, 2019 Clément Lassieur
Copyright © 2017, 2018 Mathieu Othacehe
Copyright © 2017 Federico Beffa
Copyright © 2017, 2018 Carlo Zancanaro
Copyright © 2017 Thomas Danckaert
Copyright © 2017 humanitiesNerd
Copyright © 2017 Christopher Allan Webber
Copyright © 2017, 2018, 2019, 2020 Marius Bakke
Copyright © 2017, 2019, 2020 Hartmut Goebel
Copyright © 2017, 2019, 2020 Maxim Cournoyer
Copyright © 2017, 2018, 2019, 2020 Tobias Geerinckx-Rice
Copyright © 2017 George Clemmer
Copyright © 2017 Andy Wingo
Copyright © 2017, 2018, 2019 Arun Isaac
Copyright © 2017 nee
Copyright © 2018 Rutger Helling
Copyright © 2018 Oleg Pykhalov
Copyright © 2018 Mike Gerwitz
Copyright © 2018 Pierre-Antoine Rouby
Copyright © 2018, 2019 Gábor Boskovits
Copyright © 2018, 2019 Florian Pelz
Copyright © 2018 Laura Lazzati
Copyright © 2018 Alex Vong
Copyright © 2019 Josh Holland
Copyright © 2019, 2020 Diego Nicola Barbato
Copyright © 2019 Ivan Petkov
Copyright © 2019 Jakob L. Kreuze
Copyright © 2019 Kyle Andrews
Copyright © 2019 Alex Griffin
Copyright © 2019 Guillaume Le Vaillant
Copyright © 2020 Leo Prikler
Copyright © 2019, 2020 Simon Tournier
Copyright © 2020 Wiktor Żelazny
Copyright © 2020 Damien Cassou
Copyright © 2020 Jakub Kądziołka
Copyright © 2020 Jack Hill
Copyright © 2020 Naga Malleswari
Copyright © 2020 Brice Waegeneire
Copyright © 2020 R Veera Kumar
Copyright © 2020 Pierre Langlois
Copyright © 2020 pinoaffe

   Vous avez la permission de copier, distribuer ou modifier ce document
sous les termes de la Licence GNU Free Documentation, version 1.3 ou
toute version ultérieure publiée par la Free Software Foundation ; sans
section invariante, texte de couverture et sans texte de quatrième de
couverture. Une copie de la licence est incluse dans la section
intitulée « GNU Free Documentation License ».
INFO-DIR-SECTION Administration système
START-INFO-DIR-ENTRY
* Guix: (guix.fr).           Gérer les logiciels installés et la
                               configuration du système.
* guix package : (guix.fr)Invoquer guix package.  Installer, supprimer et
                                                      mettre à jour des
                                                      paquets.
* guix gc : (guix.fr)Invoquer guix gc.  Récupérer de l’espace disque
                                            inutilisé.
* guix pull : (guix.fr)Invoquer guix pull.  Mettre à jour la liste des
                                                paquets disponibles.
* guix system : (guix.fr)Invoquer guix system.  Gérer la configuration du
                                                    système d’exploitation.
* guix deploy: (guix)Invoking guix deploy.  Manage operating system
                                              configurations for remote hosts.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION Développement logiciel
START-INFO-DIR-ENTRY
* guix environment : (guix.fr)Invoquer guix environment.  Construire des
                                                              environnements
                                                              de construction
                                                              avec Guix.
* guix build : (guix.fr)Invoquer guix build.  Construire des paquets.
* guix pack : (guix.fr) Invoquer guix pack.  Créer des lots binaires.
END-INFO-DIR-ENTRY


File: guix.fr.info,  Node: Services réseau,  Next: Système de fenêtrage X,  Prev: Rotation des journaux,  Up: Services

8.8.4 Services réseau
---------------------

Le module ‘(gnu services networking)’ fournit des services pour
configurer les interfaces réseaux.

 -- Variable Scheme : dhcp-client-service-type
     C’est le type de services qui lance DHCP, un client DHC (protocole
     de configuration d’hôte dynamique) sur toutes les interfaces réseau
     non-loopback. Sa valeur est le paquet du client DHCP à utiliser,
     ‘isc-dhcp’ par défaut.

 -- Procédure Scheme : dhcpd-service-type
     Ce type définie un service qui lance un démon DHCP. Pour créer un
     service de ce type, vous devez appliquer un objet
     ‘<dhcpd-configuration>’. Par exemple :

          (service dhcpd-service-type
                   (dhcpd-configuration
                    (config-file (local-file "my-dhcpd.conf"))
                    (interfaces '("enp0s25"))))

 -- Type de données : dhcpd-configuration
     ‘package’ (par défaut : ‘isc-dhcp’)
          Le paquet qui fournit le démon DHCP. ce paquet doit fournir le
          démon ‘sbin/dhcpd’ relativement à son répertoire de sortie. Le
          paquet par défaut est le serveur DHCP d’ISC
          (https://www.isc.org/products/DHCP)
     ‘config-file’ (par défaut : ‘#f’)
          Le fichier de configuration à utiliser. Il est requis. Il sera
          passé à ‘dhcpd’ via son option ‘-cf’. La valeur peut être
          n’importe quel objet « simili-fichier » (*note file-like
          objects: G-Expressions.). Voir ‘man dhcpd.conf’ pour des
          détails sur la syntaxe du fichier de configuration.
     ‘version’ (par défaut : ‘"4"’)
          La version de DHCP à utiliser. Le serveur DHCP d’ISC supporte
          les valeur « 4 », « 6 » et « 4o6 ». Elles correspondent aux
          options ‘-4’, ‘-6’ et ‘-4o6’ du programme ‘dhcpd’. Voir ‘man
          dhcpd’ pour plus de détails.
     ‘run-directory’ (par défaut : ‘"/run/dhcpd"’)
          Le répertoire d’exécution à utiliser. Au moment de
          l’activation du service, ce répertoire sera créé s’il n’existe
          pas.
     ‘pid-file’ (par défaut : ‘"/run/dhcpd/dhcpd.pid"’)
          Le fichier de PID à utiliser. Cela correspond à l’option ‘-pf’
          de ‘dhcpd’. Voir ‘man dhcpd’ pour plus de détails.
     ‘interfaces’ (par défaut : ‘'()’)
          Les noms des interfaces réseaux sur lesquelles dhcpd écoute.
          Si cette liste n’est pas vide, alors ses éléments (qui doivent
          être des chaînes de caractères) seront ajoutés à l’invocation
          de ‘dhcpd’ lors du démarrage du démon. Il n’est pas forcément
          nécessaire de spécifier des interfaces ici ; voir ‘man dhcpd’
          pour plus de détails.

 -- Variable Scheme : static-networking-service-type
     C’est le type des interfaces réseaux configurés statiquement.

 -- Procédure Scheme : static-networking-service INTERFACE IP [#:netmask
          #f] [#:gateway #f] [#:name-servers ‘'()’] [#:requirement
          ‘'(udev)’]
     Renvoie un service qui démarre INTERFACE avec l’adresse IP. Si
     NETMASK est vrai, il sera utilisé comme masque de sous-réseau. Si
     GATEWAY est vrai, ce doit être une chaîne de caractères qui
     spécifie la passerelle par défaut du réseau. REQUIREMENT peut être
     utilisé pour déclarer une dépendance sur un autre service avant de
     configurer l’interface.

     On peut appeler cette procédure plusieurs fois, une fois par
     interface réseau qui nous intéresse. Dans les coulisses, elle étend
     ‘static-networking-service-type’ avec les interfaces réseaux
     supplémentaires à gérer.

     Par exemple :

          (static-networking-service "eno1" "192.168.1.82"
                                     #:gateway "192.168.1.2"
                                     #:name-servers '("192.168.1.2"))

 -- Procédure Scheme : wicd-service [#:wicd WICD]
     Renvoie un service qui lance Wicd (https://launchpad.net/wicd), un
     démon de gestion réseau qui cherche à simplifier la configuration
     des réseaux filaires et sans fil.

     Ce service ajoute le paquet WICD au profil global, pour fournir des
     commandes pour interagir avec le démon et configurer le réseau :
     ‘wicd-client’, une interface graphique et les interfaces
     utilisateurs ‘wicd-cli’ et ‘wicd-curses’.

 -- Variable Scheme : modem-manager-service-type
     C’est le type de service pour le service ModemManager
     (https://wiki.gnome.org/Projects/ModemManager). La valeur de ce
     type de service est un enregistrement
     ‘modem-manager-configuration’.

     Ce service fait partie de ‘%desktop-services’ (*note Services de
     bureaux::).

 -- Type de données : modem-manager-configuration
     Type de donnée représentant la configuration de ModemManager.

     ‘modem-manager’ (par défaut : ‘modem-manager’)
          Le paquet ModemManager à utiliser.

 -- Scheme Variable : usb-modeswitch-service-type
     This is the service type for the USB_ModeSwitch
     (https://www.draisberghof.de/usb_modeswitch/) service. The value
     for this service type is a ‘usb-modeswitch-configuration’ record.

     When plugged in, some USB modems (and other USB devices) initially
     present themselves as a read-only storage medium and not as a
     modem. They need to be “modeswitched” before they are usable. The
     USB_ModeSwitch service type installs udev rules to automatically
     modeswitch these devices when they are plugged in.

     Ce service fait partie de ‘%desktop-services’ (*note Services de
     bureaux::).

 -- Data Type : usb-modeswitch-configuration
     Data type representing the configuration of USB_ModeSwitch.

     ‘usb-modeswitch’ (default: ‘usb-modeswitch’)
          The USB_ModeSwitch package providing the binaries for
          modeswitching.

     ‘usb-modeswitch-data’ (default: ‘usb-modeswitch-data’)
          The package providing the device data and udev rules file used
          by USB_ModeSwitch.

     ‘config-file’ (default: ‘#~(string-append #$usb-modeswitch:dispatcher "/etc/usb_modeswitch.conf")’)
          Which config file to use for the USB_ModeSwitch dispatcher. By
          default the config file shipped with USB_ModeSwitch is used
          which disables logging to ‘/var/log’ among other default
          settings. If set to ‘#f’, no config file is used.

 -- Variable Scheme : network-manager-service-type
     C’est le type de service pour le service NetworkManager
     (https://wiki.gnome.org/Projects/NetworkManager). La valeur pour ce
     type de service est un enregistrement
     ‘network-manager-configuration’.

     Ce service fait partie de ‘%desktop-services’ (*note Services de
     bureaux::).

 -- Type de données : network-manager-configuration
     Type de données représentant la configuration de NetworkManager.

     ‘network-manager’ (par défaut : ‘network-manager’)
          Le paquet NetworkManager à utiliser.

     ‘dns’ (par défaut : ‘"default"’)
          Mode de gestion pour le DNS, qui affecte la manière dont
          NetworkManager utilise le fichier de configuration
          ‘resolv.conf’

          ‘default’
               NetworkManager mettra à jour ‘resolv.conf’ pour refléter
               les serveurs de noms fournis par les connexions actives.

          ‘dnsmasq’
               NetworkManager will run ‘dnsmasq’ as a local caching
               nameserver, using a “conditional forwarding”
               configuration if you are connected to a VPN, and then
               update ‘resolv.conf’ to point to the local nameserver.

               With this setting, you can share your network connection.
               For example when you want to share your network
               connection to another laptop via an Ethernet cable, you
               can open ‘nm-connection-editor’ and configure the Wired
               connection’s method for IPv4 and IPv6 to be “Shared to
               other computers” and reestablish the connection (or
               reboot).

               You can also set up a “host-to-guest connection” to QEMU
               VMs (*note Installer Guix dans une VM::). With a
               host-to-guest connection, you can e.g. access a Web
               server running on the VM (*note Services web::) from a
               Web browser on your host system, or connect to the VM via
               SSH (*note ‘openssh-service-type’: Services réseau.). To
               set up a host-to-guest connection, run this command once:

                    nmcli connection add type tun \
                     connection.interface-name tap0 \
                     tun.mode tap tun.owner $(id -u) \
                     ipv4.method shared \
                     ipv4.addresses 172.28.112.1/24

               Then each time you launch your QEMU VM (*note Lancer Guix
               dans une VM::), pass ‘-nic
               tap,ifname=tap0,script=no,downscript=no’ to
               ‘qemu-system-...’.

          ‘none’
               NetworkManager ne modifiera pas ‘resolv.conf’.

     ‘vpn-plugins’ (par défaut : ‘'()’)
          C’est la liste des greffons disponibles pour les VPN (réseaux
          privés virtuels). Un exemple est le paquet
          ‘network-manager-openvpn’, qui permet à NetworkManager de
          gérer des VPN via OpenVPN.

 -- Variable Scheme : connman-service-type
     C’est le type de service pour lancer Connman
     (https://01.org/connman), un gestionnaire de connexions réseaux.

     Sa valeur doit être un enregistrement ‘connman-configuration’ comme
     dans cet exemple :

          (service connman-service-type
                   (connman-configuration
                     (disable-vpn? #t)))

     Voir plus bas pour des détails sur ‘connman-configuration’.

 -- Type de données : connman-configuration
     Type de données représentant la configuration de connman.

     ‘connman’ (par défaut : CONNMAN)
          Le paquet connman à utiliser.

     ‘disable-vpn?’ (par défaut : ‘#f’)
          Lorsque la valeur est vraie, désactive le greffon vpn de
          connman.

 -- Variable Scheme : wpa-supplicant-service-type
     C’est le type du service qui lanceWPA supplicant
     (https://w1.fi/wpa_supplicant/), un démon d’authentification requis
     pour s’authentifier sur des WiFi chiffrés ou des réseaux ethernet.

 -- Type de données : wpa-supplicant-configuration
     Type données qui représente la configuration de WPA Supplicant.

     Il prend les paramètres suivants :

     ‘wpa-supplicant’ (par défaut : ‘wpa-supplicant’)
          Le paquet WPA Supplicant à utiliser.

     ‘dbus?’ (par défaut : ‘#t’)
          Indique s’il faut écouter les requêtes sur D-Bus.

     ‘pid-file’ (par défaut : ‘"/var/run/wpa_supplicant.pid"’)
          Où stocker votre fichier de PID.

     ‘interface’ (par défaut : ‘#f’)
          Si une valeur est indiquée, elle doit spécifier le nom d’une
          interface réseau que WPA supplicant contrôlera.

     ‘config-file’ (par défaut : ‘#f’)
          Fichier de configuration facultatif à utiliser.

     ‘extra-options’ (par défaut : ‘'()’)
          Liste d’arguments de la ligne de commande supplémentaires à
          passer au démon.

 -- Scheme Variable : hostapd-service-type
     This is the service type to run the hostapd
     (https://w1.fi/hostapd/) daemon to set up WiFi (IEEE 802.11) access
     points and authentication servers. Its associated value must be a
     ‘hostapd-configuration’ as shown below:

          ;; Use wlan1 to run the access point for "My Network".
          (service hostapd-service-type
                   (hostapd-configuration
                    (interface "wlan1")
                    (ssid "My Network")
                    (channel 12)))

 -- Data Type : hostapd-configuration
     This data type represents the configuration of the hostapd service,
     with the following fields:

     ‘package’ (default: ‘hostapd’)
          The hostapd package to use.

     ‘interface’ (default: ‘"wlan0"’)
          The network interface to run the WiFi access point.

     ‘ssid’
          The SSID (“service set identifier”), a string that identifies
          this network.

     ‘broadcast-ssid?’ (default: ‘#t’)
          Whether to broadcast this SSID.

     ‘channel’ (default: ‘1’)
          The WiFi channel to use.

     ‘driver’ (default: ‘"nl80211"’)
          The driver interface type. ‘"nl80211"’ is used with all Linux
          mac80211 drivers. Use ‘"none"’ if building hostapd as a
          standalone RADIUS server that does # not control any
          wireless/wired driver.

     ‘extra-settings’ (par défaut : ‘""’)
          Extra settings to append as-is to the hostapd configuration
          file. See
          <https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf> for the
          configuration file reference.

 -- Scheme Variable : simulated-wifi-service-type
     This is the type of a service to simulate WiFi networking, which
     can be useful in virtual machines for testing purposes. The service
     loads the Linux kernel ‘mac80211_hwsim’ module
     (https://www.kernel.org/doc/html/latest/networking/mac80211_hwsim/mac80211_hwsim.html)
     and starts hostapd to create a pseudo WiFi network that can be seen
     on ‘wlan0’, by default.

     The service’s value is a ‘hostapd-configuration’ record.

 -- Variable Scheme : iptables-service-type
     C’est le type de service pour mettre en place une configuration
     iptables. iptables est un outil de filtrage de paquets pris en
     charge par le noyau Linux. Ce service prend en charge la
     configuration d’iptable pour IPv4 et IPv6. Un exemple de
     configuration simple, qui rejette les connexions entrantes sauf
     celles sur le port 22 est présenté ci-dessous.

          (service iptables-service-type
                   (iptables-configuration
                    (ipv4-rules (plain-file "iptables.rules" "*filter
          :INPUT ACCEPT
          :FORWARD ACCEPT
          :OUTPUT ACCEPT
          -A INPUT -p tcp --dport 22 -j ACCEPT
          -A INPUT -j REJECT --reject-with icmp-port-unreachable
          COMMIT
          "))
                    (ipv6-rules (plain-file "ip6tables.rules" "*filter
          :INPUT ACCEPT
          :FORWARD ACCEPT
          :OUTPUT ACCEPT
          -A INPUT -p tcp --dport 22 -j ACCEPT
          -A INPUT -j REJECT --reject-with icmp6-port-unreachable
          COMMIT
          "))))

 -- Type de données : iptables-configuration
     Type de données représentant la configuration d’iptables.

     ‘iptables’ (par défaut : ‘iptables’)
          Le paquet iptables qui fournit ‘iptables-restore’ et
          ‘ip6tables-restore’.
     ‘ipv4-rules’ (par défaut : ‘%iptables-accept-all-rules’)
          Les règles iptables à utiliser. Elles seront passées à
          ‘iptables-restore’. Cela peut être un objet « simili-fichier »
          (*note file-like objects: G-Expressions.).
     ‘ipv6-rules’ (par défaut : ‘%iptables-accept-all-rules’)
          Les règles iptables à utiliser. Elles seront passées à
          ‘ip6tables-restore’. Cela peut être un objet « simili-fichier
          » (*note file-like objects: G-Expressions.).

 -- Scheme Variable : nftables-service-type
     This is the service type to set up a nftables configuration.
     nftables is a netfilter project that aims to replace the existing
     iptables, ip6tables, arptables and ebtables framework. It provides
     a new packet filtering framework, a new user-space utility ‘nft’,
     and a compatibility layer for iptables. This service comes with a
     default ruleset ‘%default-nftables-ruleset’ that rejecting all
     incomming connections except those to the ssh port 22. To use it,
     simply write:

          (service nftables-service-type)

 -- Data Type : nftables-configuration
     The data type representing the configuration of nftables.

     ‘package’ (default: ‘nftables’)
          The nftables package that provides ‘nft’.
     ‘ruleset’ (default: ‘%default-nftables-ruleset’)
          The nftables ruleset to use. This may be any “file-like”
          object (*note file-like objects: G-Expressions.).

 -- Variable Scheme : ntp-service-type
     This is the type of the service running the Network Time Protocol
     (NTP) (https://www.ntp.org) daemon, ‘ntpd’. The daemon will keep
     the system clock synchronized with that of the specified NTP
     servers.

     La valeur de ce service est un objet ‘ntpd-configuration’, décrit
     ci-dessous.

 -- Type de données : ntp-configuration
     C’est le type de données représentant la configuration du service
     NTP.

     ‘servers’ (par défaut : ‘%ntp-servers’)
          This is the list of servers (‘<ntp-server>’ records) with
          which ‘ntpd’ will be synchronized. See the ‘ntp-server’ data
          type definition below.

     ‘allow-large-adjustment?’ (default: ‘#t’)
          Détermine si ‘ntpd’ peut faire un ajustement initial de plus
          de 1 000 secondes.

     ‘ntp’ (par défaut : ‘ntp’)
          Le paquet NTP à utiliser.

 -- Variable Scheme : %ntp-servers
     Liste de noms d’hôtes à utiliser comme serveurs NTP par défaut. Ce
     sont les serveurs du projet NTP Pool (https://www.ntppool.org/fr/)

 -- Data Type : ntp-server
     The data type representing the configuration of a NTP server.

     ‘type’ (default: ‘'server’)
          The type of the NTP server, given as a symbol. One of ‘'pool’,
          ‘'server’, ‘'peer’, ‘'broadcast’ or ‘'manycastclient’.

     ‘address’
          The address of the server, as a string.

     ‘options’
          NTPD options to use with that specific server, given as a list
          of option names and/or of option names and values tuples. The
          following example define a server to use with the options
          ‘iburst’ and ‘prefer’, as well as ‘version’ 3 and a ‘maxpoll’
          time of 16 seconds.

               (ntp-server
                (type 'server)
                (address "some.ntp.server.org")
                (options `(iburst (version 3) (maxpoll 16) prefer))))

 -- Procédure Scheme : openntpd-service-type
     Lance le démon NTP ‘ntpd’, implémenté par OpenNTPD
     (http://www.openntpd.org). Le démon gardera l’horloge système
     synchronisée avec celle des serveurs donnés.

          (service
           openntpd-service-type
           (openntpd-configuration
            (listen-on '("127.0.0.1" "::1"))
            (sensor '("udcf0 correction 70000"))
            (constraint-from '("www.gnu.org"))
            (constraints-from '("https://www.google.com/"))
            (allow-large-adjustment? #t)))


 -- Scheme Variable : %openntpd-servers
     This variable is a list of the server addresses defined in
     ‘%ntp-servers’.

 -- Type de données : openntpd-configuration
     ‘openntpd’ (par défaut : ‘(file-append openntpd "/sbin/ntpd")’)
          L’exécutable openntpd à utiliser.
     ‘listen-on’ (par défaut : ‘'("127.0.0.1" "::1")’)
          Une liste d’adresses IP locales ou de noms d’hôtes que devrait
          écouter le démon ntpd.
     ‘query-from’ (par défaut : ‘'()’)
          Une liste d’adresses IP que le démon devrait utiliser pour les
          requêtes sortantes.
     ‘sensor’ (par défaut : ‘'()’)
          Spécifie une liste de senseurs de différences de temps que
          ntpd devrait utiliser. ‘ntpd’ écoutera chaque senseur qui
          existe et ignorera ceux qui n’existent pas. Voir la
          documentation en amont (https://man.openbsd.org/ntpd.conf)
          pour plus d’informations.
     ‘server’ (default: ‘'()’)
          Spécifie une liste d’adresses IP ou de noms d’hôtes de
          serveurs NTP avec lesquels se synchroniser.
     ‘servers’ (default: ‘%openntp-servers’)
          Spécifie une liste d’adresses IP ou de noms d’hôtes de banques
          de serveurs NTP avec lesquelles se synchroniser.
     ‘constraint-from’ (par défaut : ‘'()’)
          ‘ntpd’ peut être configuré pour demander la « Date » à des
          serveurs HTTPS de confiance via TLS. Cette information de
          temps n’est pas utilisée pour sa précision mais agit comme une
          contrainte authentifiée, ce qui réduit l’impact d’une attaque
          par l’homme du milieu sur le protocole NTP non authentifié.
          Spécifie une liste d’URL, d’adresses IP ou de noms d’hôtes de
          serveurs HTTPS qui fournissent cette contrainte.
     ‘constraints-from’ (par défaut : ‘'()’)
          Comme pour ‘constraint-from’, spécifie une liste d’URL,
          d’adresses IP ou de noms d’hôtes de serveurs HTTPS qui
          fournissent une contrainte. Si les noms d’hôtes sont résolus
          en plusieurs adresses IP, ‘ntpd’ calculera la contrainte
          médiane.
     ‘allow-large-adjustment?’ (par défaut : ‘#f’)
          Détermine si ‘ntpd’ peut faire un ajustement initial de plus
          de 180 secondes.

 -- Variable Scheme : inetd-service-type
     Ce service lance le démon ‘inetd’ (*note (inetutils)inetd
     invocation::). ‘inetd’ écoute des connexions sur des sockets
     internet et démarre le programme spécifié uniquement lorsqu’une
     connexion arrive sur l’un de ces sockets.

     La valeur de ce service est un objet ‘inetd-configuration’.
     L’exemple suivant configure le démon ‘inetd’ pour qu’il fournisse
     le service ‘echo’, ainsi qu’un service smtp qui transfère le trafic
     smtp par ssh à un serveur ‘smtp-server’ derrière une passerelle
     ‘hostname’ :

          (service
           inetd-service-type
           (inetd-configuration
            (entries (list
                      (inetd-entry
                       (name "echo")
                       (socket-type 'stream)
                       (protocol "tcp")
                       (wait? #f)
                       (user "root"))
                      (inetd-entry
                       (node "127.0.0.1")
                       (name "smtp")
                       (socket-type 'stream)
                       (protocol "tcp")
                       (wait? #f)
                       (user "root")
                       (program (file-append openssh "/bin/ssh"))
                       (arguments
                        '("ssh" "-qT" "-i" "/path/to/ssh_key"
                          "-W" "smtp-server:25" "user@hostname")))))))

     Voir plus bas pour plus de détails sur ‘inetd-configuration’.

 -- Type de données : inetd-configuration
     Type de données représentant la configuration de ‘inetd’.

     ‘program’ (par défaut : ‘(file-append inetutils "/libexec/inetd")’)
          L’exécutable ‘inetd’ à utiliser.

     ‘entries’ (par défaut : ‘'()’)
          Une liste d’entrées de services ‘inetd’. Chaque entrée devrait
          être crée avec le constructeur ‘inetd-entry’.

 -- Type de données : inetd-entry
     Type de données représentant une entrée dans la configuration
     d’‘inetd’. Chaque entrée correspond à un socket sur lequel ‘inetd’
     écoutera les requêtes.

     ‘node’ (par défaut : ‘#f’)
          Chaîne de caractères facultative, un liste d’adresses locales
          séparées par des virgules que ‘inetd’ devrait utiliser pour
          écouter ce service. *Note (inetutils)Configuration file:: pour
          une description complète de toutes les options.
     ‘name’
          Une chaîne de caractères dont le nom doit correspondre à une
          entrée de ‘/etc/services’.
     ‘socket-type’
          Un symbole parmi ‘'stream’, ‘'dgram’, ‘'raw’, ‘'rdm’ ou
          ‘'seqpacket’.
     ‘protocol’
          Une chaîne de caractères qui doit correspondre à une entrée
          dans ‘/etc/protocols’.
     ‘wait?’ (par défaut : ‘#t’)
          Indique si ‘inetd’ devrait attendre que le serveur ait quitté
          avant d’écouter de nouvelles demandes de service.
     ‘user’
          Une chaîne de caractères contenant le nom d’utilisateur (et
          éventuellement de groupe) de l’utilisateur en tant que lequel
          le serveur devrait tourner. Le nom du groupe peut être
          spécifié comme un suffixe, séparé par un deux-points ou un
          point, c.-à-d. ‘"utilisateur"’, ‘"utilisateur:groupe"’ ou
          ‘"utilisateur.groupe"’.
     ‘program’ (par défaut : ‘"internal"’)
          Le programme du serveur qui servira les requêtes, ou
          ‘"internal"’ si ‘inetd’ devrait utiliser un service inclus.
     ‘arguments’ (par défaut : ‘'()’)
          Une liste de chaînes de caractères ou d’objets simili-fichiers
          qui sont les arguments du programme du serveur, en commençant
          par le zéroième argument, c.-à-d. le nom du programme
          lui-même. Pour les services internes à ‘inetd’, cette entrée
          doit être ‘'()’ ou ‘'("internal")’.

     *Note (inetutils)Configuration file:: pour trouver une discussion
     plus détaillée de chaque champ de configuration.

 -- Variable Scheme : tor-service-type
     C’est le type pour un service qui lance le démon de navigation
     anonyme Tor (https://torproject.org). Le service est configuré avec
     un enregistrement ‘<tor-configuration>’. Par défaut, le démon Tor
     est lancé en tant qu’utilisateur non privilégié ‘tor’, membre du
     groupe ‘tor’.

 -- Type de données : tor-configuration
     ‘tor’ (par défaut : ‘tor’)
          Le paquet qui fournit le démon Tor. Ce paquet doit fournir le
          démon ‘bin/tor’ relativement à son répertoire de sortie. Le
          paquet par défaut est le l’implémentation du projet Tor
          (https://www.torproject.org).

     ‘config-file’ (par défaut : ‘(plain-file "empty" "")’)
          Le fichier de configuration à utiliser. Il sera ajouté au
          fichier de configuration par défaut, et le fichier de
          configuration final sera passé à ‘tor’ via son option ‘-f’.
          Cela peut être n’importe quel objet « simili-fichier » (*note
          file-like objects: G-Expressions.). Voir ‘man tor’ pour plus
          de détails sur la syntaxe du fichier de configuration.

     ‘hidden-services’ (par défaut : ‘'()’)
          La liste des enregistrements ‘<hidden-service>’ à utiliser.
          Pour n’importe quel service cache que vous ajoutez à cette
          liste, la configuration appropriée pour activer le service
          caché sera automatiquement ajouté au fichier de configuration
          par défaut. Vous pouvez aussi créer des enregistrements
          ‘<hidden-service>’ avec la procédure ‘tor-hidden-service’
          décrite plus bas.

     ‘socks-socket-type’ (par défaut : ‘'tcp’)
          Le type de socket par défaut que Tor devrait utiliser pour les
          socket SOCKS. Cela doit être soit ‘'tcp’ soit ‘'unix’. S’il
          s’agit de ‘'tcp’, alors Tor écoutera pas défaut sur le port
          TCP 9050 sur l’interface de boucle locale (c.-à-d. localhost).
          S’il s’agit de ‘'unix’, Tor écoutera sur le socket UNIX domain
          ‘/var/run/tor/socks-sock’, qui sera inscriptible pour les
          membres du groupe ‘tor’.

          Si vous voulez personnaliser le socket SOCKS plus avant,
          laissez ‘socks-socket-type’ à sa valeur par défaut de ‘'tcp’
          et utilisez ‘config-file’ pour remplacer les valeurs par
          défaut avec votre propre option ‘SocksPort’.

 -- Procédure Scheme : tor-hidden-service NAME MAPPING
     Définie un “service caché” pour Tor nommé NAME qui implémente
     MAPPING. MAPPING est une liste de paires de port et d’hôte, comme
     dans :

           '((22 "127.0.0.1:22")
             (80 "127.0.0.1:8080"))

     Dans cet exemple, le port 22 du service caché est relié au port
     local 22 et le port 80 est relié au port local 8080.

     Cela crée un répertoire ‘/var/lib/tor/hidden-services/NAME’ où le
     fichier ‘hostname’ contient le nom d’hôte ‘.onion’ pour le service
     caché.

     Voir the Tor project’s documentation
     (https://www.torproject.org/docs/tor-hidden-service.html.en) pour
     trouver plus d’information.

   Le module ‘(gnu services rsync)’ fournit les services suivant :

   Vous pourriez vouloir un démon rsync si vous voulez que des fichiers
soient disponibles pour que n’importe qui (ou juste vous) puisse
télécharger des fichiers existants ou en téléverser des nouveaux.

 -- Variable Scheme : rsync-service-type
     C’est le type pour le démon rsync (https://rsync.samba.org). La
     valeur de ce service est un enregistrement ‘rsync-configuration’
     comme dans cet exemple :

          (service rsync-service-type)

     Voir plus pas pour trouver des détails à propos de
     ‘rsync-configuration’.

 -- Type de données : rsync-configuration
     Type de données représentant la configuration de ‘rsync-service’.

     ‘package’ (par défaut : RSYNC)
          Le paquet ‘rsync’ à utiliser.

     ‘port-number’ (par défaut : ‘873’)
          Le port TCP sur lequel ‘rsync’ écoute les connexions
          entrantes. Si le port est inférieur à ‘1024’, ‘rsync’ doit
          être démarré en tant qu’utilisateur et groupe ‘root’.

     ‘pid-file’ (par défaut : ‘"/var/run/rsyncd/rsyncd.pid"’)
          Nom du fichier où ‘rsync’ écrit son PID.

     ‘lock-file’ (par défaut : ‘"/var/run/rsyncd/rsyncd.lock"’)
          Nom du fichier où ‘rsync’ écrit son fichier de verrouillage.

     ‘log-file’ (par défaut : ‘"/var/log/rsyncd.log"’)
          Nom du fichier où ‘rsync’ écrit son fichier de journal.

     ‘use-chroot?’ (par défaut : #T)
          S’il faut utiliser un chroot pour le répertoire partagé de
          ‘rsync’.

     ‘share-path’ (par défaut : ‘/srv/rsync’)
          Emplacement du répertoire partagé de ‘rsync’.

     ‘share-comment’ (par défaut : ‘"Rsync share"’)
          Commentaire du répertoire partagé de ‘rsync’.

     ‘read-only?’ (par défaut : #F)
          Permission en écriture sur le répertoire partagé.

     ‘timeout’ (par défaut : ‘300’)
          Délai d’attente d’entrée-sortie en secondes.

     ‘user’ (par défaut : "ROOT")
          Propriétaire du processus ‘rsync’.

     ‘group’ (par défaut : "ROOT")
          Groupe du processus ‘rsync’.

     ‘uid’ (par défaut : "RSYNCD")
          Nom d’utilisateur ou ID utilisateur en tant que lequel les
          transferts de fichiers ont lieu si le démon a été lancé en
          ‘root’.

     ‘gid’ (par défaut : "RSYNCD")
          Nom du groupe ou ID du groupe qui sera utilisé lors de l’accès
          au module.

   En plus, ‘(gnu services ssh)’ fournit les services suivant.

 -- Procédure Scheme : lsh-service [#:host-key "/etc/lsh/host-key"]
          [#:daemonic? #t] [#:interfaces '()] [#:port-number 22]
          [#:allow-empty-passwords? #f] [#:root-login? #f]
          [#:syslog-output? #t] [#:x11-forwarding? #t]
          [#:tcp/ip-forwarding? #t] [#:password-authentication? #t]
          [#:public-key-authentication? #t] [#:initialize? #t]
     Lance le programme ‘lshd’ de LSH pour écouter sur le port
     PORT-NUMBER. HOST-KEY doit désigner un fichier contenant la clef
     d’hôte et ne doit être lisible que par root.

     Lorsque DAEMONIC? est vrai, ‘lshd’ se détachera du terminal qui le
     contrôle et enregistrera ses journaux avec syslogd, à moins que
     SYSLOG-OUTPUT? ne soit faux. Évidemment, cela rend aussi
     lsh-service dépendant de l’existence d’un service syslogd. Lorsque
     PID-FILE? est vrai, ‘lshd’ écrit son PID dans le fichier PID-FILE.

     Lorsque INITIALIZE? est vrai, la graine et la clef d’hôte seront
     créés lors de l’activation du service s’ils n’existent pas encore.
     Cela peut prendre du temps et demande une interaction.

     Lorsque INITIALIZE? est faux, c’est à l’utilisateur d’initialiser
     le générateur d’aléatoire (*note (lsh)lsh-make-seed::) et de crée
     une paire de clefs dont la clef privée sera stockée dans le fichier
     HOST-KEY (*note (lsh)lshd basics::).

     Lorsque INTERFACES est vide, lshd écoute les connexions sur toutes
     les interfaces réseau ; autrement, INTERFACES doit être une liste
     de noms d’hôtes et d’adresses.

     ALLOW-EMPTY-PASSWORDS? spécifie si les connexions avec des mots de
     passes vides sont acceptés et ROOT-LOGIN? spécifie si la connexion
     en root est acceptée.

     Les autres options devraient être évidentes.

 -- Variable Scheme : openssh-service-type
     C’est le type pour le démon ssh OpenSSH (http://www.openssh.org),
     ‘sshd’. Sa valeur doit être un enregistrement
     ‘openssh-configuration’ comme dans cet exemple :

          (service openssh-service-type
                   (openssh-configuration
                     (x11-forwarding? #t)
                     (permit-root-login 'without-password)
                     (authorized-keys
                       `(("alice" ,(local-file "alice.pub"))
                         ("bob" ,(local-file "bob.pub"))))))

     Voir plus bas pour trouver des détails sur ‘openssh-configuration’.

     Ce service peut être étendu avec des clefs autorisées
     supplémentaires, comme dans cet exemple :

          (service-extension openssh-service-type
                             (const `(("charlie"
                                       ,(local-file "charlie.pub")))))

 -- Type de données : openssh-configuration
     C’est l’enregistrement de la configuration de la commande ‘sshd’
     d’OpenSSH.

     ‘pid-file’ (par défaut : ‘"/var/run/sshd.pid"’)
          Nom du fichier où ‘sshd’ écrit son PID.

     ‘port-number’ (par défaut : ‘22’)
          Port TCP sur lequel ‘sshd’ écoute les connexions entrantes.

     ‘permit-root-login’ (par défaut : ‘#f’)
          Ce champ détermine si et quand autoriser les connexions en
          root. Si la valeur est ‘#f’, les connexions en root sont
          désactivées ; si la valeur est ‘#t’, elles sont autorisées.
          S’il s’agit du symbole ‘'without-password’, alors les
          connexions root sont autorisées mais pas par une
          authentification par mot de passe.

     ‘allow-empty-passwords?’ (par défaut : ‘#f’)
          Lorsque la valeur est vraie, les utilisateurs avec un mot de
          passe vide peuvent se connecter. Sinon, ils ne peuvent pas.

     ‘password-authentication?’ (par défaut : ‘#t’)
          Lorsque la valeur est vraie, les utilisateurs peuvent se
          connecter avec leur mot de passe. Sinon, ils doivent utiliser
          une autre méthode d’authentification.

     ‘public-key-authentication?’ (par défaut : ‘#t’)
          Lorsque la valeur est vraie, les utilisateurs peuvent se
          connecter avec leur clef publique. Sinon, les utilisateurs
          doivent utiliser une autre méthode d’authentification.

          Les clefs publiques autorisées sont stockées dans
          ‘~/.ssh/authorized_keys’. Ce n’est utilisé que par le
          protocole version 2.

     ‘x11-forwarding?’ (par défaut : ‘#f’)
          Lorsque la valeur est vraie, le transfert de connexion du
          client graphique X11 est activé — en d’autre termes, les
          options ‘-X’ et ‘-Y’ de ‘ssh’ fonctionneront.

     ‘allow-agent-forwarding?’ (par défaut : ‘#t’)
          Indique s’il faut autoriser la redirection d’agent.

     ‘allow-tcp-forwarding?’ (par défaut : ‘#t’)
          Indique s’il faut autoriser la redirection TCP.

     ‘gateway-ports?’ (par défaut : ‘#f’)
          Indique s’il faut autoriser les ports de passerelle.

     ‘challenge-response-authentication?’ (par défaut : ‘#f’)
          Spécifie si l’authentification par défi est autorisée (p. ex.
          via PAM).

     ‘use-pam?’ (par défaut : ‘#t’)
          Active l’interface avec le module d’authentification
          greffable, PAM. Si la valeur est ‘#t’, cela activera
          l’authentification PAM avec
          ‘challenge-response-authentication?’ et
          ‘password-authentication?’, en plus des modules de compte et
          de session de PAM pour tous les types d’authentification.

          Comme l’authentification par défi de PAM sert généralement un
          rôle équivalent à l’authentification par mot de passe, vous
          devriez désactiver soit ‘challenge-response-authentication?’,
          soit ‘password-authentication?’.

     ‘print-last-log?’ (par défaut : ‘#t’)
          Spécifie si ‘sshd’ devrait afficher la date et l’heure de
          dernière connexion des utilisateurs lorsqu’un utilisateur se
          connecte de manière interactive.

     ‘subsystems’ (par défaut : ‘'(("sftp" "internal-sftp"))’)
          Configure les sous-systèmes externes (p. ex. le démon de
          transfert de fichiers).

          C’est une liste de paires, composées chacune du nom du
          sous-système et d’une commande (avec éventuellement des
          arguments) à exécuter à la demande du sous-système.

          The command ‘internal-sftp’ implements an in-process SFTP
          server. Alternatively, one can specify the ‘sftp-server’
          command:
               (service openssh-service-type
                        (openssh-configuration
                         (subsystems
                          `(("sftp" ,(file-append openssh "/libexec/sftp-server"))))))

     ‘accepted-environment’ (par défaut : ‘'()’)
          Liste de chaînes de caractères qui décrivent les variables
          d’environnement qui peuvent être exportées.

          Chaque chaîne a sa propre ligne. Voir l’option ‘AcceptEnv’
          dans ‘man sshd_config’.

          This example allows ssh-clients to export the ‘COLORTERM’
          variable. It is set by terminal emulators, which support
          colors. You can use it in your shell’s resource file to enable
          colors for the prompt and commands if this variable is set.

               (service openssh-service-type
                        (openssh-configuration
                          (accepted-environment '("COLORTERM"))))

     ‘authorized-keys’ (par défaut : ‘'()’)
          C’est la liste des clefs autorisées. Chaque élément de la
          liste est un nom d’utilisateur suivit d’un ou plusieurs objets
          simili-fichiers qui représentent les clefs publiques SSH. Par
          exemple :

               (openssh-configuration
                 (authorized-keys
                   `(("rekado" ,(local-file "rekado.pub"))
                     ("chris" ,(local-file "chris.pub"))
                     ("root" ,(local-file "rekado.pub") ,(local-file "chris.pub")))))

          enregistre les clefs publiques spécifiées pour les comptes
          ‘rekado’, ‘chris’ et ‘root’.

          Des clefs autorisées supplémentaires peuvent être spécifiées
          via ‘service-extension’.

          Remarquez que cela n’interfère _pas_ avec l’utilisation de
          ‘~/.ssh/authorized_keys’.

     ‘log-level’ (par défaut : ‘'info’)
          C’est le symbole qui spécifie le niveau de journalisation :
          ‘quiet’, ‘fatal’, ‘error’, ‘info’, ‘verbose’, ‘debug’, etc.
          Voir la page de manuel de ‘sshd_config’ pour trouver la liste
          complète des noms de niveaux.

     ‘extra-content’ (par défaut : ‘""’)
          Ce champ peut être utilisé pour ajouter un texte arbitraire au
          fichier de configuration. C’est particulièrement utile pour
          des configurations élaborées qui ne pourraient pas être
          exprimées autrement. Cette configuration, par exemple,
          désactiverait les connexions en root, mais les permettrait
          depuis une adresse IP spécifique :

               (openssh-configuration
                 (extra-content "\
               Match Address 192.168.0.1
                 PermitRootLogin yes"))

 -- Procédure Scheme : dropbear-service [CONFIG]
     Lance le démon SSH Dropbear
     (https://matt.ucc.asn.au/dropbear/dropbear.html) avec la
     configuration CONFIG donnée, un objet ‘<dropbear-configuration>’.

     Par exemple, pour spécifier un service Dropbear qui écoute sur le
     port 1234, ajoutez cet appel au champ ‘services’ de votre système
     d’exploitation :

          (dropbear-service (dropbear-configuration
                              (port-number 1234)))

 -- Type de données : dropbear-configuration
     Ce type de données représente la configuration d’un démon SSH
     Dropbear.

     ‘dropbear’ (par défaut : DROPBEAR)
          Le paquet Dropbear à utiliser.

     ‘port-number’ (par défaut : 22)
          Le port TCP sur lequel le démon attend des connexions
          entrantes.

     ‘syslog-output?’ (par défaut : ‘#t’)
          Indique s’il faut activer la sortie vers syslog.

     ‘pid-file’ (par défaut : ‘"/var/run/dropbear.pid"’)
          Nom du fichier de PID du démon.

     ‘root-login?’ (par défaut : ‘#f’)
          Indique s’il faut autoriser les connexions en ‘root’.

     ‘allow-empty-passwords?’ (par défaut : ‘#f’)
          Indique s’il faut autoriser les mots de passes vides.

     ‘password-authentication?’ (par défaut : ‘#t’)
          Indique s’il faut autoriser l’authentification par mot de
          passe.

 -- Scheme Variable : autossh-service-type
     This is the type for the AutoSSH
     (https://www.harding.motd.ca/autossh) program that runs a copy of
     ‘ssh’ and monitors it, restarting it as necessary should it die or
     stop passing traffic. AutoSSH can be run manually from the
     command-line by passing arguments to the binary ‘autossh’ from the
     package ‘autossh’, but it can also be run as a Guix service. This
     latter use case is documented here.

     AutoSSH can be used to forward local traffic to a remote machine
     using an SSH tunnel, and it respects the ‘~/.ssh/config’ of the
     user it is run as.

     For example, to specify a service running autossh as the user
     ‘pino’ and forwarding all local connections to port ‘8081’ to
     ‘remote:8081’ using an SSH tunnel, add this call to the operating
     system’s ‘services’ field:

          (service autossh-service-type
                   (autossh-configuration
                    (user "pino")
                    (ssh-options (list "-T" "-N" "-L" "8081:localhost:8081" "remote.net"))))

 -- Data Type : autossh-configuration
     This data type represents the configuration of an AutoSSH service.

     ‘user’ (default ‘"autossh"’)
          The user as which the AutoSSH service is to be run. This
          assumes that the specified user exists.

     ‘poll’ (default ‘600’)
          Specifies the connection poll time in seconds.

     ‘first-poll’ (default ‘#f’)
          Specifies how many seconds AutoSSH waits before the first
          connection test. After this first test, polling is resumed at
          the pace defined in ‘poll’. When set to ‘#f’, the first poll
          is not treated specially and will also use the connection poll
          specified in ‘poll’.

     ‘gate-time’ (default ‘30’)
          Specifies how many seconds an SSH connection must be active
          before it is considered successful.

     ‘log-level’ (default ‘1’)
          The log level, corresponding to the levels used by syslog—so
          ‘0’ is the most silent while ‘7’ is the chattiest.

     ‘max-start’ (default ‘#f’)
          The maximum number of times SSH may be (re)started before
          AutoSSH exits. When set to ‘#f’, no maximum is configured and
          AutoSSH may restart indefinitely.

     ‘message’ (default ‘""’)
          The message to append to the echo message sent when testing
          connections.

     ‘port’ (default ‘"0"’)
          The ports used for monitoring the connection. When set to
          ‘"0"’, monitoring is disabled. When set to ‘"N"’ where N is a
          positive integer, ports N and N+1 are used for monitoring the
          connection, such that port N is the base monitoring port and
          ‘n+1’ is the echo port. When set to ‘"N:M"’ where N and M are
          positive integers, the ports N and N+1 are used for monitoring
          the connection, such that port N is the base monitoring port
          and M is the echo port.

     ‘ssh-options’ (default ‘'()’)
          The list of command-line arguments to pass to ‘ssh’ when it is
          run. Options ‘-f’ and ‘-M’ are reserved for AutoSSH and may
          cause undefined behaviour.

 -- Variable Scheme : %facebook-host-aliases
     Cette variable contient une chaîne de caractères à utiliser dans
     ‘/etc/hosts’ (*note (libc)Host Names::). Chaque ligne contient une
     entrée qui fait correspondre les noms des serveurs connus du
     service en ligne Facebook — p. ex. ‘www.facebook.com’ — à l’hôte
     local — ‘127.0.0.1’ ou son équivalent en IPv6, ‘::1’.

     Cette variable est typiquement utilisée dans le champ ‘hosts-file’
     d’une déclaration ‘operating-system’ (*note ‘/etc/hosts’: Référence
     de système d'exploitation.) :

          (use-modules (gnu) (guix))

          (operating-system
            (host-name "mamachine")
            ;; ...
            (hosts-file
              ;; Crée un fichier /etc/hosts avec des alias pour « localhost »
              ;; et « mamachine », ainsi que pour les serveurs de Facebook.
              (plain-file "hosts"
                          (string-append (local-host-aliases host-name)
                                         %facebook-host-aliases))))

     Ce mécanisme peut éviter que des programmes qui tournent
     localement, comme des navigateurs Web, ne se connectent à Facebook.

   Le module ‘(gnu services avahi)’ fourni la définition suivante.

 -- Variable Scheme : avahi-service-type
     C’est le service qui lance ‘avahi-daemon’, un service système qui
     répond aux requêtes mDNS/DNS-SD qui permet la découverte de service
     et la recherche de nom en « zéro configuration » (voir
     <https://avahi.org/>). Sa valeur doit être un enregistrement
     ‘zero-configuration’ — voir plus bas.

     This service extends the name service cache daemon (nscd) so that
     it can resolve ‘.local’ host names using nss-mdns
     (https://0pointer.de/lennart/projects/nss-mdns/). *Note Name
     Service Switch::, for information on host name resolution.

     En plus, cela ajoute le paquet AVAHI au profil du système pour que
     les commandes comme ‘avahi-browse’ soient directement utilisables.

 -- Type de données : avahi-configuration
     Type de données représentant la configuration d’Avahi.

     ‘host-name’ (par défaut : ‘#f’)
          Si la valeur n’est pas ‘#f’, utilise cette valeur comme nom
          d’hôte à publier pour la machine ; sinon, utilise le vrai nom
          d’hôte de la machine.

     ‘publish?’ (par défaut : ‘#t’)
          Lorsque la valeur est vraie, permet la publication sur le
          réseau (en diffusion) des noms d’hôtes et des services.

     ‘publish-workstation?’ (par défaut : ‘#t’)
          Lorsque la valeur est vraie, ‘avahi-daemon’ publie le nom
          d’hôte et l’adresse IP de la machine via mDNS sur le réseau
          local. Pour voir les noms d’hôtes publiés sur votre réseau
          local, vous pouvez lancer :

               avahi-browse _workstation._tcp

     ‘wide-area?’ (par défaut : ‘#f’)
          Lorsque la valeur est vraie, DNS-SD sur DNS unicast est
          activé.

     ‘ipv4?’ (par défaut : ‘#t’)
     ‘ipv6?’ (par défaut : ‘#t’)
          Ces champs déterminent s’il faut utiliser des socket
          IPv4/IPv6.

     ‘domains-to-browse’ (par défaut : ‘'()’)
          C’est la liste des domaines sur lesquels naviguer.

 -- Variable Scheme : openvswitch-service-type
     C’est le type du service Open vSwitch
     (https://www.openvswitch.org), dont la valeur devrait être un objet
     ‘openvswitch-configuration’.

 -- Type de données : openvswitch-configuration
     Type de données représentant la configuration de Open vSwitch, un
     commutateur virtuel multiniveaux conçu pour rendre possible
     l’automatisation massive des réseaux avec des extensions
     programmables.

     ‘package’ (par défaut : OPENVSWITCH)
          Objet de paquet de Open vSwitch.

 -- Scheme Variable : pagekite-service-type
     This is the service type for the PageKite (https://pagekite.net)
     service, a tunneling solution for making localhost servers publicly
     visible, even from behind restrictive firewalls or NAT without
     forwarded ports. The value for this service type is a
     ‘pagekite-configuration’ record.

     Here’s an example exposing the local HTTP and SSH daemons:

          (service pagekite-service-type
                   (pagekite-configuration
                     (kites '("http:@kitename:localhost:80:@kitesecret"
                              "raw/22:@kitename:localhost:22:@kitesecret"))
                     (extra-file "/etc/pagekite.rc")))

 -- Data Type : pagekite-configuration
     Data type representing the configuration of PageKite.

     ‘package’ (default: PAGEKITE)
          Package object of PageKite.

     ‘kitename’ (default: ‘#f’)
          PageKite name for authenticating to the frontend server.

     ‘kitesecret’ (default: ‘#f’)
          Shared secret for authenticating to the frontend server. You
          should probably put this inside ‘extra-file’ instead.

     ‘frontend’ (default: ‘#f’)
          Connect to the named PageKite frontend server instead of the
          pagekite.net service.

     ‘kites’ (default: ‘'("http:@kitename:localhost:80:@kitesecret")’)
          List of service kites to use. Exposes HTTP on port 80 by
          default. The format is ‘proto:kitename:host:port:secret’.

     ‘extra-file’ (default: ‘#f’)
          Extra configuration file to read, which you are expected to
          create manually. Use this to add additional options and manage
          shared secrets out-of-band.


File: guix.fr.info,  Node: Système de fenêtrage X,  Next: Services d'impression,  Prev: Services réseau,  Up: Services

8.8.5 Système de fenêtrage X
----------------------------

La prise en chargue du système d’affichage graphique X Window — en
particulier Xorg — est fournit par le module ‘(gnu services xorg)’.
Remarquez qu’il n’y a pas de procédure ‘xorg-service’. À la place, le
serveur X est démarré par le “gestionnaire de connexion”, par défaut le
gestionnaire d’affichage de GNOME (GDM).

   GDM permet évidemment aux utilisateurs de se connecter et d’ouvrir un
gestionnaire de fenêtre ou un gestionnaire d’environnement autre que
GNOME ; pour ceux qui utilisent GNOME, GDM est requis pour certaines
fonctionnalités comme l’écran de verrouillage automatique.

   Pour utiliser X11, vous devez installer au moins un “gestionnaire de
fenêtre” — par exemple les paquets ‘windowmaker’ ou ‘openbox’ — de
préférence en l’ajoutant au champ ‘packages’ de votre définition de
système d’exploitation (*note system-wide packages: Référence de système
d'exploitation.).

 -- Variable Scheme : gdm-service-type
     This is the type for the GNOME Desktop Manager
     (https://wiki.gnome.org/Projects/GDM/) (GDM), a program that
     manages graphical display servers and handles graphical user
     logins. Its value must be a ‘gdm-configuration’ (see below).

     GDM cherche des “types de sessions” définies par les fichiers
     ‘.desktop’ dans ‘/run/current-system/profile/share/xsessions’ et
     permet aux utilisateurs de choisir une session depuis l’écran de
     connexion. Les paquets comme ‘gnmoe’, ‘xfce’ et ‘i3’ fournissent
     des fichiers ‘.desktop’ ; les ajouter à l’ensemble des paquets du
     système les rendra automatiquement disponibles sur l’écran de
     connexion.

     En plus, les fichiers ‘~/.xsession’ sont honorées. Lorsqu’il est
     disponible, ‘~/.xsession’ doit être un fichier exécutable qui
     démarre un gestionnaire de fenêtre au un autre client X.

 -- Type de données : gdm-configuration
     ‘auto-login?’ (par défaut : ‘#f’)
     ‘default-user’ (par défaut : ‘#f’)
          Lorsque ‘auto-login?’ est faux, GDM présente un écran de
          connexion.

          Lorsque ‘auto-login?’ est vrai, GDM se connecte directement en
          tant que ‘default-user’.

     ‘debug?’ (par défaut : ‘#f’)
          When true, GDM writes debug messages to its log.

     ‘gnome-shell-assets’ (par défaut : …)
          Liste de données requises par GDM : un thème d’icônes, des
          polices, etc.

     ‘xorg-configuration’ (par défaut : ‘(xorg-configuration)’)
          Configuration du serveur graphique Xorg.

     ‘xsession’ (par défaut : ‘xinitrc’)
          Le script à lancer avant de démarrer une session X.

     ‘dbus-daemon’ (par défaut : ‘dbus-daemon-wrapper’)
          Nom du fichier de l’exécutable ‘dbus-daemon’.

     ‘gdm’ (par défaut : ‘gdm’)
          Le paquet GDM à utiliser.

 -- Variable Scheme : slim-service-type
     C’est de type pour le gestionnaire de connexion graphique SLiM pour
     X11.

     Comme GDM, SLiM recherche des types de sessions décrites par des
     fichiers ‘.desktop’ et permet aux utilisateurs de choisir une
     session à partir de l’écran de connexion avec ‘F1’. Il comprend
     aussi les fichiers ‘~/.xsession’.

     Contrairement à GDM, SLiM ne démarre pas la session utilisateur sur
     un terminal virtuel différent à la connexion, ce qui signifie que
     vous ne pouvez démarrer qu’une seule session graphique. Si vous
     voulez pouvoir exécuter plusieurs sessions graphiques en même
     temps, vous devez ajouter plusieurs services SLiM à la liste des
     services de votre système. L’exemple suivant montre comment
     remplacer le service GDM par défaut par deux services SLiM sur les
     tty 7 et 8.

          (use-modules (gnu services)
                       (gnu services desktop)
                       (gnu services xorg)
                       (srfi srfi-1))  ;pour « remove »

          (operating-system
            ;; ...
            (services (cons* (service slim-service-type (slim-configuration
                                                         (display ":0")
                                                         (vt "vt7")))
                             (service slim-service-type (slim-configuration
                                                         (display ":1")
                                                         (vt "vt8")))
                             (remove (lambda (service)
                                       (eq? (service-kind service) gdm-service-type))
                                     %desktop-services))))

 -- Type de données : slim-configuration
     Type de données représentant la configuration de
     ‘slim-service-type’.

     ‘allow-empty-passwords?’ (par défaut : ‘#t’)
          S’il faut autoriser les connexions avec un mot de passe vide.

     ‘auto-login?’ (par défaut : ‘#f’)
     ‘default-user’ (par défaut : ‘""’)
          Lorsque ‘auto-login?’ est faux, SLiM présent un écran de
          connexion.

          Lorsque ‘auto-login?’ est vrai, SLiM se connecte directement
          en tant que ‘default-user’.

     ‘theme’ (par défaut : ‘%default-slim-theme’)
     ‘theme-name’ (par défaut : ‘%default-slim-theme-name’)
          Le thème graphique à utiliser et son nom.

     ‘auto-login-session’ (par défaut : ‘#f’)
          Si la valeur est vraie, elle doit être le nom d’un exécutable
          à démarrer comme session par défaut — p. ex. ‘(file-append
          windowmaker "/bin/windowmaker")’.

          Si la valeur est fausse, une session décrite par l’un des
          fichiers ‘.desktop’ disponibles dans
          ‘/run/current-system/profile’ et ‘~/.guix-profile’ sera
          utilisée.

               Remarque : Vous devez installer au moins un gestionnaire
               de fenêtres dans le profil du système ou dans votre
               profil utilisateur. Sinon, si ‘auto-login-session’ est
               faux, vous ne serez jamais capable de vous connecter.

     ‘xorg-configuration’ (par défaut : ‘(xorg-configuration)’)
          Configuration du serveur graphique Xorg.

     ‘display’ (par défaut : ‘":0"’)
          La session d’affichage sur laquelle démarrer le serveur
          graphique Xorg.

     ‘vt’ (par défaut : ‘"vt7"’)
          Le terminal virtuel sur lequel démarrer le serveur d’affichage
          graphique Xorg.

     ‘xauth’ (par défaut : ‘xauth’)
          Le paquet XAuth à utiliser.

     ‘shepherd’ (par défaut : ‘shepherd’)
          Le paquet Shepherd à utiliser pour invoquer ‘halt’ et
          ‘reboot’.

     ‘sessreg’ (par défaut : ‘sessreg’)
          Le paquet sessreg à utiliser pour enregistrer la session.

     ‘slim’ (par défaut : ‘slim’)
          Le paquet SLiM à utiliser.

 -- Variable Scheme : %default-theme
 -- Variable Scheme : %default-theme-name
     Le thème SLiM par défaut et son nom.

 -- Type de données : sddm-configuration
     This is the data type representing the SDDM service configuration.

     ‘display-server’ (par défaut : "x11")
          Select display server to use for the greeter. Valid values are
          ‘"x11"’ or ‘"wayland"’.

     ‘numlock’ (par défaut : "on")
          Valid values are ‘"on"’, ‘"off"’ or ‘"none"’.

     ‘halt-command’ (par défaut : ‘#~(string-apppend #$shepherd "/sbin/halt")’)
          La commande à lancer à l’arrêt du système.

     ‘reboot-command’ (par défaut : ‘#~(string-append #$shepherd "/sbin/reboot")’)
          La commande à lancer lors du redémarrage du système.

     ‘theme’ (par défaut : "maldives")
          Theme to use. Default themes provided by SDDM are ‘"elarun"’,
          ‘"maldives"’ or ‘"maya"’.

     ‘themes-directory’ (par défaut : "/run/current-system/profile/share/sddm/themes")
          Le répertoire où se trouvent les thèmes.

     ‘faces-directory’ (par défaut : "/run/current-system/profile/share/sddm/faces")
          Répertoire où se trouvent les avatars.

     ‘default-path’ (par défaut : "/run/current-system/profile/bin")
          Le PATH par défaut à utiliser.

     ‘minimum-uid’ (default: 1000)
          Minimum UID displayed in SDDM and allowed for log-in.

     ‘maximum-uid’ (default: 2000)
          Maximum UID to display in SDDM.

     ‘remember-last-user?’ (par défaut : #t)
          S’il faut se rappeler le dernier utilisateur connecté.

     ‘remember-last-session?’ (par défaut : #t)
          S’il faut se rappeler la dernière session.

     ‘hide-users’ (par défaut : "")
          Les noms d’utilisateurs à cacher sur l’écran d’accueil de
          SDDM.

     ‘hide-shells’ (par défaut : ‘#~(string-append #$shadow "/sbin/nologin")’)
          Les utilisateurs avec les shells listés seront cachés sur
          l’écran d’accueil de SDDM.

     ‘session-command’ (par défaut : ‘#~(string-append #$sddm "/share/sddm/scripts/wayland-session")’)
          Le script à lancer avant de démarrer une session wayland.

     ‘sessions-directory’ (par défaut : "/run/current-system/profile/share/wayland-sessions")
          Le répertoire où trouver les fichiers .desktop qui démarrent
          des sessions wayland.

     ‘xorg-configuration’ (par défaut : ‘(xorg-configuration)’)
          Configuration du serveur graphique Xorg.

     ‘xauth-path’ (par défaut : ‘#~(string-append #$xauth "/bin/xauth")’)
          Chemin vers xauth.

     ‘xephyr-path’ (par défaut : ‘#~(string-append #$xorg-server "/bin/Xephyr")’)
          Chemin vers Xephyr.

     ‘xdisplay-start’ (par défaut : ‘#~(string-append #$sddm "/share/sddm/scripts/Xsetup")’)
          Le script à lancer après avoir démarré xorg-server.

     ‘xdisplay-stop’ (par défaut : ‘#~(string-append #$sddm "/share/sddm/scripts/Xstop")’)
          Le script à lancer avant d’arrêter xorg-server.

     ‘xsession-command’ (par défaut : ‘xinitrc’)
          Le script à lancer avant de démarrer une session X.

     ‘xsessions-directory’ (par défaut : "/run/current-system/profile/share/xsessions")
          Répertoire où trouver les fichiers .desktop pour les sessions
          X.

     ‘minimum-vt’ (par défaut : 7)
          VT minimal à utiliser.

     ‘auto-login-user’ (par défaut : "")
          Utilisateur à utiliser pour la connexion automatique.

     ‘auto-login-session’ (par défaut : "")
          Le fichier desktop à utiliser pour la connexion automatique.

     ‘relogin?’ (par défaut : #f)
          S’il faut se reconnecter après la déconnexion.

 -- Scheme Variable : sddm-service-type
     This is the type of the service to run the SDDM display manager
     (https://github.com/sddm/sddm). Its value must be a
     ‘sddm-configuration’ record (see below).

     Here’s an example use:

          (service sddm-service-type
                   (sddm-configuration
                     (auto-login-user "alice")
                     (auto-login-session "xfce.desktop")))

 -- Type de données : sddm-configuration
     This data type represents the configuration of the SDDM login
     manager. The available fields are:

     ‘sddm’ (default: ‘sddm’)
          The SDDM package to use.

     ‘display-server’ (default: ‘"x11"’)
          This must be either ‘"x11"’ or ‘"wayland"’.

     ‘auto-login-user’ (default: ‘""’)
          If non-empty, this is the user account under which to log in
          automatically.

     ‘auto-login-session’ (default: ‘""’)
          If non-empty, this is the ‘.desktop’ file name to use as the
          auto-login session.

 -- Type de données : xorg-configuration
     Ce type de données représente la configuration du serveur
     d’affichage graphique Xorg. Remarquez qu’il ne s’agit pas d’un
     service Xorg ; à la place, le serveur X est démarré par un «
     gestionnaire d’affichage graphique » comme GDM, SDDM et SLiM.
     Ainsi, la configuration de ces gestionnaires d’affichage agrègent
     un enregistrement ‘xorg-configuration’.

     ‘modules’ (par défaut : ‘%default-xorg-modules’)
          C’est une liste de “paquets de module” chargés par le serveur
          Xorg — p. ex. ‘xf86-video-vesa’, ‘xf86-input-keyboard’ etc.

     ‘fonts’ (par défaut : ‘%default-xorg-fonts’)
          C’est une liste de répertoires de polices à ajouter au “chemin
          de polices” du serveur.

     ‘drivers’ (par défaut : ‘'()’)
          Cela doit être soit la liste vide, auquel cas Xorg choisit un
          pilote graphique automatiquement, soit une liste de noms de
          pilotes qui seront essayés dans cet ordre — p. ex.
          ‘("modesetting" "vesa")’

     ‘resolutions’ (par défaut : ‘'()’)
          Lorsque ‘resolutions’ est la liste vide, Xorg choisit une
          résolution d’écran appropriée. Sinon, il doit s’agir d’une
          liste de résolutions — p. ex. ‘((1024 768) (640 480))’

     ‘keyboard-layout’ (par défaut : ‘#f’)
          Si la valeur est ‘#f’, Xorg utilise la disposition du clavier
          par défaut — habituellement la disposition anglaise américaine
          (« qwerty ») pour un clavier de PC à 105 touches.

          Sinon cela doit être un objet ‘keyboard-layout’ spécifiant la
          disposition du clavier à utiliser lorsque Xorg tourne. *Note
          Disposition du clavier:: pour plus d’informations sur la
          manière de spécifier la disposition du clavier.

     ‘extra-config’ (par défaut : ‘'()’)
          C’est une liste de chaînes de caractères ou d’objets ajoutés
          au fichier de configuration. Elle est utile pour ajouter du
          texte supplémentaire directement dans le fichier de
          configuration.

     ‘server’ (par défaut : ‘xorg-server’)
          C’est le paquet fournissant le serveur Xorg.

     ‘server-arguments’ (par défaut : ‘%default-xorg-server-arguments’)
          Liste d’arguments de la ligne de commande supplémentaires à
          passer au serveur X. La valeur par défaut est ‘-nolisten tcp’.

 -- Procédure Scheme : set-xorg-configuration CONFIG
          [LOGIN-MANAGER-SERVICE-TYPE]
     Dit au gestionnaire de connexion (de type
     LOGIN-MANAGER-SERVICE-TYPE) d’utiliser CONFIG, un enregistrement
     ‘<xorg-configuration>’.

     Comme la configuration Xog est incluse dans la configuration du
     gestionnaire de connexion — p. ex. ‘gdm-configuration’ — cette
     procédure fournit un raccourci pour configurer Xorg.

 -- Procédure Scheme : xorg-start-command [CONFIG]
     Renvoie un script ‘startx’ dans lequel les modules, les polices,
     etc., spécifiés dans CONFIG sont disponibles. Le résultat devrait
     être utilisé à la place de ‘startx’.

     Habituellement le serveur X est démarré par un gestionnaire de
     connexion.

 -- Procédure Scheme : screen-locker-service PACKAGE [PROGRAM]
     Ajoute PACKAGE, un paquet pour un verrouiller l’écran ou un
     économiseur d’écran dont la commande est PROGRAM, à l’ensemble des
     programmes setuid et lui ajoute une entrée PAM. Par exemple :

          (screen-locker-service xlockmore "xlock")

     rend utilisable le bon vieux XlockMore.


File: guix.fr.info,  Node: Services d'impression,  Next: Services de bureaux,  Prev: Système de fenêtrage X,  Up: Services

8.8.6 Services d’impression
---------------------------

Le module ‘(gnu services cups)’ fournit une définition de service Guix
pour le service d’impression CUPS. Pour ajouter la prise en charge d’une
imprimante à un système Guix, ajoutez un ‘cups-service’ à la définition
du système d’exploitation :

 -- Variable Scheme : cups-service-type
     Le type de service pour un serveur d’impression CUPS. Sa valeur
     devrait être une configuration CUPS valide (voir plus bas). Pour
     utiliser les paramètres par défaut, écrivez simplement :
          (service cups-service-type)

   La configuration de CUPS contrôle les paramètres de base de votre
installation CUPS : sur quelles interfaces il doit écouter, que faire si
un travail échoue, combien de journalisation il faut faire, etc. Pour
ajouter une imprimante, vous devrez visiter l’URL <http://localhost:631>
ou utiliser un outil comme les services de configuration d’imprimante de
GNOME. Par défaut, la configuration du service CUPS générera un
certificat auto-signé si besoin, pour les connexions sécurisée avec le
serveur d’impression.

   Supposons que vous souhaitiez activer l’interface Web de CUPS et
ajouter le support pour les imprimantes Epson via le paquet ‘escpr’ et
pour les imprimantes HP via le paquet ‘hplip-minimal’. Vous pouvez le
faire directement, comme ceci (vous devez utiliser le module ‘(gnu
packages cups)’) :

     (service cups-service-type
              (cups-configuration
                (web-interface? #t)
                (extensions
                  (list cups-filters escpr hplip-minimal))))

   Remarque : si vous souhaitez utiliser la GUI basée sur Qt5 qui
provient du paquet hplip, nous vous suggérons d’installer le paquet
‘hplip’, soit dans votre configuration d’OS, soit en tant
qu’utilisateur.

   Les paramètres de configuration disponibles sont les suivants. Chaque
définition des paramètres est précédé par son type ; par exemple,
‘string-list foo’ indique que le paramètre ‘foo’ devrait être spécifié
comme une liste de chaînes de caractères. Il y a aussi une manière de
spécifier la configuration comme une chaîne de caractères, si vous avez
un vieux fichier ‘cupsd.conf’ que vous voulez porter depuis un autre
système ; voir la fin pour plus de détails.

   Les champs de ‘cups-configuration’ disponibles sont :

 -- paramètre de ‘cups-configuration’ : package cups
     Le paquet CUPS.

 -- paramètre de ‘cups-configuration’ : package-list extensions
     Pilotes et autres extensions du paquet CUPS.

 -- paramètre de ‘cups-configuration’ : files-configuration
          files-configuration
     Configuration de l’emplacement où écrire les journaux, quels
     répertoires utiliser pour les travaux d’impression et les
     paramètres de configuration privilégiés liés.

     Les champs ‘files-configuration’ disponibles sont :

      -- paramètre de ‘files-configuration’ : log-location access-log
          Définit le fichier de journal d’accès. Spécifier un nom de
          fichier vide désactive la génération de journaux d’accès. La
          valeur ‘stderr’ fait que les entrées du journal seront envoyés
          sur l’erreur standard lorsque l’ordonnanceur est lancé au
          premier plan ou vers le démon de journal système lorsqu’il
          tourne en tache de fond. La valeur ‘syslog’ fait que les
          entrées du journal sont envoyées au démon de journalisation du
          système. Le nom du serveur peut être inclus dans les noms de
          fichiers avec la chaîne ‘%s’, comme dans
          ‘/var/log/cups/%s-access_log’.

          La valeur par défaut est ‘"/var/log/cups/access_log"’.

      -- paramètre de ‘files-configuration’ : file-name cache-dir
          L’emplacement où CUPS devrait mettre les données en cache.

          La valeur par défaut est ‘"/var/cache/cups"’.

      -- paramètre de ‘files-configuration’ : string config-file-perm
          Spécifie les permissions pour tous les fichiers de
          configuration que l’ordonnanceur écrit.

          Remarquez que les permissions pour le fichier printers.conf
          sont actuellement masqués pour ne permettre que l’accès par
          l’utilisateur de l’ordonnanceur (typiquement root). La raison
          est que les URI des imprimantes contiennent des informations
          d’authentification sensibles qui ne devraient pas être connues
          sur le système. Il n’est pas possible de désactiver cette
          fonctionnalité de sécurité.

          La valeur par défaut est ‘"0640"’.

      -- paramètre de ‘files-configuration’ : log-location error-log
          Définit le fichier de journal d’erreur. Spécifier un nom de
          fichier vide désactive la génération de journaux d’erreur. La
          valeur ‘stderr’ fait que les entrées du journal seront envoyés
          sur l’erreur standard lorsque l’ordonnanceur est lancé au
          premier plan ou vers le démon de journalisation du système
          lorsqu’il tourne en tache de fond. La valeur ‘syslog’ fait que
          les entrées du journal sont envoyées au démon de
          journalisation du système. Le nom du serveur peut être inclus
          dans les noms de fichiers avec la chaîne ‘%s’, comme dans
          ‘/var/log/cups/%s-error_log’.

          La valeur par défaut est ‘"/var/log/cups/error_log"’.

      -- paramètre de ‘files-configuration’ : string fatal-errors
          Spécifie quelles erreurs sont fatales, qui font terminer
          l’ordonnanceur. Les types de chaînes sont :

          ‘none’
               Aucune erreur n’est fatale.

          ‘all’
               Toutes les erreurs ci-dessous sont fatales.

          ‘browse’
               Les erreurs d’initialisation de la navigation sont
               fatales, par exemple les connexion échouées au démon
               DNS-SD.

          ‘config’
               Les erreurs de syntaxe du fichier de configuration sont
               fatale.

          ‘listen’
               Les erreurs d’écoute ou de port sont fatales, sauf pour
               les erreurs d’IPv6 sur la boucle locale ou les adresses
               ‘any’.

          ‘log’
               Les erreurs de création ou d’écriture des fichiers de
               journal sont fatales.

          ‘permissions’
               Les mauvaises permissions des fichiers de démarrage sont
               fatales, par exemple un certificat TLS et des fichiers de
               clefs avec des permissions permettant la lecture à tout
               le monde.

          La valeur par défaut est ‘"all -browse"’.

      -- paramètre de ‘files-configuration’ : boolean file-device?
          Spécifie si le fichier de pseudo-périphérique peut être
          utilisé pour de nouvelles queues d’impression. L’URI
          <file:///dev/null> est toujours permise.

          La valeur par défaut est ‘#f’.

      -- paramètre de ‘files-configuration’ : string group
          Spécifie le nom ou l’ID du groupe qui sera utilisé lors de
          l’exécution de programmes externes.

          La valeur par défaut est ‘"lp"’.

      -- paramètre de ‘files-configuration’ : string log-file-perm
          Spécifie les permissions pour tous les fichiers de journal que
          l’ordonnanceur écrit.

          La valeur par défaut est ‘"0644"’.

      -- paramètre de ‘files-configuration’ : log-location page-log
          Définit le fichier de journal de page. Spécifier un nom de
          fichier vide désactive la génération de journaux de pages. La
          valeur ‘stderr’ fait que les entrées du journal seront envoyés
          sur l’erreur standard lorsque l’ordonnanceur est lancé au
          premier plan ou vers le démon de journal système lorsqu’il
          tourne en tache de fond. La valeur ‘syslog’ fait que les
          entrées du journal sont envoyées au démon de journalisation du
          système. Le nom du serveur peut être inclus dans les noms de
          fichiers avec la chaîne ‘%s’, comme dans
          ‘/var/log/cups/%s-page_log’.

          La valeur par défaut est ‘"/var/log/cups/page_log"’.

      -- paramètre de ‘files-configuration’ : string remote-root
          Spécifie le nom d’utilisateur associé aux accès non
          authentifiés par des clients qui se disent être l’utilisateur
          root. La valeur par défaut est ‘remroot’.

          La valeur par défaut est ‘"remroot"’.

      -- paramètre de ‘files-configuration’ : file-name request-root
          Spécifie le répertoire qui contient les travaux d’impression
          et d’autres données des requêtes HTTP.

          La valeur par défaut est ‘"/var/spool/cups"’.

      -- paramètre de ‘files-configuration’ : sandboxing sandboxing
          Spécifie le niveau d’isolation de sécurité appliqué aux
          filtres d’impression, aux moteurs et aux autres processus fils
          de l’ordonnanceur ; soit ‘relaxed’ soit ‘strict’. Cette
          directive n’est actuellement utilisée et supportée que sur
          macOS.

          La valeur par défaut est ‘strict’.

      -- paramètre de ‘files-configuration’ : file-name server-keychain
          Specifies the location of TLS certificates and private keys.
          CUPS will look for public and private keys in this directory:
          ‘.crt’ files for PEM-encoded certificates and corresponding
          ‘.key’ files for PEM-encoded private keys.

          La valeur par défaut est ‘"/etc/cups/ssl"’.

      -- paramètre de ‘files-configuration’ : file-name server-root
          Spécifie le répertoire contenant les fichiers de configuration
          du serveur.

          La valeur par défaut est ‘"/etc/cups"’.

      -- paramètre de ‘files-configuration’ : boolean sync-on-close?
          Spécifie si l’ordonnanceur appelle fsync(2) après avoir écrit
          la configuration ou les fichiers d’état.

          La valeur par défaut est ‘#f’.

      -- paramètre de ‘files-configuration’ :
               space-separated-string-list system-group
          Spécifie le groupe ou les groupes à utiliser pour
          l’authentification du groupe ‘@SYSTEM’.

      -- paramètre de ‘files-configuration’ : file-name temp-dir
          Spécifie le répertoire où les fichiers temporaires sont
          stockés.

          La valeur par défaut est ‘"/var/spool/cups/tmp"’.

      -- paramètre de ‘files-configuration’ : string user
          Spécifie le nom d’utilisateur ou l’ID utilisé pour lancer des
          programmes externes.

          La valeur par défaut est ‘"lp"’.

      -- ‘files-configuration’ parameter : string set-env
          Indique que la variable d’environnement spécifiée doit être
          passée aux processus fils.

          La valeur par défaut est ‘"variable value"’.

 -- paramètre de ‘cups-configuration’ : access-log-level
          access-log-level
     Spécifie le niveau de journalisation pour le fichier AccessLog. Le
     niveau ‘config’ enregistre les ajouts, suppressions et
     modifications d’imprimantes et de classes et lorsque les fichiers
     de configuration sont accédés ou mis à jour. Le niveau ‘actions’
     enregistre la soumission, la suspension, la libération, la
     modification et l’annulation des travaux et toutes les conditions
     de ‘config’. Le niveau ‘all’ enregistre toutes les requêtes.

     La valeur par défaut est ‘actions’.

 -- paramètre de ‘cups-configuration’ : boolean auto-purge-jobs?
     Spécifie s’il faut vider l’historique des travaux automatiquement
     lorsqu’il n’est plus nécessaire pour les quotas.

     La valeur par défaut est ‘#f’.

 -- ‘cups-configuration’ parameter : comma-separated-string-list
          browse-dns-sd-sub-types
     Specifies a list of DNS-SD sub-types to advertise for each shared
     printer. For example, ‘"_cups" "_print"’ will tell network clients
     that both CUPS sharing and IPP Everywhere are supported.

     Defaults to ‘"_cups"’.

 -- paramètre de ‘cups-configuration’ : browse-local-protocols
          browse-local-protocols
     Spécifie les protocoles à utiliser pour partager les imprimantes
     sur le réseau local.

     La valeur par défaut est ‘dnssd’.

 -- paramètre de ‘cups-configuration’ : boolean browse-web-if?
     Spécifie si l’interface web de CUPS est publiée.

     La valeur par défaut est ‘#f’.

 -- paramètre de ‘cups-configuration’ : boolean browsing?
     Spécifie si les imprimantes partagées sont publiées.

     La valeur par défaut est ‘#f’.

 -- paramètre de ‘cups-configuration’ : string classification
     Specifies the security classification of the server. Any valid
     banner name can be used, including ‘"classified"’,
     ‘"confidential"’, ‘"secret"’, ‘"topsecret"’, and ‘"unclassified"’,
     or the banner can be omitted to disable secure printing functions.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘cups-configuration’ : boolean classify-override?
     Spécifie si les utilisateurs peuvent remplacer la classification
     (page de couverture) des travaux d’impression individuels avec
     l’option ‘job-sheets’.

     La valeur par défaut est ‘#f’.

 -- paramètre de ‘cups-configuration’ : default-auth-type
          default-auth-type
     Spécifie le type d’authentification par défaut à utiliser.

     La valeur par défaut est ‘Basic’.

 -- paramètre de ‘cups-configuration’ : default-encryption
          default-encryption
     Spécifie si le chiffrement sera utilisé pour les requêtes
     authentifiées.

     La valeur par défaut est ‘Required’.

 -- paramètre de ‘cups-configuration’ : string default-language
     Spécifie la langue par défaut à utiliser pour le contenu textuel et
     web.

     La valeur par défaut est ‘"en"’.

 -- paramètre de ‘cups-configuration’ : string default-paper-size
     Spécifie la taille de papier par défaut pour les nouvelles queues
     d’impression. ‘"Auto"’ utilise la valeur par défaut du paramètre de
     régionalisation, tandis que ‘"None"’ spécifie qu’il n’y a pas de
     taille par défaut. Des noms de tailles spécifique sont par exemple
     ‘"Letter"’ et ‘"A4"’.

     La valeur par défaut est ‘"Auto"’.

 -- paramètre de ‘cups-configuration’ : string default-policy
     Spécifie la politique d’accès par défaut à utiliser.

     La valeur par défaut est ‘"default"’.

 -- paramètre de ‘cups-configuration’ : boolean default-shared?
     Spécifie si les imprimantes locales sont partagées par défaut.

     La valeur par défaut est ‘#t’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          dirty-clean-interval
     Spécifie le délai pour mettre à jour les fichiers de configuration
     et d’état. Une valeur de 0 fait que la mise à jour arrive aussi
     vite que possible, typiquement en quelques millisecondes.

     La valeur par défaut est ‘30’.

 -- paramètre de ‘cups-configuration’ : error-policy error-policy
     Specifies what to do when an error occurs. Possible values are
     ‘abort-job’, which will discard the failed print job; ‘retry-job’,
     which will retry the job at a later time; ‘retry-current-job’,
     which retries the failed job immediately; and ‘stop-printer’, which
     stops the printer.

     La valeur par défaut est ‘stop-printer’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          filter-limit
     Spécifie le coût maximum des filtres qui sont lancés en même temps,
     pour minimiser les problèmes de ressources de disque, de mémoire et
     de CPU. Une limite de 0 désactive la limite de filtrage. Une
     impression standard vers une imprimante non-PostScript requiert une
     limite de filtre d’environ 200. Une imprimante PostScript requiert
     environ la moitié (100). Mettre en place la limite en dessous de
     ces valeurs limitera l’ordonnanceur à un seul travail d’impression
     à la fois.

     La valeur par défaut est ‘0’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer filter-nice
     Spécifie la priorité des filtres de l’ordonnanceur qui sont lancés
     pour imprimer un travail. La valeur va de 0, la plus grande
     priorité, à 19, la plus basse priorité.

     La valeur par défaut est ‘0’.

 -- paramètre de ‘cups-configuration’ : host-name-lookups
          host-name-lookups
     Spécifie s’il faut faire des résolutions inverses sur les clients
     qui se connectent. Le paramètre ‘double’ fait que ‘cupsd’ vérifie
     que le nom d’hôte résolu depuis l’adresse correspond à l’une des
     adresses renvoyées par ce nom d’hôte. Les résolutions doubles
     évitent aussi que des clients avec des adresses non enregistrées ne
     s’adressent à votre serveur. N’initialisez cette valeur qu’à ‘#t’
     ou ‘double’ que si c’est absolument nécessaire.

     La valeur par défaut est ‘#f’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          job-kill-delay
     Spécifie le nombre de secondes à attendre avant de tuer les filtres
     et les moteurs associés avec un travail annulé ou suspendu.

     La valeur par défaut est ‘30’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          job-retry-interval
     Spécifie l’intervalle des nouvelles tentatives en secondes. C’est
     typiquement utilisé pour les queues de fax mais peut aussi être
     utilisé avec des queues d’impressions normales dont la politique
     d’erreur est ‘retry-job’ ou ‘retry-current-job’.

     La valeur par défaut est ‘30’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          job-retry-limit
     Spécifie le nombre de nouvelles tentatives pour les travaux. C’est
     typiquement utilisé pour les queues de fax mais peut aussi être
     utilisé pour les queues d’impressions dont la politique d’erreur
     est ‘retry-job’ ou ‘retry-current-job’.

     La valeur par défaut est ‘5’.

 -- paramètre de ‘cups-configuration’ : boolean keep-alive?
     Spécifie s’il faut supporter les connexion HTTP keep-alive.

     La valeur par défaut est ‘#t’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          keep-alive-timeout
     Spécifie combien de temps les connexions inactives avec les clients
     restent ouvertes, en secondes.

     La valeur par défaut est ‘30’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          limit-request-body
     Spécifie la taille maximale des fichiers à imprimer, des requêtes
     IPP et des données de formulaires HTML. Une limite de 0 désactive
     la vérification de la limite.

     La valeur par défaut est ‘0’.

 -- paramètre de ‘cups-configuration’ : multiline-string-list listen
     Écoute sur les interfaces spécifiées. Les valeurs valides sont de
     la forme ADRESSE:PORT, où ADRESSE est soit une adresse IPv6 dans
     des crochets, soit une adresse IPv4, soit ‘*’ pour indiquer toutes
     les adresses. Les valeurs peuvent aussi être des noms de fichiers
     de socket UNIX domain. La directive Listen est similaire à la
     directive Port mais vous permet de restreindre l’accès à des
     interfaces ou des réseaux spécifiques.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          listen-back-log
     Spécifie le nombre de connexions en attente qui seront permises. Ça
     n’affecte normalement que les serveurs très actifs qui ont atteint
     la limite MaxClients, mais peut aussi être déclenché par un grand
     nombre de connexions simultanées. Lorsque la limite est atteinte,
     le système d’exploitation refusera les connexions supplémentaires
     jusqu’à ce que l’ordonnanceur accepte les connexions en attente.

     La valeur par défaut est ‘128’.

 -- paramètre de ‘cups-configuration’ : location-access-control-list
          location-access-controls
     Spécifie un ensemble de contrôles d’accès supplémentaires.

     Les champs de ‘location-access-controls’ disponibles sont :

      -- paramètre de ‘location-access-controls’ : file-name path
          Spécifie le chemin d’URI auquel les contrôles d’accès
          s’appliquent.

      -- paramètre de ‘location-access-controls’ : access-control-list
               access-controls
          Les contrôles d’accès pour tous les accès à ce chemin, dans le
          même format que le champ ‘access-controls’ de
          ‘operation-access-control’.

          La valeur par défaut est ‘()’.

      -- paramètre de ‘location-access-controls’ :
               method-access-control-list method-access-controls
          Contrôles d’accès pour les accès spécifiques à la méthode à ce
          chemin.

          La valeur par défaut est ‘()’.

          Les champs de ‘method-access-controls’ disponibles sont :

           -- paramètre de ‘method-access-controls’ : boolean reverse?
               Si la valeur est ‘#t’, applique les contrôles d’accès à
               toutes les méthodes sauf les méthodes listées. Sinon,
               applique le contrôle uniquement aux méthodes listées.

               La valeur par défaut est ‘#f’.

           -- paramètre de ‘method-access-controls’ : method-list
                    methods
               Les méthodes auxquelles ce contrôle d’accès s’applique.

               La valeur par défaut est ‘()’.

           -- paramètre de ‘method-access-controls’ :
                    access-control-list access-controls
               Access control directives, as a list of strings. Each
               string should be one directive, such as ‘"Order
               allow,deny"’.

               La valeur par défaut est ‘()’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          log-debug-history
     Spécifie le nombre de messages de débogage qui sont retenu pour la
     journalisation si une erreur arrive dans un travail d’impression.
     Les messages de débogage sont journalisés indépendamment du
     paramètre LogLevel.

     La valeur par défaut est ‘100’.

 -- paramètre de ‘cups-configuration’ : log-level log-level
     Spécifie le niveau de journalisation du fichier ErrorLog. La valeur
     ‘none’ arrête toute journalisation alors que que ‘debug2’
     enregistre tout.

     La valeur par défaut est ‘info’.

 -- paramètre de ‘cups-configuration’ : log-time-format log-time-format
     Spécifie le format de la date et de l’heure dans les fichiers de
     journaux. La valeur ‘standard’ enregistre les secondes entières
     alors que ‘usecs’ enregistre les microsecondes.

     La valeur par défaut est ‘standard’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer max-clients
     Spécifie le nombre maximum de clients simultanés qui sont autorisés
     par l’ordonnanceur.

     La valeur par défaut est ‘100’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          max-clients-per-host
     Spécifie le nombre maximum de clients simultanés permis depuis une
     même adresse.

     La valeur par défaut est ‘100’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer max-copies
     Spécifie le nombre maximum de copies qu’un utilisateur peut
     imprimer pour chaque travail.

     La valeur par défaut est ‘9999’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          max-hold-time
     Spécifie la durée maximum qu’un travail peut rester dans l’état de
     suspension ‘indefinite’ avant qu’il ne soit annulé. La valeur 0
     désactive l’annulation des travaux suspendus.

     La valeur par défaut est ‘0’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer max-jobs
     Spécifie le nombre maximum de travaux simultanés autorisés. La
     valeur 0 permet un nombre illimité de travaux.

     La valeur par défaut est ‘500’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          max-jobs-per-printer
     Spécifie le nombre maximum de travaux simultanés autorisés par
     imprimante. La valeur 0 permet au plus MaxJobs travaux par
     imprimante.

     La valeur par défaut est ‘0’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          max-jobs-per-user
     Spécifie le nombre maximum de travaux simultanés permis par
     utilisateur. La valeur 0 permet au plus MaxJobs travaux par
     utilisateur.

     La valeur par défaut est ‘0’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          max-job-time
     Specifies the maximum time a job may take to print before it is
     canceled, in seconds. Set to 0 to disable cancellation of “stuck”
     jobs.

     La valeur par défaut est ‘10800’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          max-log-size
     Spécifie la taille maximale des fichiers de journaux avant qu’on ne
     les fasse tourner, en octets. La valeur 0 désactive la rotation.

     La valeur par défaut est ‘1048576’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          multiple-operation-timeout
     Spécifie la durée maximale à permettre entre les fichiers d’un
     travail en contenant plusieurs, en secondes.

     La valeur par défaut est ‘300’.

 -- paramètre de ‘cups-configuration’ : string page-log-format
     Spécifie le format des lignes PageLog. Les séquences qui commencent
     par un pourcent (‘%’) sont remplacées par l’information
     correspondante, tandis que les autres caractères sont copiés
     littéralement. Les séquences pourcent suivantes sont reconnues :

     ‘%%’
          insère un seul caractères pourcent

     ‘%{name}’
          insère la valeur de l’attribut IPP spécifié

     ‘%C’
          insère le nombre de copies pour la page actuelle

     ‘%P’
          insère le numéro de page actuelle

     ‘%T’
          insère la date et l’heure actuelle dans un format de journal
          commun

     ‘%j’
          insère l’ID du travail

     ‘%p’
          insère le nom de l’imprimante

     ‘%u’
          insère le nom d’utilisateur

     Si la valeur est la chaîne vide, le PageLog est désactivée. La
     chaîne ‘%p %u %j %T %P %C %{job-billing}
     %{job-originating-host-name} %{job-name} %{media} %{sides}’ crée un
     PageLog avec les entrées standards.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘cups-configuration’ : environment-variables
          environment-variables
     Passe les variables d’environnement spécifiées aux processus fils ;
     une liste de chaînes de caractères.

     La valeur par défaut est ‘()’.

 -- paramètre de ‘cups-configuration’ : policy-configuration-list
          policies
     Spécifie des politiques de contrôle d’accès nommées.

     Les champs de ‘policy-configuration’ disponibles sont :

      -- paramètre de ‘policy-configuration’ : string name
          Nom de la politique.

      -- paramètre de ‘policy-configuration’ : string job-private-access
          Spécifie une liste d’accès pour les valeurs privées du
          travail. ‘@ACL’ correspond aux valeurs
          requesting-user-name-allowed ou requesting-user-name-denied de
          l’imprimante. ‘@OWNER’ correspond au propriétaire du travail.
          ‘@SYSTEM’ correspond aux groupes listés dans le champ
          ‘system-group’ de la configuration ‘files-config’, qui est
          réifié dans le fichier ‘cups-files.conf(5)’. Les autres
          éléments possibles de la liste d’accès sont des noms
          d’utilisateurs spécifiques et ‘@GROUP’ pour indiquer les
          membres d’un groupe spécifique. La liste d’accès peut aussi
          être simplement ‘all’ ou ‘default’.

          La valeur par défaut est ‘"@OWNER @SYSTEM"’.

      -- paramètre de ‘policy-configuration’ : string job-private-values
          Spécifie la liste des valeurs de travaux à rendre privée, ou
          ‘all’, ‘default’, ou ‘none’.

          La valeur par défaut est ‘"job-name job-originating-host-name
          job-originating-user-name phone"’.

      -- paramètre de ‘policy-configuration’ : string
               subscription-private-access
          Spécifie un liste d’accès pour les valeurs privées de la
          souscription. ‘@ACL’ correspond aux valeurs
          requesting-user-name-allowed ou requesting-user-name-denied de
          l’imprimante. ‘@OWNER’ correspond au propriétaire du travail.
          ‘@SYSTEM’ correspond aux groupes listés dans le champ
          ‘system-group’ de la configuration ‘files-config’, qui est
          réifié dans le fichier ‘cups-files.conf(5)’. Les autres
          éléments possibles de la liste d’accès sont des noms
          d’utilisateurs spécifiques et ‘@GROUP’ pour indiquer les
          membres d’un groupe spécifique. La liste d’accès peut aussi
          être simplement ‘all’ ou ‘default’.

          La valeur par défaut est ‘"@OWNER @SYSTEM"’.

      -- paramètre de ‘policy-configuration’ : string
               subscription-private-values
          Spécifie la liste des valeurs de travaux à rendre privée, ou
          ‘all’, ‘default’, ou ‘none’.

          La valeur par défaut est ‘"notify-events notify-pull-method
          notify-recipient-uri notify-subscriber-user-name
          notify-user-data"’.

      -- paramètre de ‘policy-configuration’ :
               operation-access-control-list access-controls
          Contrôle d’accès par les actions IPP.

          La valeur par défaut est ‘()’.

 -- paramètre de ‘cups-configuration’ : boolean-or-non-negative-integer
          preserve-job-files
     Spécifie si les fichiers de travaux (les documents) sont préservés
     après qu’un travail est imprimé. Si une valeur numérique est
     spécifiée, les fichiers de travaux sont préservés pour le nombre de
     secondes indiquées après l’impression. Sinon, une valeur booléenne
     s’applique indéfiniment.

     La valeur par défaut est ‘86400’.

 -- paramètre de ‘cups-configuration’ : boolean-or-non-negative-integer
          preserve-job-history
     Spécifie si l’historique des travaux est préservé après qu’un
     travail est imprimé. Si une valeur numérique est spécifiée,
     l’historique des travaux est préservé pour le nombre de secondes
     indiquées après l’impression. Si la valeur est ‘#t’, l’historique
     des travaux est préservé jusqu’à atteindre la limite MaxJobs.

     La valeur par défaut est ‘#t’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer
          reload-timeout
     Spécifie la durée d’attente pour la fin des travaux avant de
     redémarrer l’ordonnanceur.

     La valeur par défaut est ‘30’.

 -- paramètre de ‘cups-configuration’ : string rip-cache
     Spécifie la quantité de mémoire maximale à utiliser pour convertir
     des documents en bitmaps pour l’imprimante.

     La valeur par défaut est ‘"128m"’.

 -- paramètre de ‘cups-configuration’ : string server-admin
     Spécifie l’adresse de courriel de l’administrateur système.

     La valeur par défaut est ‘"root@localhost.localdomain"’.

 -- paramètre de ‘cups-configuration’ : host-name-list-or-* server-alias
     La directive ServerAlias est utilisée pour la validation des
     en-tête HTTP Host lorsque les clients se connectent à
     l’ordonnanceur depuis des interfaces externes. Utiliser le nom
     spécial ‘*’ peut exposer votre système à des attaques connues de
     recombinaison DNS dans le navigateur, même lorsque vous accédez au
     site à travers un pare-feu. Si la découverte automatique des autres
     noms ne fonctionne pas, nous vous recommandons de lister chaque nom
     alternatif avec une directive SeverAlias plutôt que d’utiliser ‘*’.

     La valeur par défaut est ‘*’.

 -- paramètre de ‘cups-configuration’ : string server-name
     Spécifie le nom d’hôte pleinement qualifié du serveur.

     La valeur par défaut est ‘"localhost"’.

 -- paramètre de ‘cups-configuration’ : server-tokens server-tokens
     Spécifie les informations incluses dans les en-têtes Server des
     réponses HTTP. ‘None’ désactive l’en-tête Server. ‘ProductOnly’
     rapporte ‘CUPS’. ‘Major’ rapporte ‘CUPS 2’. ‘Minor’ rapporte ‘CUPS
     2.0’. ‘Minimal’ rapporte ‘CUPS 2.0.0’. ‘OS’ rapporte ‘CUPS 2.0.0
     (UNAME)’ où UNAME est la sortie de la commande ‘uname’. ‘Full’
     rapporte ‘CUPS 2.0.0 (UNAME) IPP/2.0’.

     La valeur par défaut est ‘Minimal’.

 -- paramètre de ‘cups-configuration’ : multiline-string-list ssl-listen
     Écoute des connexions chiffrées sur les interfaces spécifiées. Les
     valeurs valides sont de la forme ADRESSE:PORT, où ADRESSE est soit
     une adresse IPv6 dans des crochets, soit une adresse IPv4, soit ‘*’
     pour indiquer toutes les interfaces.

     La valeur par défaut est ‘()’.

 -- paramètre de ‘cups-configuration’ : ssl-options ssl-options
     Sets encryption options. By default, CUPS only supports encryption
     using TLS v1.0 or higher using known secure cipher suites. Security
     is reduced when ‘Allow’ options are used, and enhanced when ‘Deny’
     options are used. The ‘AllowRC4’ option enables the 128-bit RC4
     cipher suites, which are required for some older clients. The
     ‘AllowSSL3’ option enables SSL v3.0, which is required for some
     older clients that do not support TLS v1.0. The ‘DenyCBC’ option
     disables all CBC cipher suites. The ‘DenyTLS1.0’ option disables
     TLS v1.0 support - this sets the minimum protocol version to TLS
     v1.1.

     La valeur par défaut est ‘()’.

 -- paramètre de ‘cups-configuration’ : boolean strict-conformance?
     Spécifie si l’ordonnanceur demande aux clients d’adhérer aux
     spécifications IPP.

     La valeur par défaut est ‘#f’.

 -- paramètre de ‘cups-configuration’ : non-negative-integer timeout
     Spécifie le délai d’attente des requêtes HTTP, en secondes.

     La valeur par défaut est ‘300’.

 -- paramètre de ‘cups-configuration’ : boolean web-interface?
     Spécifie si l’interface web est activée.

     La valeur par défaut est ‘#f’.

   Maintenant, vous vous dîtes peut-être « oh la la, cher manuel de
Guix, je t’aime bien mais arrête maintenant avec ces options de
configuration »(1). En effet. cependant, encore un point supplémentaire
: vous pouvez avoir un fichier ‘cupsd.conf’ existant que vous pourriez
vouloir utiliser. Dans ce cas, vous pouvez passer un
‘opaque-cups-configuration’ en configuration d’un ‘cups-service-type’.

   Les champs de ‘opaque-cups-configuration’ disponibles sont :

 -- paramètre de ‘opaque-cups-configuration’ : package cups
     Le paquet CUPS.

 -- paramètre de ‘opaque-cups-configuration’ : string cupsd.conf
     Le contenu de ‘cupsd.conf’, en tant que chaîne de caractères.

 -- paramètre de ‘opaque-cups-configuration’ : string cups-files.conf
     Le contenu du fichier ‘cups-files.conf’, en tant que chaîne de
     caractères.

   Par exemple, si vos fichiers ‘cupsd.conf’ et ‘cups-files.conf’ sont
dans des chaînes du même nom, pouvez instancier un service CUPS de cette
manière :

     (service cups-service-type
              (opaque-cups-configuration
                (cupsd.conf cupsd.conf)
                (cups-files.conf cups-files.conf)))

   ---------- Footnotes ----------

   (1) NdT : je vous rassure, c’est aussi mon sentiment au moment de
traduire ces lignes. Et pour moi, c’est encore loin d’être fini.


File: guix.fr.info,  Node: Services de bureaux,  Next: Services de son,  Prev: Services d'impression,  Up: Services

8.8.7 Services de bureaux
-------------------------

Le module ‘(gnu services desktop)’ fournit des services qui sont
habituellement utiles dans le contexte d’une installation « de bureau »
— c’est-à-dire sur une machine qui fait tourner un service d’affichage
graphique, éventuellement avec des interfaces utilisateurs graphiques,
etc. Il définit aussi des services qui fournissent des environnements de
bureau spécifiques comme GNOME, Xfce et MATE.

   Pour simplifier les choses, le module définit une variable contenant
l’ensemble des services que les utilisateurs s’attendent en général à
avoir sur une machine avec un environnement graphique et le réseau :

 -- Variable Scheme : %desktop-services
     This is a list of services that builds upon ‘%base-services’ and
     adds or adjusts services for a typical “desktop” setup.

     In particular, it adds a graphical login manager (*note
     ‘gdm-service-type’: Système de fenêtrage X.), screen lockers, a
     network management tool (*note ‘network-manager-service-type’:
     Services réseau.) with modem support (*note
     ‘modem-manager-service-type’: Services réseau.), energy and color
     management services, the ‘elogind’ login and seat manager, the
     Polkit privilege service, the GeoClue location service, the
     AccountsService daemon that allows authorized users change system
     passwords, an NTP client (*note Services réseau::), the Avahi
     daemon, and has the name service switch service configured to be
     able to use ‘nss-mdns’ (*note mDNS: Name Service Switch.).

   The ‘%desktop-services’ variable can be used as the ‘services’ field
of an ‘operating-system’ declaration (*note ‘services’: Référence de
système d'exploitation.).

   Additionally, the ‘gnome-desktop-service-type’,
‘xfce-desktop-service’, ‘mate-desktop-service-type’ and
‘enlightenment-desktop-service-type’ procedures can add GNOME, Xfce,
MATE and/or Enlightenment to a system. To “add GNOME” means that
system-level services like the backlight adjustment helpers and the
power management utilities are added to the system, extending ‘polkit’
and ‘dbus’ appropriately, allowing GNOME to operate with elevated
privileges on a limited number of special-purpose system interfaces.
Additionally, adding a service made by ‘gnome-desktop-service-type’ adds
the GNOME metapackage to the system profile. Likewise, adding the Xfce
service not only adds the ‘xfce’ metapackage to the system profile, but
it also gives the Thunar file manager the ability to open a “root-mode”
file management window, if the user authenticates using the
administrator’s password via the standard polkit graphical interface. To
“add MATE” means that ‘polkit’ and ‘dbus’ are extended appropriately,
allowing MATE to operate with elevated privileges on a limited number of
special-purpose system interfaces. Additionally, adding a service of
type ‘mate-desktop-service-type’ adds the MATE metapackage to the system
profile. “Adding Enlightenment” means that ‘dbus’ is extended
appropriately, and several of Enlightenment’s binaries are set as
setuid, allowing Enlightenment’s screen locker and other functionality
to work as expected.

   Les environnement de bureau dans Guix utilisent le service
d’affichage Xorg par défaut. Si vous voulez utiliser le protocol de
serveur d’affichage plus récent Wayland, vous devez utiliser
‘sddm-service’ à la place de GDM comme gestionnaire de connexion
graphique. Vous devriez ensuite sélectionner la session « GNOME
(Wayland) » dans SDDM. Autrement, vous pouvez essayer de démarrer GNOME
sur Wayland manuellement depuis un TTY avec la commande
‘XDG_SESSION_TYPE=wayland exec dbus-run-session gnome-session’.
Actuellement seul GNOME support Wayland.

 -- Variable Scheme : gnome-desktop-service-type
     This is the type of the service that adds the GNOME
     (https://www.gnome.org) desktop environment. Its value is a
     ‘gnome-desktop-configuration’ object (see below).

     Ce service ajoute le paquet ‘gnome’ au profil du système et étend
     polkit avec les actions de ‘gnome-settings-daemon’.

 -- Type de données : gnome-desktop-configuration
     Enregistrement de la configuration de l’environnement de bureau
     GNOME.

     ‘gnome’ (par défaut : ‘gnome’)
          Le paquet GNOME à utiliser.

 -- Variable Scheme : xfce-desktop-service-type
     This is the type of a service to run the https://xfce.org/ (Xfce)
     desktop environment. Its value is an ‘xfce-desktop-configuration’
     object (see below).

     Ce service ajoute le paquet ‘xfce’ au profil du système et étend
     polkit avec la possibilité pour ‘thunar’ de manipuler le système de
     fichier en root depuis une session utilisateur, après que
     l’utilisateur s’authentifie avec le mot de passe administrateur.

 -- Type de données : xfce-desktop-configuration
     Enregistrement de la configuration de l’environnement de bureau
     Xfce.

     ‘xfce’ (par défaut : ‘xfce’)
          Le paquet Xfce à utiliser.

 -- Variable Scheme : mate-desktop-service-type
     This is the type of the service that runs the MATE desktop
     environment (https://mate-desktop.org/). Its value is a
     ‘mate-desktop-configuration’ object (see below).

     Ce service ajoute le paquet ‘mate’ au profil du système, et étend
     polkit avec les actions de ‘mate-settings-daemon’.

 -- Type de données : mate-desktop-configuration
     Enregistrement de configuration pour l’environnement de bureau
     MATE.

     ‘mate’ (par défaut : ‘mate’)
          Le paquet MATE à utiliser.

 -- Variable Scheme : enlightenment-desktop-service-type
     Renvoie un service qui ajoute le paquet ‘enlightenment’ et étend
     dbus avec les actions de ‘efl’

 -- Type de données : enlightenment-desktop-service-configuration
     ‘enlightenment’ (par défaut : ‘enlightenment’)
          Le paquet enlightenment à utiliser.

   Comme les services de bureau GNOME, Xfce et MATE récupèrent tant de
paquet, la variable ‘%desktop-services’ par défaut n’inclut aucun
d’entre eux. Pour ajouter GNOME, Xfce ou MATE, utilisez ‘cons’ pour les
ajouter à ‘%desktop-services’ dans le champ ‘services’ de votre
‘operating-system’ :

     (use-modules (gnu))
     (use-service-modules desktop)
     (operating-system
       ...
       ;; cons* ajoute des éléments à la liste donnée en dernier argument.
       (services (cons* (service gnome-desktop-service-type)
                        (service xfce-desktop-service)
                        %desktop-services))
       ...)

   Ces environnements de bureau seront alors disponibles comme une
option dans la fenêtre de connexion graphique.

   Les définitions de service qui sont vraiment incluses dans
‘%desktop-services’ et fournies par ‘(gnu services dbus)’ et ‘(gnu
services desktop)’ sont décrites plus bas.

 -- Procédure Scheme : dbus-service [#:dbus DBUS] [#:services '()]
     Renvoie un service qui lance le « bus système », DBUS, avec le
     support de SERVICES.

     D-Bus (https://dbus.freedesktop.org/) est un utilitaire de
     communication inter-processus. Son bus système est utilisé pour
     permettre à des services systèmes de communiquer et d’être notifiés
     d’événements systèmes.

     SERVICES doit être une liste de paquets qui fournissent un
     répertoire ‘etc/dbus-1/system.d’ contenant de la configuration
     D-Bus supplémentaire et des fichiers de politiques. Par exemple,
     pour permettre à avahi-daemon d’utiliser le bus système, SERVICES
     doit être égal à ‘(list avahi)’.

 -- Procédure Scheme : elogind-service [#:config CONFIG]
     Renvoie un service qui lance le démon de gestion de connexion et de
     session ‘elogind’. Elogind (https://github.com/elogind/elogind)
     expose une interface D-Bus qui peut être utilisée pour connaître
     quels utilisateurs sont connectés, le type de session qu’ils sont
     ouverte, suspendre le système, désactiver la veille système,
     redémarrer le système et d’autre taches.

     Elogind gère la plupart des événements liés à l’énergie du système,
     par exemple mettre en veille le système quand l’écran est rabattu
     ou en l’éteignant quand le bouton de démarrage est appuyé.

     L’argument CONFIG spécifie la configuration d’elogind et devrait
     être le résultat d’une invocation de ‘(elogind-configuration
     (PARAMETER VALUE)...)’. Les paramètres disponibles et leur valeur
     par défaut sont :

     ‘kill-user-processes?’
          ‘#f’
     ‘kill-only-users’
          ‘()’
     ‘kill-exclude-users’
          ‘("root")’
     ‘inhibit-delay-max-seconds’
          ‘5’
     ‘handle-power-key’
          ‘poweroff’
     ‘handle-suspend-key’
          ‘suspend’
     ‘handle-hibernate-key’
          ‘hibernate’
     ‘handle-lid-switch’
          ‘suspend’
     ‘handle-lid-switch-docked’
          ‘ignore’
     ‘power-key-ignore-inhibited?’
          ‘#f’
     ‘suspend-key-ignore-inhibited?’
          ‘#f’
     ‘hibernate-key-ignore-inhibited?’
          ‘#f’
     ‘lid-switch-ignore-inhibited?’
          ‘#t’
     ‘holdoff-timeout-seconds’
          ‘30’
     ‘idle-action’
          ‘ignore’
     ‘idle-action-seconds’
          ‘(* 30 60)’
     ‘runtime-directory-size-percent’
          ‘10’
     ‘runtime-directory-size’
          ‘#f’
     ‘remove-ipc?’
          ‘#t’
     ‘suspend-state’
          ‘("mem" "standby" "freeze")’
     ‘suspend-mode’
          ‘()’
     ‘hibernate-state’
          ‘("disk")’
     ‘hibernate-mode’
          ‘("platform" "shutdown")’
     ‘hybrid-sleep-state’
          ‘("disk")’
     ‘hybrid-sleep-mode’
          ‘("suspend" "platform" "shutdown")’

 -- Procédure Scheme : accountsservice-service [#:accountsservice
          ACCOUNTSSERVICE]
     Renvoie un service qui lance AccountsService, un service système
     qui peut lister les comptes disponibles, changer leur mot de passe,
     etc. AccountsService s’intègre à Polkit pour permettre aux
     utilisateurs non privilégiés de pouvoir modifier la configuration
     de leur système. le site de accountsservice
     (https://www.freedesktop.org/wiki/Software/AccountsService/) pour
     trouver plus d’informations.

     L’argument ACCOUNTSSERVICE est le paquet ‘accountsservice’ à
     exposer comme un service.

 -- Procédure Scheme : polkit-service [#:polkit POLKIT]
     Renvoie un service qui lance le service de gestion des privilèges
     Polkit (https://www.freedesktop.org/wiki/Software/polkit/), qui
     permet aux administrateurs systèmes de permettre l’accès à des
     opération privilégiées d’une manière structurée. En demandant au
     service Polkit, un composant système privilégié peut savoir
     lorsqu’il peut donner des privilèges supplémentaires à des
     utilisateurs normaux. Par exemple, un utilisateur normal peut
     obtenir le droit de mettre le système en veille si l’utilisateur
     est connecté localement.

 -- Scheme Variable : polkit-wheel-service
     Service that adds the ‘wheel’ group as admins to the Polkit
     service. This makes it so that users in the ‘wheel’ group are
     queried for their own passwords when performing administrative
     actions instead of ‘root’’s, similar to the behaviour used by
     ‘sudo’.

 -- Variable Scheme : upower-service-type
     Service qui lance ‘upowerd’ (https://upower.freedesktop.org/), un
     moniteur système de consommation d’énergie et de niveau de
     batterie, avec les paramètres de configuration donnés.

     Il implémente l’interface D-Bus ‘org.freedesktop.UPower’ et est
     notamment utilisé par GNOME.

 -- Type de données : upower-configuration
     Type de données représentant la configuration de UPower.

     ‘upower’ (par défaut : UPOWER)
          Paquet à utiliser pour ‘upower’.

     ‘watts-up-pro?’ (par défaut : ‘#f’)
          Active le périphérique Watts Up Pro.

     ‘poll-batteries?’ (par défaut : ‘#t’)
          Active les requêtes au noyau pour les changements de niveau de
          batterie.

     ‘ignore-lid?’ (par défaut : ‘#f’)
          Ignore l’état de l’écran, ce qui peut être utile s’il est
          incorrect sur un appareil.

     ‘use-percentage-for-policy?’ (par défaut : ‘#f’)
          Indique si la politique de batterie basée sur le pourcentage
          devrait être utilisée. La valeur par défaut est d’utiliser la
          durée restante, changez en ‘#t’ pour utiliser les
          pourcentages.

     ‘percentage-low’ (par défaut : ‘10’)
          Lorsque ‘use-percentage-for-policy?’ est ‘#t’, cela indique à
          quel niveau la batterie est considérée comme faible.

     ‘percentage-critical’ (par défaut : ‘3’)
          Lorsque ‘use-percentage-for-policy?’ est ‘#t’, cela indique à
          quel niveau la batterie est considérée comme critique.

     ‘percentage-action’ (par défaut : ‘2’)
          Lorsque ‘use-percentage-for-policy?’ est ‘#t’, cela indique à
          quel niveau l’action sera prise.

     ‘time-low’ (par défaut : ‘1200’)
          Lorsque ‘use-percentage-for-policy?’ est ‘#f’, cela indique à
          quelle durée restante en secondes la batterie est considérée
          comme faible.

     ‘time-critical’ (par défaut : ‘300’)
          Lorsque ‘use-percentage-for-policy?’ est ‘#f’, cela indique à
          quelle durée restante en secondes la batterie est considérée
          comme critique.

     ‘time-action’ (par défaut : ‘120’)
          Lorsque ‘use-percentage-for-policy?’ est ‘#f’, cela indique à
          quelle durée restante en secondes l’action sera prise.

     ‘critical-power-action’ (par défaut : ‘'hybrid-sleep’)
          L’action à prendre lorsque ‘percentage-action’ ou
          ‘time-action’ est atteint (en fonction de la configuration de
          ‘use-percentage-for-policy?’).

          Les valeurs possibles sont :

             • ‘'power-off’

             • ‘'hibernate’

             • ‘'hybrid-sleep’.

 -- Procédure Scheme : udisks-service [#:udisks UDISKS]
     Renvoie un service pour UDisks
     (https://udisks.freedesktop.org/docs/latest/), un démon de “gestion
     de disques” qui fournit des notifications et la capacité de monter
     et démonter des disques à des interfaces utilisateurs. Les
     programmes qui parlent à UDisks sont par exemple la commande
     ‘udisksctl’, qui fait partie de UDisks et GNOME Disks.

 -- Scheme Variable : colord-service-type
     This is the type of the service that runs ‘colord’, a system
     service with a D-Bus interface to manage the color profiles of
     input and output devices such as screens and scanners. It is
     notably used by the GNOME Color Manager graphical tool. See the
     colord web site (https://www.freedesktop.org/software/colord/) for
     more information.

 -- Procédure Scheme : geoclue-application name [#:allowed? #t]
          [#:system? #f] [#:users '()]
     Renvoie une configuration qui permet d’accéder aux données de
     localisation de GeoClue. NAME est l’ID Desktop de l’application,
     sans la partie en ‘.desktop’. Si ALLOWED? est vraie, l’application
     aura droit d’accéder aux informations de localisation par défaut.
     Le booléen SYSTEM? indique si une application est un composant
     système ou non. Enfin USERS est la liste des UID des utilisateurs
     pour lesquels cette application a le droit d’accéder aux
     informations de géolocalisation. Une liste d’utilisateurs vide
     indique que tous les utilisateurs sont autorisés.

 -- Scheme Procedure : sane-service-type
     This service provides access to scanners via SANE
     (http://www.sane-project.org) by installing the necessary udev
     rules.

 -- Variable Scheme : %standard-geoclue-applications
     La liste standard de configuration des application GeoClue connues,
     qui permet à l’utilitaire date-and-time de GNOME de demander
     l’emplacement actuel pour initialiser le fuseau horaire et aux
     navigateurs web IceCat et Epiphany de demander les informations de
     localisation. IceCat et Epiphany demandent tous deux à
     l’utilisateur avant de permettre à une page web de connaître
     l’emplacement de l’utilisateur.

 -- Procédure Scheme : geoclue-service [#:colord COLORD] [#:whitelist
          '()] [#:wifi-geolocation-url
     "https://location.services.mozilla.com/v1/geolocate?key=geoclue"]
      [#:submit-data? #f] [#:wifi-submission-url
     "https://location.services.mozilla.com/v1/submit?key=geoclue"]
      [#:submission-nick "geoclue"]  [#:applications
     %standard-geoclue-applications] Renvoie un service qui lance le
     service de géolocalisation GeoClue. Ce service fournit une
     interface D-Bus pour permettre aux applications de demande l’accès
     à la position de l’utilisateur et éventuellement d’ajouter des
     informations à des bases de données de géolocalisation en ligne.
     Voir le site web de GeoClue
     (https://wiki.freedesktop.org/www/Software/GeoClue/) pour plus
     d’informations.

 -- Procédure Scheme : bluetooth-service [#:bluez BLUEZ]
          [#:auto-enable? #f]
     Renvoie un service qui lance le démon ‘bluetoothd’ qui gère tous
     les appareils Bluetooth et fournit un certain nombre d’interfaces
     D-Bus. Lorsque AUTO-ENABLE? est vraie, le contrôler bluetooth est
     automatiquement alimenté au démarrage, ce qui peut être utile
     lorsque vous utilisez un clavier ou une souris bluetooth.

     Les utilisateurs doivent être dans le groupe ‘lp’ pour accéder au
     service D-Bus.

 -- Scheme Variable : gnome-keyring-service-type
     This is the type of the service that adds the GNOME Keyring
     (https://wiki.gnome.org/Projects/GnomeKeyring). Its value is a
     ‘gnome-keyring-configuration’ object (see below).

     This service adds the ‘gnome-keyring’ package to the system profile
     and extends PAM with entries using ‘pam_gnome_keyring.so’,
     unlocking a user’s login keyring when they log in or setting its
     password with passwd.

 -- Data Type : gnome-keyring-configuration
     Configuration record for the GNOME Keyring service.

     ‘keyring’ (default: ‘gnome-keyring’)
          The GNOME keyring package to use.

     ‘pam-services’
          A list of ‘(SERVICE . KIND)’ pairs denoting PAM services to
          extend, where SERVICE is the name of an existing service to
          extend and KIND is one of ‘login’ or ‘passwd’.

          If ‘login’ is given, it adds an optional
          ‘pam_gnome_keyring.so’ to the auth block without arguments and
          to the session block with ‘auto_start’. If ‘passwd’ is given,
          it adds an optional ‘pam_gnome_keyring.so’ to the password
          block without arguments.

          By default, this field contains “gdm-password” with the value
          ‘login’ and “passwd” is with the value ‘passwd’.


File: guix.fr.info,  Node: Services de son,  Next: Services de bases de données,  Prev: Services de bureaux,  Up: Services

8.8.8 Services de son
---------------------

Le module ‘(gnu services sound)’ fournit un service pour configurer le
système ALSA (architecture son linux avancée), qui fait de PulseAudio le
pilote de sortie préféré d’ALSA.

 -- Variable Scheme : alsa-service-type
     C’est le type pour le système Advanced Linux Sound Architecture
     (https://alsa-project.org/) (ALSA), qui génère le fichier de
     configuration ‘/etc/asound.conf’. La valeur de ce type est un
     enregistrement ‘alsa-configuration’ comme dans cet exemple :

          (service alsa-service-type)

     Voir plus bas pour des détails sur ‘alsa-configuration’.

 -- Type de données : alsa-configuration
     Type de données représentant la configuration pour ‘alsa-service’.

     ‘alsa-plugins’ (par défaut : ALSA-PLUGINS)
          Le paquet ‘alsa-plugins’ à utiliser.

     ‘pulseaudio?’ (par défaut : #T)
          Whether ALSA applications should transparently be made to use
          the PulseAudio (https://www.pulseaudio.org/) sound server.

          Utiliser PulseAudio vous permet dans lancer plusieurs
          applications qui produisent du son en même temps et de les
          contrôler individuellement via ‘pavucontrol’ entre autres
          choses.

     ‘extra-options’ (par défaut : "")
          Chaîne à ajouter au fichier ‘/etc/asound.conf’.

   Les utilisateurs individuels qui veulent modifier la configuration
système d’ALSA peuvent le faire avec le fichier ‘~/.asoundrc’ :

     # Dans guix, il faut spécifier le chemin absolu des greffons.
     pcm_type.jack {
       lib "/home/alice/.guix-profile/lib/alsa-lib/libasound_module_pcm_jack.so"
     }

     # Faire passer ALSA par Jack :
     # <http://jackaudio.org/faq/routing_alsa.html>.
     pcm.rawjack {
       type jack
       playback_ports {
         0 system:playback_1
         1 system:playback_2
       }

       capture_ports {
         0 system:capture_1
         1 system:capture_2
       }
     }

     pcm.!default {
       type plug
       slave {
         pcm "rawjack"
       }
     }

   Voir <https://www.alsa-project.org/main/index.php/Asoundrc> pour les
détails.

 -- Scheme Variable : pulseaudio-service-type
     This is the type for the PulseAudio (https://www.pulseaudio.org/)
     sound server. It exists to allow system overrides of the default
     settings via ‘pulseaudio-configuration’, see below.

          Attention : This service overrides per-user configuration
          files. If you want PulseAudio to honor configuraton files in
          ‘~/.config/pulse’ you have to unset the environment variables
          ‘PULSE_CONFIG’ and ‘PULSE_CLIENTCONFIG’ in your
          ‘~/.bash_profile’.

          Attention : This service on its own does not ensure, that the
          ‘pulseaudio’ package exists on your machine. It merely adds
          configuration files for it, as detailed below. In the
          (admittedly unlikely) case, that you find yourself without a
          ‘pulseaudio’ package, consider enabling it through the
          ‘alsa-service-type’ above.

 -- Data Type : pulseaudio-configuration
     Data type representing the configuration for ‘pulseaudio-service’.

     CLIENT-CONF (default: ‘'()’)
          List of settings to set in ‘client.conf’. Accepts a list of
          strings or a symbol-value pairs. A string will be inserted
          as-is with a newline added. A pair will be formatted as “key =
          value”, again with a newline added.

     DAEMON-CONF (default: ‘'((flat-volumes . no))’)
          List of settings to set in ‘daemon.conf’, formatted just like
          CLIENT-CONF.

     SCRIPT-FILE (default: ‘(file-append pulseaudio "/etc/pulse/default.pa")’)
          Script file to use as as ‘default.pa’.

     SYSTEM-SCRIPT-FILE (default: ‘(file-append pulseaudio "/etc/pulse/system.pa")’)
          Script file to use as as ‘system.pa’.

 -- Scheme Variable : ladspa-service-type
     This service sets the LADSPA_PATH variable, so that programs, which
     respect it, e.g. PulseAudio, can load LADSPA plugins.

     The following example will setup the service to enable modules from
     the ‘swh-plugins’ package:

          (service ladspa-service-type
                   (ladspa-configuration (plugins (list swh-plugins))))

     See <http://plugin.org.uk/ladspa-swh/docs/ladspa-swh.html> for the
     details.


File: guix.fr.info,  Node: Services de bases de données,  Next: Services de courriels,  Prev: Services de son,  Up: Services

8.8.9 Services de bases de données
----------------------------------

Le module ‘(gnu services databases)’ fournit les services suivants.

 -- Procédure Scheme : postgresql-service [#:postgresql postgresql]
          [#:config-file] [#:data-directory
          ``/var/lib/postgresql/data''] [#:port 5432] [#:locale
          ``en_US.utf8''] [#:extension-packages '()]
     Renvoie un service qui lance POSTGRESQL, le service de bases de
     données PostgreSQL.

     Le démon PostgreSQL charge sa configuration à l’exécution depuis
     CONFIG-FILE, crée une grappe de bases de données avec LOCALE comme
     paramètre de régionalisation par défaut, stockée dans
     DATA-DIRECTORY. Il écoute ensuite sur PORT.

     Des extensions supplémentaires peuvent être chargées à partir de
     paquets listés dans EXTENSION-PACKAGES. Les extensions sont
     disponibles à l’exécution. Par exemple, pour créer une base de
     données géographique avec l’extension ‘postgis’, on peut configurer
     postgresql-service de cette manière :

          (use-package-modules databases geo)

          (operating-system
            ...
            ;; postgresql est requis pour lancer `psql' mais postgis n'est pas requis pour son
            ;; bon fonctionnement.
            (packages (cons* postgresql %base-packages))
            (services
              (cons*
                (postgresql-service #:extension-packages (list postgis))
                %base-services)))

     Ensuite l’extension devient visible et vous pouvez initialiser une
     base de données géographique de cette manière :

          psql -U postgres
          > create database postgistest;
          > \connect postgistest;
          > create extension postgis;
          > create extension postgis_topology;

     Vous n’avez pas besoin d’ajouter ce champ pour les extensions «
     contrib » comme hstore ou dblink comme elles sont déjà exploitables
     par postgresql. Ce champ n’est requis que pour ajouter des
     extensions fournies par d’autres paquets.

 -- Procédure Scheme : mysql-service [#:config (mysql-configuration)]
     Renvoie un service qui lance ‘mysqld’, le service de bases de
     données MySQL ou MariaDB.

     L’argument CONFIG facultatif spécifie la configuration de ‘mysqld’,
     qui devrait être un objet ‘<mysql-configuration>’.

 -- Type de données : mysql-configuration
     Type de données représentant la configuration de MYSQL-SERVICE.

     ‘mysql’ (par défaut : MARIADB)
          Objet paquet du serveur de base de données MySQL, qui peut
          être soit MARIADB, soit MYSQL.

          Pour MySQL, un mot de passe root temporaire sera affiché à
          l’activation. Pour MariaDB, le mot de passe root est vide.

     ‘port’ (par défaut : ‘3306’)
          Port TCP sur lequel le serveur de base de données écoute les
          connexions entrantes.

 -- Variable Scheme : memcached-service-type
     C’est le type de service pour le service Memcached
     (https://memcached.org/) qui fournit un cache en mémoire distribué.
     La valeur pour le type de service est un objet
     ‘memcached-configuration’.

     (service memcached-service-type)

 -- Type de données : memcached-configuration
     Type de données représentant la configuration de memcached.

     ‘memcached’ (par défaut : ‘memcached’)
          Le paquet Memcached à utiliser.

     ‘interfaces’ (par défaut : ‘'("0.0.0.0")’)
          Les interfaces réseaux sur lesquelles écouter.

     ‘tcp-port’ (par défaut : ‘11211’)
          Port sur lequel accepter les connexions.

     ‘udp-port’ (par défaut : ‘11211’)
          Port sur lequel accepter les connexions UDP, une valeur de 0
          désactive l’écoute en UDP.

     ‘additional-options’ (par défaut : ‘'()’)
          Options de la ligne de commande supplémentaires à passer à
          ‘memcached’.

 -- Variable Scheme : mongodb-service-type
     C’est le type de service pour MongoDB (https://www.mongodb.com/).
     La valeur de ce service est un objet ‘mongodb-configuration’.

     (service mongodb-service-type)

 -- Type de données : mongodb-configuration
     Type de données représentant la configuration de mongodb.

     ‘mongodb’ (par défaut : ‘mongodb’)
          Le paquet MongoDB à utiliser.

     ‘config-file’ (par défaut : ‘%default-mongodb-configuration-file’)
          Le fichier de configuration pour MongoDB.

     ‘data-directory’ (par défaut : ‘"/var/lib/mongodb"’)
          Cette valeur est utilisée pour créer le répertoire, pour qu’il
          existe et appartienne à l’utilisateur mongodb. Il devrait
          correspondre au data-directory que MongoDB est configuré pour
          utiliser dans son fichier de configuration.

 -- Variable Scheme : redis-service-type
     C’est le type de service pour la base clef-valeur Redis
     (https://redis.io/) dont la valeur est un objet
     ‘redis-configuration’.

 -- Type de données : redis-configuration
     Type de données représentant la configuration de redis.

     ‘redis’ (par défaut : ‘redis’)
          Le paquet Redis à utiliser.

     ‘bind’ (par défaut : ‘"127.0.0.1"’)
          Interface réseau sur laquelle écouter.

     ‘port’ (par défaut : ‘6379’)
          Port sur lequel accepter les connexions, une valeur de 0
          désactive l’écoute sur un socket TCP.

     ‘working-directory’ (par défaut : ‘"/var/lib/redis"’)
          Répertoire dans lequel stocker la base de données et les
          fichiers liés.


File: guix.fr.info,  Node: Services de courriels,  Next: Services de messagerie,  Prev: Services de bases de données,  Up: Services

8.8.10 Services de courriels
----------------------------

Le module ‘(gnu services mail)’ fournit des définitions de services Guix
pour les services de courriel : des serveurs IMAP, POP3 et LMTP ainsi
que des MTA (Mail Transport Agent). Que d’acronymes ! Ces services sont
détaillés dans les sous-sections ci-dessous.

Service Dovecot
...............

 -- Procédure Scheme : dovecot-service [#:config
          (dovecot-configuration)]
     Renvoie un service qui lance le serveur de courriel IMAP/POP3/LMTP
     Dovecot.

   Par défaut, Dovecot n’a pas besoin de beaucoup de configuration ;
l’objet de configuration par défaut créé par ‘(dovecot-configuration)’
suffira si votre courriel est livré dans ‘~/Maildir’. Un certificat
auto-signé sera généré pour les connexions TLS, bien que Dovecot
écoutera aussi sur les ports non chiffrés par défaut. Il y a quelques
options cependant, que les administrateurs peuvent avoir besoin de
changer et comme c’est le cas avec d’autres services, Guix permet aux
administrateurs systèmes de spécifier ces paramètres via une interface
Scheme unifiée.

   Par exemple, pour spécifier que les courriels se trouvent dans
‘maildir~/.mail’, on peut instancier Dovecot de cette manière :

     (dovecot-service #:config
                      (dovecot-configuration
                       (mail-location "maildir:~/.mail")))

   Les paramètres de configuration disponibles sont les suivants. Chaque
définition des paramètres est précédé par son type ; par exemple,
‘string-list foo’ indique que le paramètre ‘foo’ devrait être spécifié
comme une liste de chaînes de caractères. Il y a aussi une manière de
spécifier la configuration comme une chaîne de caractères, si vous avez
un vieux fichier ‘dovecot.conf’ que vous voulez porter depuis un autre
système ; voir la fin pour plus de détails.

   Les champs de ‘dovecot-configuration’ disponibles sont :

 -- paramètre de ‘dovecot-configuration’ : package dovecot
     Le paquet dovecot.

 -- paramètre de ‘dovecot-configuration’ : comma-separated-string-list
          listen
     Une liste d’IP ou d’hôtes à écouter pour les connexions. ‘*’ écoute
     sur toutes les interfaces IPv4, ‘::’ écoute sur toutes les
     interfaces IPv6. Si vous voulez spécifier des ports différents de
     la valeur par défaut ou quelque chose de plus complexe, complétez
     les champs d’adresse et de port de ‘inet-listener’ des services
     spécifiques qui vous intéressent.

 -- paramètre de ‘dovecot-configuration’ : protocol-configuration-list
          protocols
     Liste des protocoles que vous voulez servir. Les protocoles
     disponibles comprennent ‘imap’, ‘pop3’ et ‘lmtp’.

     Les champs ‘protocol-configuration’ disponibles sont :

      -- paramètre de ‘protocol-configuration’ : string name
          Le nom du protocole.

      -- paramètre de ‘protocol-configuration’ : string auth-socket-path
          Le chemin d’un socket UNIX vers le serveur d’authentification
          maître pour trouver les utilisateurs. C’est utilisé par imap
          (pour les utilisateurs partagés) et lda. Sa valeur par défaut
          est ‘"/var/run/dovecot/auth-userdb"’.

      -- paramètre de ‘protocol-configuration’ :
               space-separated-string-list mail-plugins
          Liste de greffons à charger séparés par des espaces.

      -- paramètre de ‘protocol-configuration’ : non-negative-integer
               mail-max-userip-connections
          Nombre maximum de connexions IMAP permises pour un utilisateur
          depuis chaque adresse IP. Remarque : la comparaison du nom
          d’utilisateur est sensible à la casse. Par défaut ‘10’.

 -- paramètre de ‘dovecot-configuration’ : service-configuration-list
          services
     Liste des services à activer. Les services disponibles comprennent
     ‘imap’, ‘imap-login’, ‘pop3’, ‘pop3-login’, ‘auth’ et ‘lmtp’.

     Les champs de ‘service-configuration’ disponibles sont :

      -- paramètre de ‘service-configuration’ : string kind
          Le type de service. Les valeurs valides comprennent
          ‘director’, ‘imap-login’, ‘pop3-login’, ‘lmtp’, ‘imap’,
          ‘pop3’, ‘auth’, ‘auth-worker’, ‘dict’, ‘tcpwrap’,
          ‘quota-warning’ ou n’importe quoi d’autre.

      -- paramètre de ‘service-configuration’ :
               listener-configuration-list listeners
          Les auditeurs du service. Un auditeur est soit un
          ‘unix-listener-configuration’, soit un
          ‘fifo-listener-configuration’, soit un
          ‘inet-listener-configuration’. La valeur par défaut est ‘()’.

          Les champs de ‘unix-listener-configuration’ disponibles sont :

           -- paramètre de ‘unix-listener-configuration’ : string path
               Chemin vers le fichier, relativement au champ ‘base-dir’.
               C’est aussi utilisé comme nom de section.

           -- paramètre de ‘unix-listener-configuration’ : string mode
               Le mode d’accès pour le socket. La valeur par défaut est
               ‘"0600"’.

           -- paramètre de ‘unix-listener-configuration’ : string user
               L’utilisateur à qui appartient le socket. La valeur par
               défaut est ‘""’

           -- paramètre de ‘unix-listener-configuration’ : string group
               Le groupe auquel appartient le socket. La valeur par
               défaut est ‘""’.

          Les champs de ‘fifo-listener-configuration’ disponibles sont :

           -- paramètre de ‘fifo-listener-configuration’ : string path
               Chemin vers le fichier, relativement au champ ‘base-dir’.
               C’est aussi utilisé comme nom de section.

           -- paramètre de ‘fifo-listener-configuration’ : string mode
               Le mode d’accès pour le socket. La valeur par défaut est
               ‘"0600"’.

           -- paramètre de ‘fifo-listener-configuration’ : string user
               L’utilisateur à qui appartient le socket. La valeur par
               défaut est ‘""’

           -- paramètre de ‘fifo-listener-configuration’ : string group
               Le groupe auquel appartient le socket. La valeur par
               défaut est ‘""’.

          Les champs de ‘inet-listener-configuration’ disponibles sont :

           -- paramètre de ‘inet-listener-configuration’ : string
                    protocol
               Le protocole à écouter.

           -- paramètre de ‘inet-listener-configuration’ : string
                    address
               L’adresse sur laquelle écouter, ou la chaîne vide pour
               toutes les adresses. La valeur par défaut est ‘""’.

           -- paramètre de ‘inet-listener-configuration’ :
                    non-negative-integer port
               Le port sur lequel écouter.

           -- paramètre de ‘inet-listener-configuration’ : boolean ssl?
               S’il faut utiliser SSL pour ce service ; ‘yes’, ‘no’ ou
               ‘required’. La valeur par défaut est ‘#t’.

      -- paramètre de ‘service-configuration’ : non-negative-integer
               client-limit
          Connexions de clients simultanées maximum par processus. Une
          fois ce nombre de connections atteint, la connexion suivante
          fera en sorte que Dovecot démarre un autre processus. Si la
          valeur est 0, ‘default-client-limit’ est utilisé à la place.

          La valeur par défaut est ‘0’.

      -- paramètre de ‘service-configuration’ : non-negative-integer
               service-count
          Nombre de connexions à gérer avant de démarrer un nouveau
          processus. Typiquement les valeurs utiles sont 0 (sans limite)
          ou 1. 1 est plus sûr, mais 0 est plus rapide.
          <doc/wiki/LoginProcess.txt>. La valeur par défaut est ‘1’.

      -- paramètre de ‘service-configuration’ : non-negative-integer
               process-limit
          Nombre de processus maximum qui peut exister pour ce service.
          Si la valeur est 0, ‘default-process-limit’ est utilisé à la
          place.

          La valeur par défaut est ‘0’.

      -- paramètre de ‘service-configuration’ : non-negative-integer
               process-min-avail
          Nombre de processus à toujours garder en attente de
          connexions. La valeur par défaut est ‘0’.

      -- paramètre de ‘service-configuration’ : non-negative-integer
               vsz-limit
          Si vous mettez ‘service-count 0’, vous avez sans doute besoin
          d’augmenter ce paramètre. La valeur par défaut est
          ‘256000000’.

 -- paramètre de ‘dovecot-configuration’ : dict-configuration dict
     Configuration du dictionnaire, créé par le constructeur
     ‘dict-configuration’.

     Les champs de ‘dict-configuration’ disponibles sont :

      -- paramètre de ‘dict-configuration’ : free-form-fields entries
          Une liste de paires de clefs-valeurs que ce dictionnaire
          contient. La valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : passdb-configuration-list
          passdbs
     Une liste de configurations passdb, chacune créée par le
     constructeur ‘passdb-configuration’.

     Les champs de ‘passdb-configuration’ disponibles sont :

      -- paramètre de ‘passdb-configuration’ : string driver
          Le pilote à utiliser par passdb. Les valeur valides
          comprennent ‘pam’, ‘passwd’, ‘shadow’, ‘bsdauth’ et ‘static’.
          La valeur par défaut est ‘"pam"’.

      -- paramètre de ‘passdb-configuration’ :
               space-separated-string-list args
          Liste d’arguments pour le pilote passdb séparés par des
          espaces. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : userdb-configuration-list
          userdbs
     Liste des configurations userdb, chacune créée par le constructeur
     ‘userdb-configuration’.

     Les champs de ‘userdb-configuration’ disponibles sont :

      -- paramètre de ‘userdb-configuration’ : string driver
          Le pilote que userdb devrait utiliser. Les valeurs valides
          comprennent ‘passwd’ et ‘static’. La valeur par défaut est
          ‘"passwd"’.

      -- paramètre de ‘userdb-configuration’ :
               space-separated-string-list args
          Liste des arguments du pilote userdb séparés par des espaces.
          La valeur par défaut est ‘""’.

      -- paramètre de ‘userdb-configuration’ : free-form-args
               override-fields
          Remplace des champs de passwd. La valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : plugin-configuration
          plugin-configuration
     Configuration du greffon, créé par le constructeur
     ‘plugin-configuration’.

 -- paramètre de ‘dovecot-configuration’ :
          list-of-namespace-configuration namespaces
     Liste d’espaces de noms. Chaque élément de la liste est créé par le
     constructeur ‘namespace-configuration’.

     Les champs de ‘namespace-configuration’ disponibles sont :

      -- paramètre de ‘namespace-configuration’ : string name
          Nom de cet espace de nom.

      -- paramètre de ‘namespace-configuration’ : string type
          Type d’espace de nom : ‘private’, ‘shared’ ou ‘public’. La
          valeur par défaut est ‘"private"’.

      -- paramètre de ‘namespace-configuration’ : string separator
          Séparateur de hiérarchie à utiliser. Vous devriez utiliser le
          même séparateur pour tous les espaces de noms ou certains
          clients seront confus. ‘/’ est généralement une bonne valeur.
          La valeur par défaut dépend cependant du format de stockage
          sous-jacent. La valeur par défaut est ‘""’.

      -- paramètre de ‘namespace-configuration’ : string prefix
          Préfixe requis pour accéder à cet espace de nom. Ce paramètres
          doit être différent pour tous les espaces de noms. Par exemple
          ‘Public/’. La valeur par défaut est ‘""’.

      -- paramètre de ‘namespace-configuration’ : string location
          Emplacement physique de la boîte aux lettres. C’est le même
          format que mail_location, qui est aussi la valeur par défaut.
          La valeur par défaut est ‘""’.

      -- paramètre de ‘namespace-configuration’ : boolean inbox?
          Il ne peut y avoir qu’un INBOX, et ce paramètre définit
          l’espace de nom qui le possède. La valeur par défaut est ‘#f’.

      -- paramètre de ‘namespace-configuration’ : boolean hidden?
          Si l’espace de nom est caché, il n’est pas publié auprès des
          clients par l’extension NAMESPACE. Vous voudrez aussi sans
          doute indiquer ‘list? #f’. C’est surtout utile lors de la
          conversion depuis un autre serveur avec des espaces de noms
          différents que vous voulez rendre obsolètes sans les casser.
          Par exemple vous pouvez cacher les espaces de noms avec les
          préfixes ‘~/mail/’, ‘~%u/mail/’ et ‘mail/’. La valeur par
          défaut est ‘#f’.

      -- paramètre de ‘namespace-configuration’ : boolean list?
          Montre les boîtes aux lettres sons cet espace de nom avec la
          commande LIST. Cela rend l’espace de nom visible pour les
          clients qui ne supportent pas l’extension NAMESPACE. La valeur
          spéciale ‘children’ liste les boîtes aux lettres filles mais
          cache le préfixe de l’espace de nom. La valeur par défaut est
          ‘#t’.

      -- paramètre de ‘namespace-configuration’ : boolean subscriptions?
          Les espaces de noms gèrent leur propre souscription. Si la
          valeur est ‘#f’, l’espace de nom parent s’en charge. Le
          préfixe vide devrait toujours avoir cette valeur à ‘#t’. La
          valeur par défaut est ‘#t’.

      -- paramètre de ‘namespace-configuration’ :
               mailbox-configuration-list mailboxes
          Liste des boîtes aux lettres prédéfinies dans cet espace de
          nom. La valeur par défaut est ‘()’.

          Les champs de ‘mailbox-configuration’ disponibles sont :

           -- paramètre de ‘mailbox-configuration’ : string name
               Nom de cette boîte aux lettres.

           -- paramètre de ‘mailbox-configuration’ : string auto
               ‘create’ créera automatiquement cette boîte aux lettres.
               ‘subscribe’ créera et souscrira à la boîte aux lettres.
               La valeur par défaut est ‘"no"’.

           -- paramètre de ‘mailbox-configuration’ :
                    space-separated-string-list special-use
               Liste des attributs ‘SPECIAL-USE’ IMAP spécifiés par la
               RFC 6154. Les valeurs valides sont ‘\All’, ‘\Archive’,
               ‘\Drafts’, ‘\Flagged’, ‘\Junk’, ‘\Sent’ et ‘\Trash’. La
               valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : file-name base-dir
     Répertoire de base où stocker les données d’exécution. La valeur
     par défaut est ‘"/var/run/dovecot/"’.

 -- paramètre de ‘dovecot-configuration’ : string login-greeting
     Message d’accueil pour les clients. La valeur par défaut est
     ‘"Dovecot ready."’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          login-trusted-networks
     Liste des groupes d’adresses de confiance. Les connexions depuis
     ces IP sont autorisées à modifier leurs adresses IP et leurs ports
     (pour la connexion et la vérification d’authentification).
     ‘disable-plaintext-auth’ est aussi ignoré pour ces réseaux.
     Typiquement vous voudrez spécifier votre mandataire IMAP ici. La
     valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          login-access-sockets
     Liste des sockets de vérification d’accès de connexion (p. ex.
     tcpwrap). La valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : boolean verbose-proctitle?
     Montre des titres de processus plus verbeux (dans ps).
     Actuellement, montre le nom d’utilisateur et l’adresse IP. Utile
     pour voir qui utilise en réalité les processus IMAP (p. ex. des
     boîtes aux lettres partagées ou si le même uid est utilisé pour
     plusieurs comptes). La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean shutdown-clients?
     Indique si les processus devraient toujours être tués lorsque le
     processus maître de Dovecot est éteint. La valeur ‘#f’ signifie que
     Dovecot peut être mis à jour sans forcer les connexions clientes
     existantes à se fermer (bien que cela puisse être un problème si la
     mise à jour est un correctif de sécurité par exemple). La valeur
     par défaut est ‘#t’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          doveadm-worker-count
     Si la valeur n’est pas zéro, lance les commandes de courriel via ce
     nombre de connexions au serveur doveadm au lieu de les lancer dans
     le même processus. La valeur par défaut est ‘0’.

 -- paramètre de ‘dovecot-configuration’ : string doveadm-socket-path
     Socket UNIX ou hôte:port utilisé pour se connecter au serveur
     doveadm. La valeur par défaut est ‘"doveadm-server"’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          import-environment
     Liste des variables d’environnement qui sont préservées au
     démarrage de Dovecot et passées à tous ses processus fils. Vous
     pouvez aussi donner des paires clef=valeur pour toujours spécifier
     ce paramètre.

 -- paramètre de ‘dovecot-configuration’ : boolean
          disable-plaintext-auth?
     Désactive la commande LOGIN et toutes les autres authentifications
     en texte clair à moins que SSL/TLS ne soit utilisé (capacité
     LOGINDISABLED). Remarquez que si l’IP distante correspond à l’IP
     locale (c.-à-d. que vous vous connectez depuis le même ordinateur),
     la connexion est considérée comme sécurisée et l’authentification
     en texte clair est permise. Voir aussi le paramètre ssl=required.
     La valeur par défaut est ‘#t’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          auth-cache-size
     Taille du cache d’authentification (p. ex. ‘#e10e6’). 0 signifie
     qu’il est désactivé. Remarquez que bsdauth, PAM et vpopmail ont
     besoin que ‘cache-key’ soit indiqué pour que le cache soit utilisé.
     La valeur par défaut est ‘0’.

 -- paramètre de ‘dovecot-configuration’ : string auth-cache-ttl
     Durée de vie des données en cache. Après l’expiration du TTL
     l’enregistrement en cache n’est plus utilisé *sauf* si la requête à
     la base de données principale revoie une erreur interne. Nous
     essayons aussi de gérer les changements de mot de passe
     automatiquement : si l’authentification précédente de l’utilisateur
     était réussie mais pas celle-ci, le cache n’est pas utilisé. Pour
     l’instant cela fonctionne avec l’authentification en texte clair
     uniquement. La valeur par défaut est ‘"1 hour"’.

 -- paramètre de ‘dovecot-configuration’ : string
          auth-cache-negative-ttl
     TTL pour les résultats négatifs (l’utilisateur n’est pas trouvé ou
     le mot de passe ne correspond pas). 0 désactive la mise en cache
     complètement. La valeur par défaut est ‘"1 hour"’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          auth-realms
     Liste des domaines pour les mécanismes d’authentification SASL qui
     en ont besoin. Vous pouvez laisser ce paramètre vide si vous ne
     voulez pas utiliser plusieurs domaines. Beaucoup de clients
     utilisent le premier domaine listé ici, donc gardez celui par
     défaut en premier. La valeur par défaut est ‘()’

 -- paramètre de ‘dovecot-configuration’ : string auth-default-realm
     Domaine par défaut à utiliser si aucun n’est spécifié. C’est
     utilisé pour les domaines SASL et pour ajouter @domaine au nom
     d’utilisateur dans les authentification en texte clair. La valeur
     par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string auth-username-chars
     Liste des caractères autorisés dans les noms d’utilisateur. Si le
     nom d’utilisateur donné par l’utilisateur contient un caractère qui
     n’est pas listé ici, la connexion échoue automatiquement. C’est
     juste une vérification supplémentaire pour s’assure que
     l’utilisateur ne puisse pas exploiter des vulnérabilités
     potentielles d’échappement de guillemets avec les bases de données
     SQL/LDAP. Si vous voulez autoriser tous les caractères, indiquez la
     liste vide.

 -- paramètre de ‘dovecot-configuration’ : string
          auth-username-translation
     Traduction de caractères dans les noms d’utilisateur avant qu’ils
     ne soient cherchés en base. La valeur contient une série de
     caractère de -> à. Par exemple ‘#@/@’ signifie que ‘#’ et ‘/’ sont
     traduits en ‘@’. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string auth-username-format
     Format des noms d’utilisateur avant qu’ils ne soient cherchés en
     base. Vous pouvez utiliser les variables standard ici, p. ex. %Lu
     est le nom d’utilisateur en minuscule, %n enlève le domaine s’il
     est donné ou ‘%n-AT-%d’ changerait le ‘@’ en ‘-AT-’. Cette
     traduction est faite après les changements de
     ‘auth-username-translation’. La valeur par défaut est ‘"%Lu"’.

 -- paramètre de ‘dovecot-configuration’ : string
          auth-master-user-separator
     Si vous voulez permettre aux utilisateurs maîtres de se connecter
     en spécifiant le nom d’utilisateur maître dans la chaîne de nom
     d’utilisateur normal (c.-à-d. sans utiliser le support du mécanisme
     SASL pour cela), vous pouvez spécifier le caractère de séparation
     ici. Le format est ensuite <nom d’utilisateur><séparateur><nom
     d’utilisateur maître>. UW-IMAP utilise ‘*’ comme séparateur, donc
     ça pourrait être un bon choix. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string
          auth-anonymous-username
     Nom d’utilisateur à utiliser pour les utilisateurs qui se
     connectent avec le mécanisme SASL ANONYMOUS. La valeur par défaut
     est ‘"anonymous"’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          auth-worker-max-count
     Nombre maximum de processus de travail dovecot-auth. Ils sont
     utilisés pour exécuter des requêtes passdb et userdb bloquantes (p.
     ex. MySQL et PAM). Ils sont créés automatiquement et détruits au
     besoin. La valeur par défaut est ‘30’.

 -- paramètre de ‘dovecot-configuration’ : string auth-gssapi-hostname
     Nom d’hôte à utiliser dans les noms GSSAPI principaux. La valeur
     par défaut est d’utiliser le nom renvoyé par gethostname().
     Utilisez ‘$ALL’ (avec des guillemets) pour permettre toutes les
     entrées keytab. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string auth-krb5-keytab
     Keytab Kerberos à utiliser pour le mécanisme GSSAPI. Utilisera la
     valeur par défaut du système (typiquement ‘/etc/krb5.keytab’) s’il
     n’est pas spécifié. Vous pourriez avoir besoin de faire en sorte
     que le service d’authentification tourne en root pour pouvoir lire
     ce fichier. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : boolean auth-use-winbind?
     Effectue l’authentification NTLM et GSS-SPNEGO avec le démon
     winbind de Samba et l’utilitaire ‘ntlm-auth’.
     <doc/wiki/Authentication/Mechanisms/Winbind.txt>. La valeur par
     défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : file-name
          auth-winbind-helper-path
     Chemin du binaire ‘ntlm-auth’ de samba. La valeur par défaut est
     ‘"/usr/bin/ntlm_auth"’.

 -- paramètre de ‘dovecot-configuration’ : string auth-failure-delay
     Durée d’attente avant de répondre à des authentifications échouées.
     La valeur par défaut est ‘"2 secs"’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          auth-ssl-require-client-cert?
     Requiert un certification client SSL valide ou l’authentification
     échoue. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          auth-ssl-username-from-cert?
     Prend le nom d’utilisateur du certificat SSL client, avec
     ‘X509_NAME_get_text_by_NID()’ qui renvoie le CommonName du DN du
     sujet. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          auth-mechanisms
     Liste des mécanismes d’authentification souhaités. Les mécanismes
     supportés sont : ‘plain’, ‘login’, ‘digest-md5’, ‘cram-md5’,
     ‘ntlm’, ‘rpa’, ‘apop’, ‘anonymous’, ‘gssapi’, ‘otp’, ‘skey’ et
     ‘gss-spnego’. Remarquez : Voir aussi le paramètre
     ‘disable-plaintext-auth’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          director-servers
     Liste des IP ou des noms d’hôtes des serveurs directeurs, dont
     soi-même. Les ports peuvent être spécifiés avec ip:port. Le port
     par défaut est le même que le ‘inet-listener’ du service directeur.
     La valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          director-mail-servers
     Liste des IP ou des noms d’hôtes de tous les serveurs de courriel
     de la grappe. Les intervalles sont aussi permis, comme
     10.0.0.10-10.0.0.30. La valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : string director-user-expire
     Combien de temps avant de rediriger les utilisateurs à un serveur
     spécifique après qu’il n’y a plus de connexion. La valeur par
     défaut est ‘"15 min"’.

 -- paramètre de ‘dovecot-configuration’ : string director-username-hash
     La manière de traduire le nom d’utilisateur avant de le hasher. Les
     valeurs utiles comprennent %Ln si l’utilisateur peut se connecter
     avec ou sans @domain, %Ld si les boîtes aux lettres sont partagées
     dans le domaine. La valeur par défaut est ‘"%Lu"’.

 -- paramètre de ‘dovecot-configuration’ : string log-path
     Fichier de journal à utiliser pour les messages d’erreur. ‘syslog’
     journalise vers syslog, ‘/dev/stderr’ vers la sortie d’erreur. La
     valeur par défaut est ‘"syslog"’.

 -- paramètre de ‘dovecot-configuration’ : string info-log-path
     Fichier de journal à utiliser pour les messages d’information. La
     valeur par défaut est ‘log-path’. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string debug-log-path
     Fichier de journal à utiliser pour les messages de débogage. La
     valeur par défaut est ‘info-log-path’. La valeur par défaut est
     ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string syslog-facility
     Dispositif syslog à utiliser si vous journalisez avec syslog.
     Normalement si vous ne voulez pas utiliser ‘mail’, vous voudrez
     utiliser local0..local7. D’autres dispositifs standard sont
     supportés. La valeur par défaut est ‘"mail"’.

 -- paramètre de ‘dovecot-configuration’ : boolean auth-verbose?
     Indique s’il faut enregistrer les tentatives de connexion échouées
     et la raison de leur échec. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : string auth-verbose-passwords
     Dans le cas où le mot de passe n’était pas correct, indique s’il
     faut enregistrer le mauvais mot de passe. Les valeurs valides sont
     « no », « plain » et « sha1 ». Il peut être utile d’indiquer « sha1
     » pour discriminer des attaques par force brute d’utilisateurs qui
     réessayent encore et encore le même mot de passe. Vous pouvez aussi
     tronquer la valeur à n caractères en ajoutant « :n » (p. ex. «
     sha1:6 »). La valeur par défaut est ‘"no"’.

 -- paramètre de ‘dovecot-configuration’ : boolean auth-debug?
     Journaux encore plus verbeux pour le débogage. Cela montre par
     exemple les requêtes SQL effectuées. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean auth-debug-passwords?
     Dans le cas où le mot de passe était incorrect, indique s’il faut
     enregistrer les mots de passe et les schémas utilisés pour que le
     problème puisse être débogué. Activer cette option active aussi
     ‘auth-debug’. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean mail-debug?
     Indique s’il faut activer le débogage du traitement des courriels.
     Cela peut vous aider à comprendre pourquoi Dovecot ne trouve pas
     vos courriels. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean verbose-ssl?
     Indique s’il faut montrer les erreurs au niveau SSL. La valeur par
     défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : string log-timestamp
     Préfixe à utiliser devant chaque ligne écrite dans le fichier
     journal. Les codes % sont au format strftime(3). La valeur par
     défaut est ‘"\"%b %d %H:%M:%S \""’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          login-log-format-elements
     Liste des éléments qu’il faut enregistrer. Les éléments qui ont une
     variable non vide sont agrégés pour former une chaîne de mots
     séparés par des virgules.

 -- paramètre de ‘dovecot-configuration’ : string login-log-format
     Format du journal de connexion. %s contient la chaîne
     ‘login-log-format-elements’, %$ contient la donnée à enregistrer.
     La valeur par défaut est ‘"%$: %s"’.

 -- paramètre de ‘dovecot-configuration’ : string mail-log-prefix
     Préfixe à utiliser devant chaque ligne du fichier de journal pour
     les processus traitant les courriels. Voir doc/wiki/Variables.txt
     pour trouver la liste des variables que vous pouvez utiliser. La
     valeur par défaut est ‘"\"%s(%u)<%{pid}><%{session}>: \""’.

 -- paramètre de ‘dovecot-configuration’ : string deliver-log-format
     Format à utiliser pour enregistrer les livraisons de courriels.
     Vous pouvez utiliser ces variables :
     ‘%$’
          Message de statut de la livraison (p. ex. ‘saved to INBOX’)
     ‘%m’
          Message-ID
     ‘%s’
          Objet
     ‘%f’
          Adresse « de »
     ‘%p’
          Taille physique
     ‘%w’
          Taille virtuelle.
     La valeur par défaut est ‘"msgid=%m: %$"’.

 -- paramètre de ‘dovecot-configuration’ : string mail-location
     Emplacement des boîtes à lettre des utilisateurs. La valeur par
     défaut est vide, ce qui signifie que Dovecot essaiera de trouver
     les boîte aux lettres automatiquement. Cela ne fonctionnera pas si
     l’utilisateur n’a aucun courriel, donc il vaut mieux indiquer
     explicitement le bon emplacement à Dovecot.

     If you’re using mbox, giving a path to the INBOX file (e.g.
     ‘/var/mail/%u’) isn’t enough. You’ll also need to tell Dovecot
     where the other mailboxes are kept. This is called the _root mail
     directory_, and it must be the first path given in the
     ‘mail-location’ setting.

     There are a few special variables you can use, e.g.:

     ‘%u’
          nom d’utilisateur
     ‘%n’
          la partie « utilisateur » dans « utilisateur@domaine », comme
          %u s’il n’y a pas de domaine
     ‘%d’
          la partie « domaine » dans « utilisateur@domaine », vide s’il
          n’y a pas de domaine
     ‘%h’
          répertoire personnel

     Voir doc/wiki/Variables.txt pour la liste complète. Quelques
     exemple :
     ‘maildir:~/Maildir’
     ‘mbox:~/mail:INBOX=/var/mail/%u’
     ‘mbox:/var/mail/%d/%1n/%n:INDEX=/var/indexes/%d/%1n/%’
     La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string mail-uid
     Utilisateur et groupe système utilisé pour accéder aux courriels.
     Si vous utilisez multiple, userdb peut remplacer ces valeurs en
     renvoyant les champs uid et gid. Vous pouvez utiliser soit des
     nombres, soit des noms. <doc/wiki/UserIds.txt>. La valeur par
     défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string mail-gid

     La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string mail-privileged-group
     Group to enable temporarily for privileged operations. Currently
     this is used only with INBOX when either its initial creation or
     dotlocking fails. Typically this is set to ‘"mail"’ to give access
     to ‘/var/mail’. Defaults to ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string mail-access-groups
     Grant access to these supplementary groups for mail processes.
     Typically these are used to set up access to shared mailboxes. Note
     that it may be dangerous to set these if users can create symlinks
     (e.g. if ‘mail’ group is set here, ‘ln -s /var/mail ~/mail/var’
     could allow a user to delete others’ mailboxes, or ‘ln -s
     /secret/shared/box ~/mail/mybox’ would allow reading it). Defaults
     to ‘""’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          mail-full-filesystem-access?
     Allow full file system access to clients. There’s no access checks
     other than what the operating system does for the active UID/GID.
     It works with both maildir and mboxes, allowing you to prefix
     mailboxes names with e.g. ‘/path/’ or ‘~user/’. Defaults to ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean mmap-disable?
     Don’t use ‘mmap()’ at all. This is required if you store indexes to
     shared file systems (NFS or clustered file system). Defaults to
     ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean dotlock-use-excl?
     S’appuyer sur ‘O_EXCL’ lors de la création de fichiers de
     verrouillage. NFS supporte ‘O_EXCL’ depuis la version 3, donc cette
     option est sûre de nos jours. La valeur par défaut est ‘#t’.

 -- paramètre de ‘dovecot-configuration’ : string mail-fsync
     Quand utiliser les appels à fsync() ou fdatasync() :
     ‘optimized’
          Lorsque cela est nécessaire pour éviter de perdre des données
          importantes
     ‘always’
          Useful with e.g. NFS when ‘write()’s are delayed
     ‘never’
          Ne l’utilisez pas (ça a de meilleures performances, mais les
          crashs font perdre toutes les données).
     La valeur par défaut est ‘"optimized"’.

 -- paramètre de ‘dovecot-configuration’ : boolean mail-nfs-storage?
     Le stockage des courriels se fait sur NFS. Utilisez cette option
     pour que Dovecot vide les caches NFS lorsque c’est nécessaire. Si
     vous utilisez seulement un simple serveur de courriel, ce n’est pas
     nécessaire. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean mail-nfs-index?
     Les fichiers d’index de courriels sont sur un système de fichiers
     NFS. Pour utiliser cette option, vous aurez besoin de
     ‘mmap-disable? #t’ et ‘fsync-disable? #f’. La valeur par défaut est
     ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : string lock-method
     Méthode de verrouillage des fichiers d’index. Les alternatives sont
     fcntl, flock et dotlock. Le verrouillage-point (dotlocking) utilise
     des astuces qui peuvent créer plus d’utilisation du disque que les
     autres méthodes de verrouillage. Pour les utilisateurs de NFS,
     flock ne marche pas, et rappelez-vous de modifier ‘mmap-disable’.
     La valeur par défaut est ‘"fcntl"’.

 -- paramètre de ‘dovecot-configuration’ : file-name mail-temp-dir
     Le répertoire dans lequel LDA/LMTP stockent temporairement les
     courriels de plus de 128 Ko. La valeur par défaut est ‘"/tmp"’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          first-valid-uid
     L’intervalle d’UID valides pour les utilisateurs. Cette option est
     surtout utile pour s’assurer que les utilisateurs ne peuvent pas
     s’authentifier en tant que démon ou qu’un autre utilisateur
     système. Remarquez que la connexion en root est interdite en dur
     dans le binaire de dovecot et qu’on ne peut pas l’autoriser même si
     ‘first-valid-uid’ vaut 0. La valeur par défaut est ‘500’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          last-valid-uid

     La valeur par défaut est ‘0’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          first-valid-gid
     Li’ntervalle de GID valides pour les utilisateurs. Les utilisateurs
     qui ont un GID non-valide comme numéro de groupe primaire ne
     peuvent pas se connecter. Si l’utilisateur appartient à un groupe
     avec un GID non valide, ce groupe n’est pas utilisable. La valeur
     par défaut est ‘1’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          last-valid-gid

     La valeur par défaut est ‘0’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          mail-max-keyword-length
     Longueur maximale autorisée pour les mots-clefs. Elle n’est
     utilisée que lors de la création de nouveaux mots-clefs. La valeur
     par défaut est ‘50’.

 -- paramètre de ‘dovecot-configuration’ :
          colon-separated-file-name-list valid-chroot-dirs
     List of directories under which chrooting is allowed for mail
     processes (i.e. ‘/var/mail’ will allow chrooting to
     ‘/var/mail/foo/bar’ too). This setting doesn’t affect
     ‘login-chroot’ ‘mail-chroot’ or auth chroot settings. If this
     setting is empty, ‘/./’ in home dirs are ignored. WARNING: Never
     add directories here which local users can modify, that may lead to
     root exploit. Usually this should be done only if you don’t allow
     shell access for users. <doc/wiki/Chrooting.txt>. Defaults to ‘()’.

 -- paramètre de ‘dovecot-configuration’ : string mail-chroot
     Default chroot directory for mail processes. This can be overridden
     for specific users in user database by giving ‘/./’ in user’s home
     directory (e.g. ‘/home/./user’ chroots into ‘/home’). Note that
     usually there is no real need to do chrooting, Dovecot doesn’t
     allow users to access files outside their mail directory anyway. If
     your home directories are prefixed with the chroot directory,
     append ‘/.’ to ‘mail-chroot’. <doc/wiki/Chrooting.txt>. Defaults to
     ‘""’.

 -- paramètre de ‘dovecot-configuration’ : file-name auth-socket-path
     Chemin de socket UNIX vers le serveur d’authentification maître
     pour trouver les utilisateurs. C’est utilisé par imap (pour les
     utilisateurs partagés) et lda. La valeur par défaut est
     ‘"/var/run/dovecot/auth-userdb"’.

 -- paramètre de ‘dovecot-configuration’ : file-name mail-plugin-dir
     Répertoire où trouver les greffons. La valeur par défaut est
     ‘"/usr/lib/dovecot"’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          mail-plugins
     Liste des greffons à charger pour tous les services. Les greffons
     spécifiques à IMAP, LDA, etc. sont ajoutés à cette liste dans leur
     propre fichiers .conf. La valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          mail-cache-min-mail-count
     Le nombre minimal de courriels dans une boîte aux lettres avant de
     mettre à jour le fichier de cache. Cela permet d’optimiser le
     comportement de Dovecot pour qu’il fasse moins d’écriture disque
     contre plus de lecture disque. La valeur par défaut est ‘0’.

 -- paramètre de ‘dovecot-configuration’ : string
          mailbox-idle-check-interval
     Lorsque la commande IDLE est lancée, la boîte aux lettres est
     vérifiée de temps en temps pour voir s’il y a de nouveaux messages
     ou d’autres changements. Ce paramètre défini le temps d’attente
     minimum entre deux vérifications. Dovecot peut aussi utilise
     dnotify, inotify et kqueue pour trouver immédiatement les
     changements. La valeur par défaut est ‘"30 secs"’.

 -- paramètre de ‘dovecot-configuration’ : boolean mail-save-crlf?
     Sauvegarder les courriels avec CR+LF plutôt que seulement LF. Cela
     permet de consommer moins de CPU en envoyant ces courriels, surtout
     avec l’appel système sendfile() de Linux et FreeBSD. Mais cela crée
     un peu plus d’utilisation du disque, ce qui peut aussi le ralentir.
     Remarquez aussi que si d’autres logiciels lisent les mbox/maildirs,
     ils peuvent se tromper dans leur traitement de ces CR
     supplémentaires et causer des problèmes. La valeur par défaut est
     ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean maildir-stat-dirs?
     Par défaut la commande LIST renvoie toutes les entrées du maildir
     qui commencent par un point. Activer cette option permet à Dovecot
     de renvoyer uniquement les entrées qui sont des répertoires. Cela
     se fait avec stat() sur chaque entrée, ce qui cause plus
     d’utilisation du disque. For systems setting struct
     ‘dirent->d_type’ this check is free and it’s done always regardless
     of this setting). La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          maildir-copy-with-hardlinks?
     Lors de la copie d’un message, le faire avec des liens en dur si
     possible. Cela améliore un peu la performance et n’a que peu de
     chance d’avoir des effets secondaires.

 -- paramètre de ‘dovecot-configuration’ : boolean
          maildir-very-dirty-syncs?
     Suppose que Dovecot est le seul MUA qui accède à Maildir : scanne
     le répertoire cur/ seulement lorsque son mtime change de manière
     inattendue ou lorsqu’il ne peut pas trouver le courriel autrement.
     La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          mbox-read-locks
     La méthode de verrouillage à utiliser pour verrouiller le boîtes
     aux lettres mbox. Il y en a quatre :

     ‘dotlock’
          Crée un fichier <mailbox>.lock. C’est la solution la plus
          ancienne et la plus sûr pour NFS. Si vous voulez utiliser
          /var/mail/, les utilisateurs auront besoin de l’accès en
          écriture à ce répertoire.
     ‘dotlock-try’
          Comme pour dotlock, mais si elle échoue à cause d’un problème
          de permission ou parce qu’il n’y a pas assez d’espace disque,
          l’ignore.
     ‘fcntl’
          Utilisez cette méthode si possible. Elle fonctionne aussi avec
          NFS si vous utilisez lockd.
     ‘flock’
          Peut ne pas exister sur tous les systèmes. Ne fonctionne pas
          avec NFS.
     ‘lockf’
          Peut ne pas exister sur tous les systèmes. Ne fonctionne pas
          avec NFS.

     Vous pouvez utiliser plusieurs méthodes de verrouillage ; dans ce
     cas l’ordre dans lequel elles sont déclarées est important pour
     éviter des interblocages si d’autres MTA/MUA utilisent aussi
     plusieurs méthodes. Certains systèmes d’exploitation ne permettent
     pas d’utiliser certaines méthodes en même temps.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          mbox-write-locks

 -- paramètre de ‘dovecot-configuration’ : string mbox-lock-timeout
     Temps d’attente maximal pour un verrou (tous les verrous) avant
     d’abandonner. La valeur par défaut est ‘"5 mins"’.

 -- paramètre de ‘dovecot-configuration’ : string
          mbox-dotlock-change-timeout
     Si le fichier dotlock existe mais que la boîte aux lettres n’est
     pas modifiée, remplacer le fichier de verrouillage après ce temps
     d’attente. La valeur par défaut est ‘"2 mins"’.

 -- paramètre de ‘dovecot-configuration’ : boolean mbox-dirty-syncs?
     Lorsqu’un mbox change ne manière inattendue, il faut le lire en
     entier pour savoir ce qui a changé. Si le mbox est assez grand cela
     peut prendre beaucoup de temps. Comme le changement est
     habituellement un simple courriel supplémentaire, il serait plus
     rapide de lire le nouveaux courriels. Si ce paramètre est activé,
     Dovecot fait cela mais revient toujours à relire le fichier mbox
     complet si le fichier n’est pas comme attendu. Le seul réel
     inconvénient à ce paramètre est que certains MUA changent les
     drapeaux des messages, et dans ce cas Dovecot ne s’en rend pas
     immédiatement compte. Remarquez qu’une synchronisation complète est
     effectuée avec les commandes SELECT, EXAMINE, EXPUNGE et CHECK. La
     valeur par défaut est ‘#t’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          mbox-very-dirty-syncs?
     Comme ‘mbox-dirty-syncs’, mais ne synchronise pas complètement même
     avec les commandes SELECT, EXAMINE, EXPUNGE ou CHECK. Si l’option
     n’est pas activée, ‘mbox-dirty-syncs’ est ignorée. La valeur par
     défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean mbox-lazy-writes?
     Attendre avant d’écrire les en-têtes mbox jusqu’à la prochaine
     synchronisation des écritures (les commandes EXPUNGE et CHECK et
     quand on ferme la boîte aux lettres). C’est surtout utile pour POP3
     où les clients suppriment souvent tous les courriels.
     L’inconvénient c’est que vos changements ne sont pas immédiatement
     visibles pour les autres MUA. La valeur par défaut est ‘#t’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          mbox-min-index-size
     Si la taille du fichier mbox est plus petite que cela (p. ex.
     100k), ne pas écrire de fichier d’index. Si un fichier d’index
     existe déjà il est toujours lu, mais pas mis à jour. La valeur par
     défaut est ‘0’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          mdbox-rotate-size
     Taille du fichier dbox maximale avant rotation. La valeur par
     défaut est ‘10000000’.

 -- paramètre de ‘dovecot-configuration’ : string mdbox-rotate-interval
     Âge maximum du fichier dbox avant rotation. Typiquement en jours.
     Les jours commencent à minuit, donc 1d signifie aujourd’hui, 2d
     pour hier, etc. 0 pour désactiver la vérification. La valeur par
     défaut est ‘"1d"’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          mdbox-preallocate-space?
     Lors de la création des fichiers mdbox, préallouer immédiatement
     leur taille à ‘mdbox-rotate-size’. Ce paramètre ne fonctionne
     actuellement que dans Linux avec certains systèmes de fichiers
     (ext4, xfs). La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : string mail-attachment-dir
     Les formats sdbox et mdbox supportent la sauvegarde des
     pièces-jointes dans des fichiers externes, ce qui permet de les
     stocker une seule fois. Les autres moteurs ne le supportent pas
     pour le moment.

     ATTENTION : Cette fonctionnalité n’a pas été beaucoup testée.
     Utilisez-la à vos risques et périls.

     Racine du répertoire où stocker les pièces-jointes. Désactivé si
     vide. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          mail-attachment-min-size
     Les pièces-jointes plus petites que cela ne sont pas enregistrées à
     part. Il est aussi possible d’écrire un greffon pour désactiver
     l’enregistrement externe de certaines pièces-jointes spécifiques.
     La valeur par défaut est ‘128000’.

 -- paramètre de ‘dovecot-configuration’ : string mail-attachment-fs
     Moteur du système de fichier à utiliser pour sauvegarder les
     pièces-jointes :
     ‘posix’
          Pas de SiS (single instance storage) par Dovecot (mais cela
          peut aider la déduplication du système de fichier)
     ‘sis posix’
          SiS avec comparaison bit-à-bit immédiate pendant la sauvegarde
     ‘sis-queue posix’
          SiS avec déduplication et comparaison différées.
     La valeur par défaut est ‘"sis posix"’.

 -- paramètre de ‘dovecot-configuration’ : string mail-attachment-hash
     Format de hash à utiliser dans les noms de fichiers des
     pièces-jointes. Vous pouvez ajouter n’importe quel texte ou
     variable : ‘%{md4}’, ‘%{md5}’, ‘%{sha1}’, ‘%{sha256}’, ‘%{sha512}’,
     ‘%{size}’. Les variables peuvent être tronquées, p. ex.
     ‘%{sha256:80}’ renvoie seulement les 80 premiers bits. La valeur
     par défaut est ‘"%{sha1}"’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          default-process-limit

     La valeur par défaut est ‘100’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          default-client-limit

     La valeur par défaut est ‘1000’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          default-vsz-limit
     Limite VSZ (taille mémoire virtuelle) par défaut pour les processus
     de service. C’est surtout pour attraper et tuer les processus qui
     font fuiter la mémoire avant qu’ils ne l’utilisent en entier. La
     valeur par défaut est ‘256000000’.

 -- paramètre de ‘dovecot-configuration’ : string default-login-user
     Utilisateur de connexion utilisé en interne par les processus de
     connexion. C’est l’utilisateur avec la confiance minimale pour
     Dovecot. Il ne devrait avoir accès à rien du tout. La valeur par
     défaut est ‘"dovenull"’.

 -- paramètre de ‘dovecot-configuration’ : string default-internal-user
     Utilisateur utilisé en interne par les processus non privilégiés.
     Il devrait être différent de l’utilisateur de connexion, pour que
     les processus de connexion ne puissent pas perturber les autres
     processus. La valeur par défaut est ‘"dovecot"’.

 -- paramètre de ‘dovecot-configuration’ : string ssl?
     Support SSL/TLS : yes, no, required. <doc/wiki/SSL.txt>. La valeur
     par défaut est ‘"required"’.

 -- paramètre de ‘dovecot-configuration’ : string ssl-cert
     Certificat SSL/TLS X.509 encodé en PEM (clef publique). La valeur
     par défaut est ‘"</etc/dovecot/default.pem"’.

 -- paramètre de ‘dovecot-configuration’ : string ssl-key
     Clef privée SSL/TLS encodée en PEM. La clef est ouverte avant
     l’abandon des privilèges root, donc laissez-la non-lisible pour les
     utilisateurs. La valeur par défaut est
     ‘"</etc/dovecot/private/default.pem"’.

 -- paramètre de ‘dovecot-configuration’ : string ssl-key-password
     Si le fichier de clef est protégé par un mot de passe, donnez-le
     ici. Autrement, donnez-le en démarrant dovecot avec le paramètre
     -p. Comme ce fichier est souvent lisible pour tout le monde, vous
     pourriez vouloir placer ce paramètre dans un autre fichier. La
     valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string ssl-ca
     Certificat de l’autorité de confiance encodé en PEM. Indiquez cette
     valeur si vous voulez utiliser ‘ssl-verify-client-cert? #t’. Le
     fichier devrait contenir les certificats de CA suivi par les CRL
     correspondants (p. ex. ‘ssl-ca </etc/ssl/certs/ca.pem’). La valeur
     par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : boolean ssl-require-crl?
     Indique si les certificats clients doivent réussir la vérification
     du CRL. La valeur par défaut est ‘#t’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          ssl-verify-client-cert?
     Demande aux clients d’envoyer un certificat. Si vous voulez aussi
     le requérir, indiquez ‘auth-ssl-require-client-cert? #t’ dans la
     section auth. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : string
          ssl-cert-username-field
     Le champ du certificat à utiliser pour le nom d’utilisateur. Les
     choix habituels sont commonName et X500UniqueIdentifier. Vous
     devrez aussi indiquer ‘auth-ssl-username-from-cert? #t’. La valeur
     par défaut est ‘"commonName"’.

 -- paramètre de ‘dovecot-configuration’ : string ssl-min-protocol
     Version minimale de SSL à accepter. La valeur par défaut est
     ‘"TLSv1"’.

 -- paramètre de ‘dovecot-configuration’ : string ssl-cipher-list
     Méthodes de chiffrement à utiliser. La valeur par défaut est
     ‘"ALL:!kRSA:!SRP:!kDHd:!DSS:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK:!RC4:!ADH:!LOW@STRENGTH"’.

 -- paramètre de ‘dovecot-configuration’ : string ssl-crypto-device
     Moteur cryptographique SSL à utiliser. Pour les valeur valides,
     lancez « openssl engine ». La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string postmaster-address
     Adresse à utiliser pour envoyer les courriels de rejet. %d
     correspond au domaine du destinataire. La valeur par défaut est
     ‘"postmaster@%d"’.

 -- paramètre de ‘dovecot-configuration’ : string hostname
     Nom d’hôte à utiliser dans diverses parties des courriels envoyés
     (p. ex. dans Message-Id) et dans les réponses LMTP. La valeur par
     défaut est le nomdhôte@domaine réel du système. La valeur par
     défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : boolean quota-full-tempfail?
     Si l’utilisateur dépasse le quota, renvoie un échec temporaire au
     lieu de rejeter le courriel. La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : file-name sendmail-path
     Binaire à utiliser pour envoyer des courriels. La valeur par défaut
     est ‘"/usr/sbin/sendmail"’.

 -- paramètre de ‘dovecot-configuration’ : string submission-host
     Si la valeur est non vide, envoyer les courriels à ce serveur SMTP
     hôte[:port] au lieu de sendmail. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string rejection-subject
     En-tête d’objet à utiliser pour les courriels de rejet. Vous pouvez
     utiliser les mêmes variables que pour ‘rejection-reason’
     ci-dessous. La valeur par défaut est ‘"Rejected: %s"’.

 -- paramètre de ‘dovecot-configuration’ : string rejection-reason
     Message d’erreur pour les humains dans les courriels de rejet. Vous
     pouvez utiliser ces variables :

     ‘%n’
          CRLF
     ‘%r’
          raison
     ‘%s’
          objet du courriel de départ
     ‘%t’
          destinataire
     La valeur par défaut est ‘"Your message to <%t> was automatically
     rejected:%n%r"’.

 -- paramètre de ‘dovecot-configuration’ : string recipient-delimiter
     Caractère de délimitation entre la partie locale et le détail des
     adresses de courriel. La valeur par défaut est ‘"+"’.

 -- paramètre de ‘dovecot-configuration’ : string
          lda-original-recipient-header
     En-tête où l’adresse du destinataire d’origine (l’adresse RCPT TO
     de SMTP) est récupérée si elle n’est pas disponible ailleurs. Le
     paramètre -a de dovecot-lda le remplace. L’en-tête couramment
     utilisée pour cela est X-Original-To. La valeur par défaut est
     ‘""’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          lda-mailbox-autocreate?
     Sauvegarder un courriel dans un fichier qui n’existe pas devrait-il
     le créer ? La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : boolean
          lda-mailbox-autosubscribe?
     Devrait-on aussi se souscrire aux boîtes aux lettres nouvellement
     créées ? La valeur par défaut est ‘#f’.

 -- paramètre de ‘dovecot-configuration’ : non-negative-integer
          imap-max-line-length
     Longueur maximale de la ligne de commande IMAP. Certains clients
     génèrent des lignes de commandes très longues avec des boîtes aux
     lettres énormes, donc vous pourriez avoir besoin d’augmenter cette
     limite si vous obtenez les erreurs « Too long argument » ou « IMAP
     command line too large ». La valeur par défaut est ‘64000’.

 -- paramètre de ‘dovecot-configuration’ : string imap-logout-format
     Format de la chaîne de déconnexion IMAP :
     ‘%i’
          nombre d’octets lus par le client
     ‘%o’
          nombre total d’octets envoyés au client.
     Voir ‘doc/wiki/Variables.txt’ pour une liste de toutes les
     variables utilisables. La valeur par défaut est ‘"in=%i out=%o
     deleted=%{deleted} expunged=%{expunged} trashed=%{trashed}
     hdr_count=%{fetch_hdr_count} hdr_bytes=%{fetch_hdr_bytes}
     body_count=%{fetch_body_count} body_bytes=%{fetch_body_bytes}"’.

 -- paramètre de ‘dovecot-configuration’ : string imap-capability
     Remplace la réponse CAPABILITY d’IMAP. Si la valeur commence par «
     + », ajoute les capacités données en haut des valeur par défaut (p.
     ex. +XFOO XBAR). La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string
          imap-idle-notify-interval
     Temps d’attente entre les notifications « OK Still here » lorsque
     le client est en IDLE. La valeur par défaut est ‘"2 mins"’.

 -- paramètre de ‘dovecot-configuration’ : string imap-id-send
     Noms des champs ID et de leur valeur à envoyer aux clients. « * »
     signifie la valeur par défaut. Les champs suivants ont actuellement
     des valeurs par défaut : name, version, os, os-version,
     support-url, support-email. La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : string imap-id-log
     Champs ID envoyés par le client à enregistrer. « * » signifie tout.
     La valeur par défaut est ‘""’.

 -- paramètre de ‘dovecot-configuration’ : space-separated-string-list
          imap-client-workarounds
     Contournements pour divers bogues de certains client :

     ‘delay-newmail’
          Envoi des notifications de nouveau message EXISTS/RECENT
          seulement en réponse aux commandes NOOP et CHECK. Certains
          clients les ignorent autrement, par exemple OSX Mail (< v2.1).
          Outlook Express est encore plus cassé, sans cela il peut
          montrer des erreurs de type « Le message n’est plus sur le
          serveur ». Remarquez que OE6 est toujours cassé même avec ce
          contournement si la synchronisation est à « En-têtes seulement
          ».

     ‘tb-extra-mailbox-sep’
          Thunderbird se mélange les pinceaux avec LAYOUT=fs (mbox et
          dbox) et ajoute un suffixe ‘/’ supplémentaire sur les noms des
          boîtes aux lettres. Cette option fait que dovecot ignore le
          ‘/’ supplémentaire au lieu de le traiter comme un nom de boîte
          aux lettres invalide.

     ‘tb-lsub-flags’
          Montre les drapeaux \Noselect pour les réponses LSUB avec
          LAYOUT=fs (p. ex. mbox). Cela fait que Thunderbird réalise
          qu’ils ne sont pas sélectionnables et les montre en grisé, au
          lieu de montrer un popup « non sélectionnable » après coup.
     La valeur par défaut est ‘()’.

 -- paramètre de ‘dovecot-configuration’ : string imap-urlauth-host
     Hôte autorisé dans les URL URLAUTH envoyés par les clients. « * »
     les autorise tous. La valeur par défaut est ‘""’.

   Ouf ! Tant d’options de configuration. La bonne nouvelle, c’est que
Guix a une interface complète avec le langage de configuration de
Dovecot. Cela permet non seulement de déclarer la configuration de
manière agréable, mais aussi d’offrir des capacités de réflexion : les
utilisateurs peuvent écrire du code pour inspecter et transformer les
configuration depuis Scheme.

   Cependant, vous pourriez avoir un fichier ‘dovecot.conf’ déjà tout
prêt. Dans ce cas, vous pouvez passer un objet
‘opaque-dovecot-configuration’ comme paramètre ‘#:config’ à
‘dovecot-service’. Comme son nom l’indique, une configuration opaque n’a
pas les capacités de réflexions.

   Les champs de ‘opaque-dovecot-configuration’ disponibles sont :

 -- paramètre de ‘opaque-dovecot-configuration’ : package dovecot
     Le paquet dovecot.

 -- paramètre de ‘opaque-dovecot-configuration’ : string string
     Le contenu de ‘dovecot.conf’, en tant que chaîne de caractères.

   Par exemple, si votre ‘dovecot.conf’ est simplement la chaîne vide,
vous pouvez instancier un service dovecot comme cela :

     (dovecot-service #:config
                      (opaque-dovecot-configuration
                       (string "")))

Service OpenSMTPD
.................

 -- Variable Scheme : opensmtpd-service-type
     C’est le type de service de OpenSMTPD (https://www.opensmtpd.org),
     dont la valeur devrait être un objet ‘opensmtpd-configuration’
     comme dans cet exemple :

          (service opensmtpd-service-type
                   (opensmtpd-configuration
                     (config-file (local-file "./my-smtpd.conf"))))

 -- Type de données : opensmtpd-configuration
     Type de données représentant la configuration de opensmtpd.

     ‘package’ (par défaut : OPENSMTPD)
          Objet de paquet du serveur SMTP OpenSMTPD.

     ‘config-file’ (default: ‘%default-opensmtpd-file’)
          Objet simili-fichier du fichier de configuration de OpenSMTPD
          à utiliser. Par défaut il écoute sur l’interface de boucle
          locale et accepte les courriels des utilisateurs et des démons
          de la machine locale, et autorise l’envoi de courriels à des
          serveurs distants. Lancez ‘man smtpd.conf’ pour plus
          d’information.

Service Exim
............

 -- Variable Scheme : exim-service-type
     C’est le type de l’agent de transfert de courriel (MTA) Exim
     (https://exim.org), dont la valeur devrait être un objet
     ‘exim-configuration’ comme dans cet exemple :

          (service exim-service-type
                   (exim-configuration
                     (config-file (local-file "./my-exim.conf"))))

   Pour utilise le service ‘exim-service-type’ vous devez aussi avoir un
service ‘mail-aliases-service-type’ dans votre ‘operating-system’ (même
sans alias).

 -- Type de données : exim-configuration
     Type de données représentant la configuration d’exim.

     ‘package’ (par défaut : EXIM)
          Objet de paquet du serveur Exim.

     ‘config-file’ (par défaut : ‘#f’)
          Objet simili-fichier du fichier de configuration d’Exim à
          utiliser. Si sa valeur est ‘#f’ alors le service utilisera la
          configuration par défaut du paquet fournit dans ‘package’. Le
          fichier de configuration qui en résulte est chargé après avoir
          mis en place les variables de configuration ‘exim_user’ et
          ‘exim_group’.

Getmail service
...............

 -- Scheme Variable : getmail-service-type
     This is the type of the Getmail
     (http://pyropus.ca/software/getmail/) mail retriever, whose value
     should be an ‘getmail-configuration’.

   Available ‘getmail-configuration’ fields are:

 -- ‘getmail-configuration’ parameter : symbol name
     A symbol to identify the getmail service.

     Defaults to ‘"unset"’.

 -- ‘getmail-configuration’ parameter : package package
     The getmail package to use.

 -- ‘getmail-configuration’ parameter : string user
     The user to run getmail as.

     Defaults to ‘"getmail"’.

 -- ‘getmail-configuration’ parameter : string group
     The group to run getmail as.

     Defaults to ‘"getmail"’.

 -- ‘getmail-configuration’ parameter : string directory
     The getmail directory to use.

     Defaults to ‘"/var/lib/getmail/default"’.

 -- ‘getmail-configuration’ parameter : getmail-configuration-file
          rcfile
     The getmail configuration file to use.

     Available ‘getmail-configuration-file’ fields are:

      -- ‘getmail-configuration-file’ parameter :
               getmail-retriever-configuration retriever
          What mail account to retrieve mail from, and how to access
          that account.

          Available ‘getmail-retriever-configuration’ fields are:

           -- ‘getmail-retriever-configuration’ parameter : string type
               The type of mail retriever to use. Valid values include
               ‘passwd’ and ‘static’.

               Defaults to ‘"SimpleIMAPSSLRetriever"’.

           -- ‘getmail-retriever-configuration’ parameter : string
                    server
               Username to login to the mail server with.

               Defaults to ‘unset’.

           -- ‘getmail-retriever-configuration’ parameter : string
                    username
               Username to login to the mail server with.

               Defaults to ‘unset’.

           -- ‘getmail-retriever-configuration’ parameter :
                    non-negative-integer port
               Port number to connect to.

               La valeur par défaut est ‘#f’.

           -- ‘getmail-retriever-configuration’ parameter : string
                    password
               Override fields from passwd.

               La valeur par défaut est ‘""’.

           -- ‘getmail-retriever-configuration’ parameter : list
                    password-command
               Override fields from passwd.

               La valeur par défaut est ‘()’.

           -- ‘getmail-retriever-configuration’ parameter : string
                    keyfile
               PEM-formatted key file to use for the TLS negotiation.

               La valeur par défaut est ‘""’.

           -- ‘getmail-retriever-configuration’ parameter : string
                    certfile
               PEM-formatted certificate file to use for the TLS
               negotiation.

               La valeur par défaut est ‘""’.

           -- ‘getmail-retriever-configuration’ parameter : string
                    ca-certs
               CA certificates to use.

               La valeur par défaut est ‘""’.

           -- ‘getmail-retriever-configuration’ parameter :
                    parameter-alist extra-parameters
               Extra retriever parameters.

               La valeur par défaut est ‘()’.

      -- ‘getmail-configuration-file’ parameter :
               getmail-destination-configuration destination
          What to do with retrieved messages.

          Available ‘getmail-destination-configuration’ fields are:

           -- ‘getmail-destination-configuration’ parameter : string
                    type
               The type of mail destination. Valid values include
               ‘Maildir’, ‘Mboxrd’ and ‘MDA_external’.

               Defaults to ‘unset’.

           -- ‘getmail-destination-configuration’ parameter :
                    string-or-filelike path
               The path option for the mail destination. The behaviour
               depends on the chosen type.

               La valeur par défaut est ‘""’.

           -- ‘getmail-destination-configuration’ parameter :
                    parameter-alist extra-parameters
               Extra destination parameters

               La valeur par défaut est ‘()’.

      -- ‘getmail-configuration-file’ parameter :
               getmail-options-configuration options
          Configure getmail.

          Available ‘getmail-options-configuration’ fields are:

           -- ‘getmail-options-configuration’ parameter :
                    non-negative-integer verbose
               If set to ‘0’, getmail will only print warnings and
               errors. A value of ‘1’ means that messages will be
               printed about retrieving and deleting messages. If set to
               ‘2’, getmail will print messages about each of it’s
               actions.

               La valeur par défaut est ‘1’.

           -- ‘getmail-options-configuration’ parameter : boolean
                    read-all
               If true, getmail will retrieve all available messages.
               Otherwise it will only retrieve messages it hasn’t seen
               previously.

               La valeur par défaut est ‘#t’.

           -- ‘getmail-options-configuration’ parameter : boolean delete
               If set to true, messages will be deleted from the server
               after retrieving and successfully delivering them.
               Otherwise, messages will be left on the server.

               La valeur par défaut est ‘#f’.

           -- ‘getmail-options-configuration’ parameter :
                    non-negative-integer delete-after
               Getmail will delete messages this number of days after
               seeing them, if they have been delivered. This means
               messages will be left on the server this number of days
               after delivering them. A value of ‘0’ disabled this
               feature.

               La valeur par défaut est ‘0’.

           -- ‘getmail-options-configuration’ parameter :
                    non-negative-integer delete-bigger-than
               Delete messages larger than this of bytes after
               retrieving them, even if the delete and delete-after
               options are disabled. A value of ‘0’ disables this
               feature.

               La valeur par défaut est ‘0’.

           -- ‘getmail-options-configuration’ parameter :
                    non-negative-integer max-bytes-per-session
               Retrieve messages totalling up to this number of bytes
               before closing the session with the server. A value of
               ‘0’ disables this feature.

               La valeur par défaut est ‘0’.

           -- ‘getmail-options-configuration’ parameter :
                    non-negative-integer max-message-size
               Don’t retrieve messages larger than this number of bytes.
               A value of ‘0’ disables this feature.

               La valeur par défaut est ‘0’.

           -- ‘getmail-options-configuration’ parameter : boolean
                    delivered-to
               If true, getmail will add a Delivered-To header to
               messages.

               La valeur par défaut est ‘#t’.

           -- ‘getmail-options-configuration’ parameter : boolean
                    received
               If set, getmail adds a Received header to the messages.

               La valeur par défaut est ‘#t’.

           -- ‘getmail-options-configuration’ parameter : string
                    message-log
               Getmail will record a log of its actions to the named
               file. A value of ‘""’ disables this feature.

               La valeur par défaut est ‘""’.

           -- ‘getmail-options-configuration’ parameter : boolean
                    message-log-syslog
               If true, getmail will record a log of its actions using
               the system logger.

               La valeur par défaut est ‘#f’.

           -- ‘getmail-options-configuration’ parameter : boolean
                    message-log-verbose
               If true, getmail will log information about messages not
               retrieved and the reason for not retrieving them, as well
               as starting and ending information lines.

               La valeur par défaut est ‘#f’.

           -- ‘getmail-options-configuration’ parameter :
                    parameter-alist extra-parameters
               Extra options to include.

               La valeur par défaut est ‘()’.

 -- ‘getmail-configuration’ parameter : list idle
     A list of mailboxes that getmail should wait on the server for new
     mail notifications. This depends on the server supporting the IDLE
     extension.

     La valeur par défaut est ‘()’.

 -- ‘getmail-configuration’ parameter : list environment-variables
     Environment variables to set for getmail.

     La valeur par défaut est ‘()’.

Service d’alias de courriel
...........................

 -- Variable Scheme : mail-aliases-service-type
     C’est le type de service qui fournit ‘/etc/aliases’ et qui spécifie
     comment délivrer les courriels aux utilisateurs du système.

          (service mail-aliases-service-type
                   '(("postmaster" "bob")
                     ("bob" "bob@example.com" "bob@example2.com")))

   La configuration pour un service ‘mail-aliases-service-type’ est une
liste associative qui dénote comment délivrer les courriels qui arrivent
au système. Chaque entrée est de la forme ‘(alias adresses ...)’ avec
‘alias’ qui spécifie l’alias local et ‘adresses’ qui spécifie où
délivrer les courriels de cet utilisateur.

   Les alias n’ont pas besoin de correspondre à des utilisateurs locaux
du système. Dans l’exemple au-dessus, il n’y a pas besoin d’une entrée
‘postmaster’ dans la liste ‘user-accounts’ du ‘operating-system’ pour
délivrer les courriels à destination de ‘postmaster’ à ‘bob’ (qui
ensuite délivrerait le courriel à ‘bob@example.com’ et
‘bob@example2.com’).

Démon IMAP4 GNU Mailutils
.........................

 -- Variable Scheme : imap4d-service-type
     C’est le type du démon IMAP4 GNU Mailutils, dont la valeur devrait
     être un objet ‘imap4d-configuration’ comme dans cet exemple :

          (service imap4d-service-type
                   (imap4d-configuration
                     (config-file (local-file "imap4d.conf"))))

 -- Type de données : imap4d-configuration
     Type de données représentant la configuration de ‘imap4d’.

     ‘package’ (par défaut : ‘mailutils’)
          Le paquet qui fournit ‘imap4d’.

     ‘config-file’ (par défaut : ‘%default-imap4d-config-file’)
          Objet simili-fichier du fichier de configuration à utiliser.
          Par défaut, la configuration fera écouter sur le port TCP 143
          sur ‘localhost’. *Note (mailutils)Conf-imap4d::, pour les
          détails.


File: guix.fr.info,  Node: Services de messagerie,  Next: Services de téléphonie,  Prev: Services de courriels,  Up: Services

8.8.11 Services de messagerie
-----------------------------

Le module ‘(gnu services messaging)’ fournit des définitions de services
Guix pour les services de messageries instantanées : actuellement seul
Prosody est supporté.

Service Prosody
...............

 -- Variable Scheme : prosody-service-type
     C’est le type pour le le serveur de communication XMPP Prosody
     (https://prosody.im). Sa valeur doit être un enregistrement
     ‘prosody-configuration’ comme dans cet exemple :

          (service prosody-service-type
                   (prosody-configuration
                    (modules-enabled (cons* "groups" "mam" %default-modules-enabled))
                    (int-components
                     (list
                      (int-component-configuration
                       (hostname "conference.example.net")
                       (plugin "muc")
                       (mod-muc (mod-muc-configuration)))))
                    (virtualhosts
                     (list
                      (virtualhost-configuration
                       (domain "example.net"))))))

     Voir plus bas pour des détails sur ‘prosody-configuration’.

   Par défaut, Prosody n’a pas besoin de beaucoup de configuration. Seul
un champ ‘virtualhosts’ est requis : il spécifie le domaine que vous
voulez voir Prosody servir.

   Vous pouvez effectuer plusieurs vérifications de la configuration
générée avec la commande ‘prosodyctl check’.

   Prosodyctl vous aidera aussi à importer des certificats du répertoire
‘letsencrypt’ pour que l’utilisateur ‘prosody’ puisse y accéder. Voir
<https://prosody.im/doc/letsencrypt>.

     prosodyctl --root cert import /etc/letsencrypt/live

   Les paramètres de configuration disponibles sont les suivants. Chaque
définition des paramètres est précédé par son type ; par exemple,
‘string-list foo’ indique que le paramètre ‘foo’ devrait être spécifié
comme une liste de chaînes de caractères. Les types précédés de ‘maybe-’
signifient que le paramètre n’apparaîtra pas dans ‘prosody.cfg.lua’
lorsque sa valeur est ‘'disabled’.

   Il y a aussi une manière de spécifier la configuration en tant que
chaîne de caractères si vous avez un vieux fichier ‘prosody.cfg.lua’ que
vous voulez porter depuis un autre système ; voir la fin pour plus de
détails.

   Le type ‘file-object’ désigne soit un objet simili-fichier (*note
file-like objects: G-Expressions.), soit un nom de fichier.

   Les champs de ‘prosody-configuration’ disponibles sont :

 -- paramètre de ‘prosody-configuration’ : package prosody
     Le paquet Prosody.

 -- paramètre de ‘prosody-configuration’ : file-name data-path
     Emplacement du répertoire de stockage des données de Prosody. Voir
     <https://prosody.im/doc/configure>. La valeur par défaut est
     ‘"/var/lib/prosody"’.

 -- paramètre de ‘prosody-configuration’ : file-object-list plugin-paths
     Répertoires de greffons supplémentaires. Ils sont analysés dans
     l’ordre spécifié. Voir <https://prosody.im/doc/plugins_directory>.
     La valeur par défaut est ‘()’.

 -- paramètre de ‘prosody-configuration’ : file-name certificates
     Chaque hôte virtuel et composant a besoin d’un certificat pour que
     les clients et les serveurs puissent vérifier son identité. Prosody
     chargera automatiquement les clefs et les certificats dans le
     répertoire spécifié ici. La valeur par défaut est
     ‘"/etc/prosody/certs"’.

 -- paramètre de ‘prosody-configuration’ : string-list admins
     C’est une liste des comptes administrateurs de ce serveur.
     Remarquez que vous devez créer les comptes séparément. Voir
     <https://prosody.im/doc/admins> et
     <https://prosody.im/doc/creating_accounts>. Par exemple : ‘(admins
     '("user1@example.com" "user2@example.net"))’. La valeur par défaut
     est ‘()’.

 -- paramètre de ‘prosody-configuration’ : boolean use-libevent?
     Active l’utilisation de libevent pour de meilleures performances
     sous une forte charge. Voir <https://prosody.im/doc/libevent>. La
     valeur par défaut est ‘#f’.

 -- paramètre de ‘prosody-configuration’ : module-list modules-enabled
     C’est la liste des modules que Prosody chargera au démarrage. Il
     cherchera ‘mod_modulename.lua’ dans le répertoire des greffons,
     donc assurez-vous qu’il existe aussi. La documentation des modules
     se trouve sur <https://prosody.im/doc/modules>. La valeur par
     défaut est ‘("roster" "saslauth" "tls" "dialback" "disco" "carbons"
     "private" "blocklist" "vcard" "version" "uptime" "time" "ping"
     "pep" "register" "admin_adhoc")’.

 -- paramètre de ‘prosody-configuration’ : string-list modules-disabled
     ‘"offline"’,‘"c2s"’ et ‘"s2s"’ sont chargés automatiquement, mais
     si vous voulez les désactiver, ajoutez-les à cette liste. La valeur
     par défaut est ‘()’.

 -- paramètre de ‘prosody-configuration’ : file-object groups-file
     Chemin vers un fichier texte où les groupes partagés sont définis.
     Si ce chemin est vide alors ‘mod_groups’ ne fait rien. Voir
     <https://prosody.im/doc/modules/mod_groups>. La valeur par défaut
     est ‘"/var/lib/prosody/sharedgroups.txt"’.

 -- paramètre de ‘prosody-configuration’ : boolean allow-registration?
     Désactive la création de compte par défaut, pour la sécurité. Voir
     <https://prosody.im/doc/creating_accounts>. La valeur par défaut
     est ‘#f’.

 -- paramètre de ‘prosody-configuration’ : maybe-ssl-configuration ssl
     Ce sont les paramètres liés à SSL/TLS. La plupart sont désactivés
     pour pouvoir utiliser les paramètres par défaut de Prosody. Si vous
     ne comprenez pas complètement ces options, ne les ajoutez pas à
     votre configuration, il est aisé de diminuer la sécurité de votre
     serveur en les modifiant. Voir
     <https://prosody.im/doc/advanced_ssl_config>.

     Les champs de ‘ssl-configuration’ disponibles sont :

      -- paramètre de ‘ssl-configuration’ : maybe-string protocol
          Cela détermine la poignée de main à utiliser.

      -- paramètre de ‘ssl-configuration’ : maybe-file-name key
          Chemin vers votre fichier de clef privée.

      -- paramètre de ‘ssl-configuration’ : maybe-file-name certificate
          Chemin vers votre fichier de certificat.

      -- paramètre de ‘ssl-configuration’ : file-object capath
          Chemin vers le répertoire contenant les certificats racines
          que vous voulez voir Prosody utiliser lors de la vérification
          des certificats des serveurs distants. La valeur par défaut
          est ‘"/etc/ssl/certs"’.

      -- paramètre de ‘ssl-configuration’ : maybe-file-object cafile
          Chemin vers un fichier contenant les certificats racines
          auxquels Prosody devra faire confiance. Comme ‘capath’ mais
          avec les certificats concaténés ensemble.

      -- paramètre de ‘ssl-configuration’ : maybe-string-list verify
          Une liste d’options de vérification (qui correspondent
          globalement aux drapeaux ‘set_verify()’ d’OpenSSL).

      -- paramètre de ‘ssl-configuration’ : maybe-string-list options
          Une liste d’options générales liées à SSL/TLS. Elles
          correspondent globalement à ‘set_options()’ d’OpenSSL. Pour
          une liste complète des options disponibles dans LuaSec, voir
          les sources de LuaSec.

      -- paramètre de ‘ssl-configuration’ : maybe-non-negative-integer
               depth
          Longueur maximale d’une chaîne d’autorités de certifications
          avant la racine.

      -- paramètre de ‘ssl-configuration’ : maybe-string ciphers
          Une chaîne de méthodes de chiffrement OpenSSL. Cela choisi les
          méthodes de chiffrement que Prosody offrira aux clients, et
          dans quel ordre de préférence.

      -- paramètre de ‘ssl-configuration’ : maybe-file-name dhparam
          Un chemin vers un fichier contenant les paramètres pour
          l’échange de clef Diffie-Hellman. Vous pouvez créer un tel
          fichier avec : ‘openssl dhparam -out
          /etc/prosody/certs/dh-2048.pem 2048’

      -- paramètre de ‘ssl-configuration’ : maybe-string curve
          Courbe pour Diffie-Hellman sur courbe elliptique. La valeur
          par défaut de Prosody est ‘"secp384r1"’.

      -- paramètre de ‘ssl-configuration’ : maybe-string-list verifyext
          A list of “extra” verification options.

      -- paramètre de ‘ssl-configuration’ : maybe-string password
          Mot de passe pour les clefs privées chiffrées.

 -- paramètre de ‘prosody-configuration’ : boolean
          c2s-require-encryption?
     S’il faut forcer toutes les connexions client-serveur à être
     chiffrées ou non. Voir <https://prosody.im/doc/modules/mod_tls>. La
     valeur par défaut est ‘#f’.

 -- paramètre de ‘prosody-configuration’ : string-list
          disable-sasl-mechanisms
     Ensemble de mécanismes qui ne seront jamais offerts. Voir
     <https://prosody.im/doc/modules/mod_saslauth>. La valeur par défaut
     est ‘("DIGEST-MD5")’.

 -- paramètre de ‘prosody-configuration’ : boolean
          s2s-require-encryption?
     S’il faut forcer toutes les connexion serveur-serveur à être
     chiffrées ou non. Voir <https://prosody.im/doc/modules/mod_tls>. La
     valeur par défaut est ‘#f’.

 -- paramètre de ‘prosody-configuration’ : boolean s2s-secure-auth?
     S’il faut requérir le chiffrement et l’authentification du
     certificat. Cela fournit une sécurité idéale, mais demande que les
     serveurs avec lesquels vous communiquez supportent le chiffrement
     ET présentent un certificat valide et de confiance. Voir
     <https://prosody.im/doc/s2s#security>. La valeur par défaut est
     ‘#f’.

 -- paramètre de ‘prosody-configuration’ : string-list
          s2s-insecure-domains
     Beaucoup de serveurs ne supportent pas le chiffrement ou ont un
     certificat invalide ou auto-signé. Vous pouvez lister les domaines
     ici qui n’ont pas besoin de s’authentifier avec des certificats.
     Ils seront authentifiés par DNS. Voir
     <https://prosody.im/doc/s2s#security>. La valeur par défaut est
     ‘()’.

 -- paramètre de ‘prosody-configuration’ : string-list
          s2s-secure-domains
     Même si vous laissez ‘s2s-secure-auth?’ désactivé, vous pouvez
     toujours demander un certificat valide pour certains domaine en
     spécifiant la liste ici. Voir
     <https://prosody.im/doc/s2s#security>. La valeur par défaut est
     ‘()’.

 -- paramètre de ‘prosody-configuration’ : string authentication
     Choisi le moteur d’authentification à utiliser. Le moteur par
     défaut stocke les mots de passes en texte clair et utilise la
     configuration de stockage des données de Prosody pour stocker les
     données authentifiées. Si vous n’avez pas confiance dans le
     serveur, lisez
     <https://prosody.im/doc/modules/mod_auth_internal_hashed> pour plus
     d’information sur l’utilisation du moteur hashed. Voir aussi
     <https://prosody.im/doc/authentication>. La valeur par défaut est
     ‘"internal_plain"’.

 -- paramètre de ‘prosody-configuration’ : maybe-string log
     Indique les options de journalisation. La configuration avancée des
     journaux n’est pas encore supportée par le service Prosody. Voir
     <https://prosody.im/doc/logging>. La valeur par défaut est
     ‘"*syslog"’.

 -- paramètre de ‘prosody-configuration’ : file-name pidfile
     Fichier où écrire le PID. Voir
     <https://prosody.im/doc/modules/mod_posix>. La valeur par défaut
     est ‘"/var/run/prosody/prosody.pid"’.

 -- paramètre de ‘prosody-configuration’ : maybe-non-negative-integer
          http-max-content-size
     Taille maximum autorisée pour le corps HTTP (en octets).

 -- paramètre de ‘prosody-configuration’ : maybe-string
          http-external-url
     Certains modules exposent leur propre URL de diverses manières.
     Cette URL est construite à partir du protocole, de l’hôte et du
     port utilisé. Si Prosody se trouve derrière un proxy, l’URL
     publique sera ‘http-external-url’ à la place. Voir
     <https://prosody.im/doc/http#external_url>.

 -- paramètre de ‘prosody-configuration’ :
          virtualhost-configuration-list virtualhosts
     Un hôte dans Prosody est un domaine sur lequel les comptes
     utilisateurs sont créés. Par exemple si vous voulez que vos
     utilisateurs aient une adresse comme ‘"john.smith@example.com"’
     vous devrez ajouter un hôte ‘"example.com"’. Toutes les options de
     cette liste seront appliquées uniquement à cet hôte.

     Note: the name _virtual_ host is used in configuration to avoid
     confusion with the actual physical host that Prosody is installed
     on. A single Prosody instance can serve many domains, each one
     defined as a VirtualHost entry in Prosody’s configuration.
     Conversely a server that hosts a single domain would have just one
     VirtualHost entry.

     Voir <https://prosody.im/doc/configure#virtual_host_settings>.

     Les champs de ‘virtualhost-configuration’ disponibles sont :

     tous ces champs de ‘prosody-configuration’ : ‘admins’,
     ‘use-libevent?’, ‘modules-enabled’, ‘modules-disabled’,
     ‘groups-file’, ‘allow-registration?’, ‘ssl’,
     ‘c2s-require-encryption?’, ‘disable-sasl-mechanisms’,
     ‘s2s-require-encryption?’, ‘s2s-secure-auth?’,
     ‘s2s-insecure-domains’, ‘s2s-secure-domains’, ‘authentication’,
     ‘log’, ‘http-max-content-size’, ‘http-external-url’, ‘raw-content’,
     plus :
      -- paramètre de ‘virtualhost-configuration’ : string domain
          Domaine que vous souhaitez que Prosody serve.

 -- paramètre de ‘prosody-configuration’ :
          int-component-configuration-list int-components
     Les composant sont des services supplémentaires qui sont
     disponibles pour les clients, habituellement sur un sous-domaine du
     serveur principal (comme ‘"mycomponent.example.com"’). Des exemples
     de composants sont des serveurs de chatroom, des répertoires
     utilisateurs ou des passerelles vers d’autres protocoles.

     Les composants internes sont implémentés dans des greffons
     spécifiques à Prosody. Pour ajouter un composant interne, vous
     n’avez qu’à remplir le champ de nom d’hôte et le greffon que vous
     voulez utiliser pour le composant.

     Voir <https://prosody.im/doc/components>. La valeur par défaut est
     ‘()’.

     Les champs de ‘int-component-configuration’ disponibles sont :

     tous ces champs de ‘prosody-configuration’ : ‘admins’,
     ‘use-libevent?’, ‘modules-enabled’, ‘modules-disabled’,
     ‘groups-file’, ‘allow-registration?’, ‘ssl’,
     ‘c2s-require-encryption?’, ‘disable-sasl-mechanisms’,
     ‘s2s-require-encryption?’, ‘s2s-secure-auth?’,
     ‘s2s-insecure-domains’, ‘s2s-secure-domains’, ‘authentication’,
     ‘log’, ‘http-max-content-size’, ‘http-external-url’, ‘raw-content’,
     plus :
      -- paramètre de ‘int-component-configuration’ : string hostname
          Nom d’hôte du composant.

      -- paramètre de ‘int-component-configuration’ : string plugin
          Greffon que vous voulez utiliser pour ce composant.

      -- paramètre de ‘int-component-configuration’ :
               maybe-mod-muc-configuration mod-muc
          Le chat multi-utilisateur (MUC) est le modules de Prosody qui
          vous permet de créer des chatrooms/conférences pour les
          utilisateurs XMPP.

          General information on setting up and using multi-user
          chatrooms can be found in the “Chatrooms” documentation
          (<https://prosody.im/doc/chatrooms>), which you should read if
          you are new to XMPP chatrooms.

          Voir aussi <https://prosody.im/doc/modules/mod_muc>.

          Les champs de ‘mod-muc-configuration’ disponibles sont :

           -- paramètre de ‘mod-muc-configuration’ : string name
               Le nom à renvoyer dans les réponses de découverte de
               services. La valeur par défaut est ‘"Prosody Chatrooms"’.

           -- paramètre de ‘mod-muc-configuration’ : string-or-boolean
                    restrict-room-creation
               Si la valeur est ‘#t’, cela permettra uniquement aux
               admins de créer de nouveaux salons. Sinon n’importe qui
               peut créer un salon. La valeur ‘"local"’ restreint la
               création aux utilisateurs du domaine parent du service.
               P. ex. ‘user@example.com’ peut créer des salons sur
               ‘rooms.example.com’. La valeur ‘"admin"’ restreint ce
               service aux administrateurs. La valeur par défaut est
               ‘#f’.

           -- paramètre de ‘mod-muc-configuration’ :
                    non-negative-integer max-history-messages
               Nombre maximum de messages d’historique qui seront
               envoyés aux membres qui viennent de rejoindre le salon.
               La valeur par défaut est ‘20’.

 -- paramètre de ‘prosody-configuration’ :
          ext-component-configuration-list ext-components
     Les composants externes utilisent XEP-0114, que la plupart des
     composants supportent. Pour ajouter un composant externe, vous
     remplissez simplement le champ de nom d’hôte. Voir
     <https://prosody.im/doc/components>. La valeur par défaut est ‘()’.

     Les champs de ‘ext-component-configuration’ disponibles sont :

     tous ces champs de ‘prosody-configuration’ : ‘admins’,
     ‘use-libevent?’, ‘modules-enabled’, ‘modules-disabled’,
     ‘groups-file’, ‘allow-registration?’, ‘ssl’,
     ‘c2s-require-encryption?’, ‘disable-sasl-mechanisms’,
     ‘s2s-require-encryption?’, ‘s2s-secure-auth?’,
     ‘s2s-insecure-domains’, ‘s2s-secure-domains’, ‘authentication’,
     ‘log’, ‘http-max-content-size’, ‘http-external-url’, ‘raw-content’,
     plus :
      -- paramètre de ‘ext-component-configuration’ : string
               component-secret
          Mot de passe que le composant utilisera pour s’authentifier.

      -- paramètre de ‘ext-component-configuration’ : string hostname
          Nom d’hôte du composant.

 -- paramètre de ‘prosody-configuration’ : non-negative-integer-list
          component-ports
     Ports sur lesquels Prosody écoutera les connexions des composants.
     La valeur par défaut est ‘(5347)’.

 -- paramètre de ‘prosody-configuration’ : string component-interface
     Interface sur laquelle Prosody écoutera les connexions des
     composants. La valeur par défaut est ‘"127.0.0.1"’.

 -- paramètre de ‘prosody-configuration’ : maybe-raw-content raw-content
     Contenu brut qui sera ajouté au fichier de configuration.

   Il se peut que vous ayez juste envie de lancer un fichier
‘prosody.cfg.lua’ directement. Dans ce cas, vous pouvez passer un
enregistrement ‘opaque-prosody-configuration’ comme valeur à
‘prosody-service-type’. Comme son nom l’indique, une configuration
opaque n’a pas de capacités de réflexion simples. Les champs disponibles
de ‘opaque-prosody-configuration’ sont :

 -- paramètre de ‘opaque-prosody-configuration’ : package prosody
     Le paquet prosody.

 -- paramètre de ‘opaque-prosody-configuration’ : string prosody.cfg.lua
     Le contenu de ‘prosody.cfg.lua’ à utiliser.

   Par exemple, si votre ‘prosody.cfg.lua’ est juste la chaîne vide,
vous pouvez instancier un service prosody comme ceci :

     (service prosody-service-type
              (opaque-prosody-configuration
               (prosody.cfg.lua "")))

Service BitlBee
...............

BitlBee (https://bitlbee.org) est une passerelle qui fournit une
interface IRC vers une variété de protocoles de messagerie instantanée
comme XMPP.

 -- Variable Scheme : bitlbee-service-type
     C’est le type de service pour le démon de passerelle IRC BitlBee
     (https://bitlbee.org). Sa valeur est un ‘bitlbee-configuration’
     (voir plus bas).

     Pour que BitlBee écoute sur le port 6667 sur localhost, ajoutez
     cette ligne à vos services :

          (service bitlbee-service-type)

 -- Type de données : bitlbee-configuration
     C’est la configuration de BitlBee, avec les champs suivants :

     ‘interface’ (par défaut : ‘"127.0.0.1"’)
     ‘port’ (par défaut : ‘6667’)
          Écoute sur l’interface réseau correspondant à l’adresse IP
          dans INTERFACE, sur PORT.

          Lorsque INTERFACE vaut ‘127.0.0.1’, seuls les clients locaux
          peuvent se connecter ; lorsqu’elle vaut ‘0.0.0.0’, les
          connexions peuvent venir de n’importe quelle interface réseau.

     ‘bitlbee’ (default: ‘bitlbee’)
          Le paquet BitlBee à utiliser.

     ‘plugins’ (par défaut : ‘'()’)
          Liste des paquets de greffons à utiliser — p. ex.
          ‘bitlbee-discord’.

     ‘extra-settings’ (par défaut : ‘""’)
          Partie de configuration ajoutée telle-quelle au fichier de
          configuration de BitlBee.

Service Quassel
...............

Quassel (https://quassel-irc.org/) est un client IRC distribué, ce qui
signifie qu’un client ou plus peuvent s’attacher et se détacher du cœur
central.

 -- Variable Scheme : quassel-service-type
     C’est le type de service pour le démon IRC Quassel
     (https://quassel-irc.org/). Sa valeur est un
     ‘quassel-configuration’ (voir plus bas).

 -- Type de données : quassel-configuration
     C’est la configuration de Quassel, avec les champs suivants :

     ‘quassel’ (par défaut : ‘quassel’)
          Le paquet Quassel à utiliser.

     ‘interface’ (par défaut : ‘"::,0.0.0.0"’)
     ‘port’ (par défaut : ‘4242’)
          Écoute sur les interfaces réseau correspondant à l’adresse
          IPv4 ou IPv6 des interfaces spécifiées dans INTERFACE, une
          liste de chaînes délimitées par des virgules, sur PORT.

     ‘loglevel’ (par défaut : ‘"info"’)
          Le niveau de journalisation souhaité. Les valeurs acceptées
          sont « Debug », « Info », « Warning » et « Error ».


File: guix.fr.info,  Node: Services de téléphonie,  Next: Services de surveillance,  Prev: Services de messagerie,  Up: Services

8.8.12 Services de téléphonie
-----------------------------

Cette section décrit comment configurer et lancer un serveur Murmur.
Murmur est le serveur de la suite de voix-sur-IP (VoIP) Mumble
(https://mumble.info).

 -- Type de données : murmur-configuration
     Le type de service pour le serveur Murmur. Voici un exemple de
     configuration :

          (service murmur-service-type
                   (murmur-configuration
                    (welcome-text
                      "Bienvenue sur ce serveur Mumble qui tourne sur Guix !")
                    (cert-required? #t) ;désactive les connections par mot de passe
                    (ssl-cert "/etc/letsencrypt/live/mumble.example.com/fullchain.pem")
                    (ssl-key "/etc/letsencrypt/live/mumble.example.com/privkey.pem")))

     Après avoir reconfiguré votre système, vous pouvez manuellement
     indiquer le mot de passe ‘SuperUser’ de murmur avec la commande qui
     s’affiche pendant la phase d’activation.

     Il est recommandé d’enregistrer un compte utilisateur Mumble normal
     et de lui donner les droits admin ou modérateur. Vous pouvez
     utiliser le client ‘mumble’ pour vous connecter en tant que nouvel
     utilisateur normal, vous enregistrer et vous déconnecter. Pour
     l’étape suivante, connectez-vous avec le nom ‘SuperUser’ en
     utilisant le mot de passe ‘SuperUser’ que vous avez indiqué
     précédemment et accordez les droits administrateur ou modérateur à
     vous utilisateur mumble nouvellement enregistré et créez quelques
     salons.

     Les champs de ‘murmur-configuration’ disponibles sont :

     ‘package’ (par défaut : ‘mumble’)
          Paquet qui contient ‘bin/murmurd’.

     ‘user’ (par défaut : ‘"murmur"’)
          Utilisateur qui lancera le serveur Murmur.

     ‘group’ (par défaut : ‘"murmur"’)
          Groupe de l’utilisateur qui lancera le serveur Murmur.

     ‘port’ (par défaut : ‘64738’)
          Port sur lequel le serveur écoutera.

     ‘welcome-text’ (par défaut : ‘""’)
          Texte de bienvenue envoyé aux clients lors de leur connexion.

     ‘server-password’ (par défaut : ‘""’)
          Mot de passe que les clients devront entrer pour se connecter.

     ‘max-users’ (par défaut : ‘100’)
          Nombre maximum d’utilisateurs qui peuvent se connecter à ce
          serveur en même temps.

     ‘max-user-bandwidth’ (par défaut : ‘#f’)
          Trafic de voix maximum qu’un utilisateur peut envoyer par
          seconde.

     ‘database-file’ (par défaut : ‘"/var/lib/murmur/db.sqlite"’)
          Nom de fichier de la base de données sqlite. L’utilisateur du
          service deviendra propriétaire du répertoire.

     ‘log-file’ (par défaut : ‘"/var/log/murmur/murmur.log"’)
          Nom du fichier de journal. L’utilisateur du service deviendra
          propriétaire du répertoire.

     ‘autoban-attempts’ (par défaut : ‘10’)
          Nombre maximum de connexions qu’un utilisateur peut faire
          pendant ‘autoban-timeframe’ sans être banni automatiquement
          pour ‘autoban-time’.

     ‘autoban-timeframe’ (par défaut : ‘120’)
          Durée du temps pendant lequel le nombre de connexions est
          compté.

     ‘autoban-time’ (par défaut : ‘300’)
          Durée du bannissement automatique en secondes.

     ‘opus-threshold’ (par défaut : ‘100’)
          Pourcentage des clients qui doivent supporter opus avant de
          passer sur le codec audio opus.

     ‘channel-nesting-limit’ (par défaut : ‘10’)
          Profondeur maximum des canaux.

     ‘channelname-regex’ (par défaut : ‘#f’)
          Une chaîne de la forme d’une expression régulière Qt que les
          noms de canaux doivent respecter.

     ‘username-regex’ (par défaut : ‘#f’)
          Une chaîne de la forme d’une expression régulière Qt que les
          noms d’utilisateurs doivent respecter.

     ‘text-message-length’ (par défaut : ‘5000’)
          Taille maximum en octets qu’un utilisateur peut envoyer en un
          seul message textuel.

     ‘image-message-length’ (par défaut : ‘(* 128 1024)’)
          Taille maximum en octets qu’un utilisateur peut envoyer en une
          seule image.

     ‘cert-required?’ (par défaut : ‘#f’)
          If it is set to ‘#t’ clients that use weak password
          authentication will not be accepted. Users must have completed
          the certificate wizard to join.

     ‘remember-channel?’ (paramètre de : ‘#f’)
          Indique si murmur devrait se rappeler du dernier canal dans
          lequel étaient les utilisateurs au moment de leur déconnexion
          et les y remettre lorsqu’ils se reconnectent.

     ‘allow-html?’ (par défaut : ‘#f’)
          Indique si le html est autorisé dans les messages textuels,
          les commentaires utilisateurs et les descriptions des canaux.

     ‘allow-ping?’ (par défaut : ‘#f’)
          Mettre à vrai expose le nombre d’utilisateurs, le nombre
          d’utilisateurs maximum et la bande passante maximale du
          serveur par client aux utilisateurs non connectés. Dans le
          client Mumble, cette information est affichée dans la boîte de
          dialogue de connexion.

          Désactiver ce paramètre empêchera le serveur d’être
          publiquement listé.

     ‘bonjour?’ (par défaut : ‘#f’)
          Indique si le serveur se présente sur le réseau local à
          travers le protocole bonjour.

     ‘send-version?’ (par défaut : ‘#f’)
          Indique si la version du serveur murmur doit être exposée dans
          les requêtes ping.

     ‘log-days’ (par défaut : ‘31’)
          Murmur stocke aussi les journaux en base de données, qui sont
          accessible via RPC. La valeur par défaut est 31 jours, mais
          vous pouvez le mettre à 0 pour les garder pour toujours ou à
          -1 pour désactiver la journalisation dans la base de données.

     ‘obfuscate-ips?’ (par défaut : ‘#t’)
          Indique si les IP enregistrées doivent être cachées pour
          protéger la vie privée des utilisateurs.

     ‘ssl-cert’ (par défaut : ‘#f’)
          Nom de fichier du certificat SSL/TLS utilisé pour les
          connexions chiffrées.

               (ssl-cert "/etc/letsencrypt/live/example.com/fullchain.pem")
     ‘ssl-key’ (par défaut : ‘#f’)
          Chemin de fichier vers la clef privée ssl pour les connexions
          chiffrées.
               (ssl-key "/etc/letsencrypt/live/example.com/privkey.pem")

     ‘ssl-dh-params’ (par défaut : ‘#f’)
          Nom de fichier d’un fichier encodé en PEM avec les paramètres
          Diffie-Hellman pour le chiffrement SSL/TLS. Autrement vous
          pouvez indiquer ‘"@ffdhe2048"’, ‘"@ffdhe3072"’,
          ‘"@ffdhe4096"’, ‘"@ffdhe6144"’ ou ‘"@ffdhe8192"’ pour utiliser
          les paramètres inclus de la RFC 7919.

     ‘ssl-ciphers’ (par défaut : ‘#f’)
          L’option ‘ssl-ciphers’ permet de choisir les suites de
          chiffrement disponibles pour SSL/TLS.

          Cette option est spécifiée en utilisant l’OpenSSL cipher list
          notation
          (https://www.openssl.org/docs/apps/ciphers.html#CIPHER-LIST-FORMAT)

          Nous vous recommandons d’essayer votre chaîne de suites de
          chiffrements avec « openssl ciphers <chaîne> » avant de
          l’indiquer ici, pour avoir une idée des suites de chiffrement
          que vous aurez. Après avoir indiqué cette option, nous vous
          recommandons d’inspecter les journaux de Murmur pour vous
          assurer que Murmur utilise les suites de chiffrements
          auxquelles vous vous attendez.

          Remarque : modifier cette option peut impacter la
          rétrocompatibilité de votre serveur Murmur, et peut empêcher
          que des clients Mumble anciens se connectent.

     ‘public-registration’ (par défaut : ‘#f’)
          Doit être un enregistrement
          ‘<murmur-public-registration-configuration>’ ou ‘#f’.

          Vous pouvez aussi enregistrer votre serveur dans la liste des
          serveurs publiques que le client ‘mumble’ affiche au
          démarrage. Vous ne pouvez pas enregistrer votre serveur si
          vous avez un ‘server-password’ ou ‘allow-ping’ à ‘#f’.

          Cela peut prendre quelques heures avant d’arriver sur la liste
          publique.

     ‘file’ (par défaut : ‘#f’)
          Version alternative de cette configuration : si vous indiquez
          quelque chose, le reste est ignoré.

 -- Type de données : murmur-public-registration-configuration
     Configuration pour l’enregistrement public du service murmur.

     ‘name’
          C’est le nom d’affichage de votre serveur. Ne pas le confondre
          avec le nom d’hôte.

     ‘password’
          Un mot de passe pour identifier votre enregistrement. Les
          mises à jours suivantes devront utiliser le même mot de passe.
          Ne le perdez pas.

     ‘url’
          Cela devrait être le lien ‘http://’ ou ‘https://’ vers votre
          site web.

     ‘hostname’ (par défaut : ‘#f’)
          Par défaut votre serveur sera listé par son adresse IP. Si
          cette option est indiquée votre serveur sera listé par son nom
          d’hôte.


File: guix.fr.info,  Node: Services de surveillance,  Next: Services Kerberos,  Prev: Services de téléphonie,  Up: Services

8.8.13 Services de surveillance
-------------------------------

Service Tailon
..............

Tailon (https://tailon.readthedocs.io/) est une application web pour
visualiser et chercher des fichiers de journaux.

   L’exemple suivant configurera le service avec les valeurs par défaut.
Par défaut, on peut accéder à Tailon sur le pour 8080
(‘http://localhost:8080’).

     (service tailon-service-type)

   L’exemple suivant personnalise un peu plus la configuration de
Tailon, en ajoutant ‘sed’ à la liste des commandes autorisées.

     (service tailon-service-type
              (tailon-configuration
                (config-file
                  (tailon-configuration-file
                    (allowed-commands '("tail" "grep" "awk" "sed"))))))

 -- Type de données : tailon-configuration
     Type de données représentant la configuration de Tailon. Ce type a
     les paramètres suivants :

     ‘config-file’ (par défaut : ‘(tailon-configuration-file)’)
          Le fichier de configuration à utiliser pour Tailon. Ce champ
          peut contenir un enregistrement “tailon-configuration-file” ou
          n’importe quelle gexp (*note G-Expressions::).

          Par exemple, pour utiliser un fichier local à la place, on
          peut utiliser la fonction ‘local-file’ :

               (service tailon-service-type
                        (tailon-configuration
                          (config-file (local-file "./my-tailon.conf"))))

     ‘package’ (par défaut : ‘tailon’)
          Le paquet tailon à utiliser.

 -- Type de données : tailon-configuration-file
     Type de données représentant les options de configuration de
     Tailon. Ce type a les paramètres suivants :

     ‘files’ (par défaut : ‘(list "/var/log")’)
          Liste des fichiers à afficher. La liste peut inclure des
          chaînes pour des fichiers simple ou des répertoires, ou une
          liste, où le premier élément est le nom d’un sous-section et
          le reste des fichiers ou des répertoires de cette
          sous-section.

     ‘bind’ (par défaut : ‘"localhost:8080"’)
          Adresse et port sur lesquels Tailon écoute.

     ‘relative-root’ (par défaut : ‘#f’)
          Chemin de l’URL à utiliser pour Tailon, ou ‘#f’ pour ne pas
          utiliser de chemin.

     ‘allow-transfers?’ (par défaut : ‘#t’)
          Permet de télécharger les journaux dans l’interface web.

     ‘follow-names?’ (par défaut : ‘#t’)
          Permet de surveiller des fichiers qui n’existent pas encore.

     ‘tail-lines’ (par défaut : ‘200’)
          Nombre de lignes à lire initialement dans chaque fichier.

     ‘allowed-commands’ (par défaut : ‘(list "tail" "grep" "awk")’)
          Commandes autorisées. Par défaut, ‘sed’ est désactivé.

     ‘debug?’ (par défaut : ‘#f’)
          Configurez ‘debug?’ à ‘#t’ pour montrer les messages de
          débogage.

     ‘wrap-lines’ (par défaut : ‘#t’)
          État initial du retour à la ligne dans l’interface web.
          Configurez l’option à ‘#t’ pour retourner à la ligne (par
          défaut) ou à ‘#f’ pour ne pas retourner à la ligne au début.

     ‘http-auth’ (par défaut : ‘#f’)
          Type d’authentification HTTP à utiliser. Indiquez ‘#f’ pour
          désactiver l’authentification (par défaut). Les valeur
          supportées sont ‘"digest"’ et ‘"basic"’.

     ‘users’ (par défaut : ‘#f’)
          Si l’authentification HTTP est activée (voir ‘http-auth’),
          l’accès sera restreint aux identifiants fournis ici. Pour
          configurer des utilisateurs, utilisez une liste de paires, où
          le premier élément de la paire est le nom d’utilisateur et le
          second élément est le mot de passe.

               (tailon-configuration-file
                 (http-auth "basic")
                 (users     '(("user1" . "password1")
                              ("user2" . "password2"))))

Service Darkstat
................

Darkstat est un « renifleur de paquets » qui capture le trafic réseau,
calcul des statistiques sur l’utilisation et sert des rapport sur HTTP.

 -- Variable : Variable Scheme darkstat-service-type
     C’est le type de service pour le service darkstat
     (https://unix4lyfe.org/darkstat/), sa valeur doit être un
     enregistrement ‘darkstat-configuration’ comme dans cet exemple :

          (service darkstat-service-type
                   (darkstat-configuration
                     (interface "eno1")))

 -- Type de données : darkstat-configuration
     Type de données représentant la configuration de ‘darkstat’.

     ‘package’ (par défaut : ‘darkstat’)
          Le paquet darkstat à utiliser.

     ‘interface’
          Capture le trafic sur l’interface réseau spécifiée.

     ‘port’ (par défaut : ‘"667"’)
          Lie l’interface web sur le port spécifié.

     ‘bind-address’ (par défaut : ‘"127.0.0.1"’)
          Lie l’interface web sur l’adresse spécifiée.

     ‘base’ (par défaut : ‘"/"’)
          Spécifie le chemin de base des URL. C’est utile si on accède à
          ‘darkstat’ à travers un proxy inverse.

Service d’export de nœud de Prometheus
......................................

L’exportateur de nœuds de Prometheus rend disponible les statistiques
sur le matériel et le système d’exploitation fournies par le noyau Linux
pour le système de surveillance Prometheus. Ce service devrait être
déployé sur tous les nœuds physiques et les machines virtuelles, où vous
voulez surveiller ces statistiques.

 -- Variable : Variable Scheme prometheus-node-exporter-service-type
     C’est le type de service pour le service prometheus-node-exporter
     (https://github.com/prometheus/node_exporter/), sa valeur doit être
     un enregistrement ‘prometheus-node-exporter-configuration’ comme
     dans cet exemple :

          (service prometheus-node-exporter-service-type
                   (prometheus-node-exporter-configuration
                     (web-listen-address ":9100")))

 -- Type de données : prometheus-node-exporter-configuration
     Type de données représentant la configuration de ‘node_exporter’

     ‘package’ (par défaut : ‘go-github-com-prometheus-node-exporter’)
          Le paquet prometheus-node-exporter à utiliser.

     ‘web-listen-address’ (par défaut : ‘":9100"’)
          Lie l’interface web sur l’adresse spécifiée.

Server zabbix
.............

Zabbix fournit des métriques de suivi entre autres de l’utilisation du
réseau, de la charge CPU et de l’espace disque :

   • Haute performance, haute capacité (il est capable de surveiller des
     centaines de milliers d’appareils).
   • Découverte automatique des serveurs, des appareils et leurs
     interfaces réseaux.
   • Découverte bas-niveau, qui permet de commencer automatiquement à
     surveiller de nouveaux éléments, des systèmes de fichiers ou des
     interfaces réseaux entre autres.
   • Surveillance distribuée avec une administration web centralisée.
   • Agents natifs haute-performance.
   • Métriques SLA et ITIL KPI dans les rapports.
   • Vue haut-niveau (businness) des ressources surveillées à travers
     des écrans de consoles visuelles définie par l’utilisateur et des
     panneaux de commande.
   • Exécution à distance à travers les mandataires Zabbix.

   Les champs de ‘zabbix-server-configuration’ disponibles sont :

 -- paramètre de ‘zabbix-server-configuration’ : package zabbix-server
     Le paquet zabbix-server.

 -- paramètre de ‘zabbix-server-configuration’ : string user
     Utilisateur qui lancera le serveur Zabbix.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-server-configuration’ : group group
     Groupe qui lancera le serveur Zabbix.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-server-configuration’ : string db-host
     Le nom d’hôte de la base de données.

     La valeur par défaut est ‘"127.0.0.1"’.

 -- paramètre de ‘zabbix-server-configuration’ : string db-name
     Nom de la base de données.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-server-configuration’ : string db-user
     Utilisateur de la base de données.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-server-configuration’ : string db-password
     Mot de passe de la base de données. Utilisez plutôt ‘include-files’
     avec ‘DBPassword=SECRET’ dans le fichier spécifié à la place.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘zabbix-server-configuration’ : number db-port
     Port de la base de données.

     La valeur par défaut est ‘5432’.

 -- paramètre de ‘zabbix-server-configuration’ : string log-type
     Spécifie où les messages de journalisation seront écrits :

        • ‘system’ - syslog.

        • ‘file’ - fichier spécifié par le paramètre ‘log-file’.

        • ‘console’ - sortie standard.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘zabbix-server-configuration’ : string log-file
     Nom du fichier de journal lorsque le paramètre ‘log-type’ vaut
     ‘file’.

     La valeur par défaut est ‘"/var/log/zabbix/server.log"’.

 -- paramètre de ‘zabbix-server-configuration’ : string pid-file
     Nom du fichier de PID.

     La valeur par défaut est ‘"/var/run/zabbix/zabbix_server.pid"’.

 -- paramètre de ‘zabbix-server-configuration’ : string ssl-ca-location
     Emplacement des fichiers d’autorités de certification (AC) pour la
     vérification des certificats SSL du serveur.

     La valeur par défaut est ‘"/etc/ssl/certs/ca-certificates.crt"’.

 -- paramètre de ‘zabbix-server-configuration’ : string
          ssl-cert-location
     Emplacement des certificats SSL des clients.

     La valeur par défaut est ‘"/etc/ssl/certs"’.

 -- paramètre de ‘zabbix-server-configuration’ : string extra-options
     Options supplémentaires ajoutées à la fin du fichier de
     configuration du serveur Zabbix.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘zabbix-server-configuration’ : include-files
          include-files
     Vous pouvez inclure des fichiers individuels ou tous les fichiers
     d’un répertoire dans le fichier de configuration.

     La valeur par défaut est ‘()’.

Agent zabbix
............

L’agent Zabbix récupère des informations pour le serveur Zabbix.

   Les champs de ‘zabbix-agent-configuration’ disponibles sont :

 -- paramètre de ‘zabbix-agent-configuration’ : package zabbix-agent
     Le paquet zabbix-agent.

 -- paramètre de ‘zabbix-agent-configuration’ : string user
     Utilisateur qui lancera l’agent Zabbix.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-agent-configuration’ : group group
     Groupe qui lancera l’agent Zabbix.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-agent-configuration’ : string hostname
     Noms d’hôte unique et sensible à la casse requis pour les
     vérifications actives et qui doit correspondre au nom d’hôte
     configuré sur le serveur.

     La valeur par défaut est ‘"Zabbix server"’.

 -- paramètre de ‘zabbix-agent-configuration’ : string log-type
     Spécifie où les messages de journalisation seront écrits :

        • ‘system’ - syslog.

        • ‘file’ - fichier spécifié par le paramètre ‘log-file’.

        • ‘console’ - sortie standard.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘zabbix-agent-configuration’ : string log-file
     Nom du fichier de journal lorsque le paramètre ‘log-type’ vaut
     ‘file’.

     La valeur par défaut est ‘"/var/log/zabbix/agent.log"’.

 -- paramètre de ‘zabbix-agent-configuration’ : string pid-file
     Nom du fichier de PID.

     La valeur par défaut est ‘"/var/run/zabbix/zabbix_agent.pid"’.

 -- paramètre de ‘zabbix-agent-configuration’ : list server
     Liste d’adresses IP, éventuellement en notation CIDR ou de noms
     d’hôtes de serveurs Zabbix et de mandataires Zabbix. Les connexions
     entrantes ne seront acceptées que si elles viennent des hôtes
     listés ici.

     La valeur par défaut est ‘("127.0.0.1")’.

 -- paramètre de ‘zabbix-agent-configuration’ : list server-active
     Liste de paires d’IP:port (ou nom d’hôte:port) de serveurs Zabbix
     et de mandataires Zabbix pour les vérifications actives. Si le port
     n’est pas spécifié, le port par défaut est utilisé. Si ce paramètre
     n’est pas spécifié, les vérifications actives sont désactivées.

     La valeur par défaut est ‘("127.0.0.1")’.

 -- paramètre de ‘zabbix-agent-configuration’ : string extra-options
     Options supplémentaires ajoutées à la fin du fichier de
     configuration du serveur Zabbix.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘zabbix-agent-configuration’ : include-files
          include-files
     Vous pouvez inclure des fichiers individuels ou tous les fichiers
     d’un répertoire dans le fichier de configuration.

     La valeur par défaut est ‘()’.

Interface utilisateur Zabbix
............................

Ce service fournit une interface WEB au serveur Zabbix.

   Les champs de ‘zabbix-front-end-configuration’ disponibles sont :

 -- paramètre de ‘zabbix-front-end-configuration’ :
          nginx-server-configuration-list nginx
     Configuration Nginx.

 -- paramètre de ‘zabbix-front-end-configuration’ : string db-host
     Le nom d’hôte de la base de données.

     La valeur par défaut est ‘"localhost"’.

 -- paramètre de ‘zabbix-front-end-configuration’ : number db-port
     Port de la base de données.

     La valeur par défaut est ‘5432’.

 -- paramètre de ‘zabbix-front-end-configuration’ : string db-name
     Nom de la base de données.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-front-end-configuration’ : string db-user
     Utilisateur de la base de données.

     La valeur par défaut est ‘"zabbix"’.

 -- paramètre de ‘zabbix-front-end-configuration’ : string db-password
     Mot de passe de la base de données. Utilisez plutôt
     ‘db-secret-file’.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘zabbix-front-end-configuration’ : string
          db-secret-file
     Fichier de secrets qui sera ajouté au fichier ‘zabbix.conf.php’. Ce
     fichier contient les paramètres d’authentification utilisés par
     Zabbix. On s’attend à ce que vous le créiez manuellement.

     La valeur par défaut est ‘""’.

 -- paramètre de ‘zabbix-front-end-configuration’ : string zabbix-host
     Nom d’hôte du serveur Zabbix.

     La valeur par défaut est ‘"localhost"’.

 -- paramètre de ‘zabbix-front-end-configuration’ : number zabbix-port
     Port du serveur Zabbix.

     La valeur par défaut est ‘10051’.


File: guix.fr.info,  Node: Services Kerberos,  Next: Services LDAP,  Prev: Services de surveillance,  Up: Services

8.8.14 Services Kerberos
------------------------

Le module ‘(gnu services kerberos)’ fournit des services liés au
protocole d’authentification “Kerberos”.

Service Krb5
............

Les programmes qui utilisent une bibliothèque cliente Kerberos
s’attendent à trouver un fichier de configuration dans ‘/etc/krb5.conf’.
Ce service génère un tel fichier à partir d’une définition fournie par
la déclaration de système d’exploitation. Il ne démarre aucun démon.

   Aucun fichier « keytab » n’est fourni par ce service — vous devez les
créer explicitement. Ce service est connu pour fonctionner avec la
bibliothèque cliente MIT, ‘mit-krb5’. Les autres implémentations n’ont
pas été testées.

 -- Variable Scheme : krb5-service-type
     Un type de service pour les clients Kerberos 5.

Voici un exemple d’utilisation :
     (service krb5-service-type
              (krb5-configuration
               (default-realm "EXAMPLE.COM")
               (allow-weak-crypto? #t)
               (realms (list
                        (krb5-realm
                         (name "EXAMPLE.COM")
                         (admin-server "groucho.example.com")
                         (kdc "karl.example.com"))
                        (krb5-realm
                         (name "ARGRX.EDU")
                         (admin-server "kerb-admin.argrx.edu")
                         (kdc "keys.argrx.edu"))))))

Cet exemple fournit une configuration cliente Kerberos 5 qui :
   • Reconnais deux domaines : « EXAMPLE.COM » et « ARGREX.EDU », tous
     deux aillant des serveurs d’administration et des centres de
     distribution de clefs distincts ;
   • Utilisera le domaine « EXAMPLE.COM » pr défaut si le domaine n’est
     pas spécifié explicitement par les clients ;
   • Acceptera les services qui ne supportent que des types de
     chiffrements connus pour être faibles.

   Les types ‘krb5-realm’ et ‘krb5-configuration’ ont de nombreux
champs. Seuls les plus communs sont décrits ici. Pour une liste
complète, et plus de détails sur chacun d’entre eux, voir la
documentation de MIT krb5.conf.

 -- Type de données : krb5-realm
     ‘name’
          Ce champ est une chaîne identifiant le nom d’un domaine. Une
          convention courante est d’utiliser le nom pleinement qualifié
          de votre organisation, converti en majuscule.

     ‘admin-server’
          Ce champ est une chaîne identifiant l’hôte où le serveur
          d’administration tourne.

     ‘kdc’
          Ce champ est une chaîne identifiant le centre de distribution
          de clefs pour ce domaine.

 -- Type de données : krb5-configuration

     ‘allow-weak-crypto?’ (par défaut : ‘#f’)
          Si ce drapeau est ‘#t’ les services qui n’offrent que des
          algorithmes de chiffrement faibles seront acceptés.

     ‘default-realm’ (par défaut : ‘#f’)
          Ce champ devrait être une chaîne identifiant le domaine
          Kerberos par défaut pour le client. Vous devriez mettre le nom
          de votre domaine Kerberos dans ce champ. Si cette valeur est
          ‘#f’ alors un domaine doit être spécifié pour chaque principal
          Kerberos à l’invocation des programmes comme ‘kinit’.

     ‘realms’
          Cela doit être une liste non-vide d’objets ‘krb5-realm’,
          auxquels les clients peuvent accéder. Normalement, l’un
          d’entre eux aura un champ ‘name’ qui correspond au champ
          ‘default-realm’.

Service PAM krb5
................

Le service ‘pam-krb5’ permet la connexion et la gestion des mots de
passe par Kerberos. Vous aurez besoin de ce service si vous voulez que
les applications qui utilisent PAM puissent authentifier automatiquement
les utilisateurs avec Kerberos.

 -- Variable Scheme : pam-krb5-service-type
     Un type de service pour le module PAM Kerberos 5.

 -- Type de données : pam-krb5-configuration
     Type de données représentant la configuration du module PAM
     Kerberos 5. Ce type a les paramètres suivants :
     ‘pam-krb5’ (par défaut : ‘pam-krb5’)
          Le paquet pam-krb5 à utiliser.

     ‘minimum-uid’ (par défaut : ‘1000’)
          Le plus petite ID utilisateur pour lequel les
          authentifications Kerberos devraient être tentées. Les comptes
          locaux avec une valeur plus petite échoueront silencieusement
          leur authentification Kerberos.


File: guix.fr.info,  Node: Services LDAP,  Next: Services web,  Prev: Services Kerberos,  Up: Services

8.8.15 Services LDAP
--------------------

Le module ‘(gnu services authentication)’ fournit le type de service
‘nslcd-service-type’, qui peut être utilisé pour l’authentification par
LDAP. En plus de configurer le service lui-même, vous pouvez ajouter
‘ldap’ comme service de noms au Name Service Switch. *Note Name Service
Switch:: pour des informations détaillées.

   Voici une déclaration de système d’exploitation simple avec une
configuration par défaut pour ‘nslcd-service-type’ et une configuration
du Name Service Switch qui consulte le service de noms ‘ldap’ en dernier
:

     (use-service-modules authentication)
     (use-modules (gnu system nss))
     ...
     (operating-system
       ...
       (services
         (cons*
           (service nslcd-service-type)
           (service dhcp-client-service-type)
           %base-services))
       (name-service-switch
        (let ((services (list (name-service (name "db"))
                              (name-service (name "files"))
                              (name-service (name "ldap")))))
          (name-service-switch
           (inherit %mdns-host-lookup-nss)
           (password services)
           (shadow   services)
           (group    services)
           (netgroup services)
           (gshadow  services)))))

   Les champs de ‘nslcd-configuration’ disponibles sont :

 -- paramètre de ‘nslcd-configuration’ : package nss-pam-ldapd
     Le paquet ‘nss-pam-ldapd’ à utiliser.

 -- paramètre de ‘nslcd-configuration’ : maybe-number threads
     Le nombre de threads à démarrer qui peuvent gérer les requête et
     effectuer des requêtes LDAP. Chaque thread ouvre une connexion
     séparée au serveur LDAP. La valeur par défaut est de 5 threads.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : string uid
     Cela spécifie l’id de l’utilisateur sous lequel le démon devrait
     tourner.

     La valeur par défaut est ‘"nslcd"’.

 -- paramètre de ‘nslcd-configuration’ : string gid
     Cela spécifie l’id du groupe sous lequel le démon devrait tourner.

     La valeur par défaut est ‘"nslcd"’.

 -- paramètre de ‘nslcd-configuration’ : log-option log
     This option controls the way logging is done via a list containing
     SCHEME and LEVEL. The SCHEME argument may either be the symbols
     ‘none’ or ‘syslog’, or an absolute file name. The LEVEL argument is
     optional and specifies the log level. The log level may be one of
     the following symbols: ‘crit’, ‘error’, ‘warning’, ‘notice’, ‘info’
     or ‘debug’. All messages with the specified log level or higher are
     logged.

     La valeur par défaut est ‘("/var/log/nslcd" info)’.

 -- paramètre de ‘nslcd-configuration’ : list uri
     La liste des URI des serveurs LDAP. Normalement, seul le premier
     serveur sera utilisé avec les serveurs suivants comme secours.

     La valeur par défaut est ‘("ldap://localhost:389/")’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string ldap-version
     La version du protocole LDAP à utiliser. La valeur par défaut est
     d’utiliser la version maximum supportée par la bibliothèque LDAP.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string binddn
     Spécifie le nom distingué avec lequel se lier au serveur de
     répertoire pour les recherches. La valeur par défaut est de se lier
     anonymement.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string bindpw
     Spécifie le mot de passe avec lequel se lier. Cette option n’est
     valable que lorsqu’elle est utilisée avec binddn.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string rootpwmoddn
     Spécifie le nom distingué à utiliser lorsque l’utilisateur root
     essaye de modifier le mot de passe d’un utilisateur avec le module
     PAM.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string rootpwmodpw
     Spécifie le mot de passe à utiliser pour se lier si l’utilisateur
     root essaye de modifier un mot de passe utilisateur. Cette option
     n’est valable que si elle est utilisée avec rootpwmoddn

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string sasl-mech
     Spécifie le mécanisme SASL à utiliser lors de l’authentification
     SASL.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string sasl-realm
     Spécifie le royaume SASL à utiliser pour effectuer une
     authentification SASL.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string sasl-authcid
     Spécifie l’identité d’authentification à utiliser pour effectuer
     une authentification SASL.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string sasl-authzid
     Spécifie l’identité d’autorisation à utiliser lors d’une
     authentification SASL.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-boolean
          sasl-canonicalize?
     Détermine si le nom d’hôte du serveur LDAP devrait être canonalisé.
     Si c’est activé la bibliothèque LDAP effectuera une recherche de
     nom d’hôte inversée. Par défaut, il est laissé à la bibliothèque
     LDAP le soin de savoir si la vérification doit être effectuée ou
     non.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string krb5-ccname
     Indique le nom du cache d’informations de connexion de GSS-API
     Kerberos.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : string base
     La base de recherche de répertoires.

     La valeur par défaut est ‘"dc=example,dc=com"’.

 -- paramètre de ‘nslcd-configuration’ : scope-option scope
     Spécifie la portée de la recherche (subtree, onelevel, base ou
     children). La portée par défaut est subtree ; la portée base n’est
     presque jamais utile pour les recherches de service de noms ; la
     portée children n’est pas prise en charge par tous les serveurs.

     La valeur par défaut est ‘(subtree)’.

 -- paramètre de ‘nslcd-configuration’ : maybe-deref-option deref
     Spécifie la politique de déréférencement des alias. La politique
     par défaut est de ne jamais déréférencer d’alias.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-boolean referrals
     Spécifie s’il faut activer le suivi de référence. Le comportement
     par défaut est de suivre les références.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : list-of-map-entries maps
     Cette option permet d’ajouter des attributs personnalisés à
     rechercher à la place des attributs par défaut de la RFC 2307.
     C’est une liste de correspondances, consistant chacune en un nom,
     en l’attribut RFC 2307 à utiliser et l’expression de la requête
     pour l’attribut tel qu’il sera disponible dans le répertoire.

     La valeur par défaut est ‘()’.

 -- paramètre de ‘nslcd-configuration’ : list-of-filter-entries filters
     Une liste de filtres consistant en le nom d’une correspondance à
     laquelle applique le filtre et en une expression de filtre de
     recherche LDAP.

     La valeur par défaut est ‘()’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number bind-timelimit
     Spécifie la limite de temps en seconds à utiliser lors de la
     connexion au serveur de répertoire. La valeur par défaut est de 10
     secondes.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number timelimit
     Spécifie la limite de temps (en secondes) à attendre une réponse
     d’un serveur LDAP. La valeur de zéro, par défaut, permet d’attendre
     indéfiniment la fin des recherches.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number idle-timelimit
     Spécifie la période d’inactivité (en seconde) après laquelle la
     connexion au serveur LDAP sera fermée. La valeur par défaut est de
     ne jamais la fermer.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number
          reconnect-sleeptime
     Spécifie le nombre de secondes pendant laquelle attendre lorsque la
     connexion à tous les serveurs LDAP a échouée. Par défaut, il y a
     une seconde d’attente entre le premier échec et la tentative
     suivante.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number
          reconnect-retrytime
     Spécifie la durée après laquelle le serveur LDAP est considéré
     comme définitivement inatteignable. Une fois cette durée atteinte,
     les tentatives de connexions n’auront plus lieu qu’une fois par cet
     intervalle de temps. La valeur par défaut est de 10 secondes.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-ssl-option ssl
     Spécifie s’il faut utiliser SSL/TLS ou non (la valeur par défaut
     est non). Si ’start-tls est spécifié alors StartTLS est utilisé à
     la place de LDAP sur SSL.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-tls-reqcert-option
          tls-reqcert
     Spécifie quelles vérifications effectuer sur les certificats donnés
     par les serveurs. La signification des valeurs est décrite dans la
     page de manuel de ldap.conf(5).

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string tls-cacertdir
     Spécifie le répertoire contenant les certificats X.509 pour
     l’authentification des pairs. Ce paramètre est ignoré quand il est
     utilisé avec GnuTLS.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string tls-cacertfile
     Spécifie le chemin des certificats X.509 pour l’authentification
     des pairs.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string tls-randfile
     Spécifie le chemin d’une source d’entropie. Ce paramètre est ignoré
     quand il est utilisé avec GnuTLS.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string tls-ciphers
     Spécifie les suites de chiffrements à utiliser pour TLS en tant que
     chaîne de caractères.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string tls-cert
     Spécifie le chemin vers le fichier contenant le certificat local
     pour l’authentification TLS du client.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string tls-key
     Spécifie le chemin du fichier contenant la clef privée pour
     l’authentification TLS du client.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number pagesize
     Indiquez un nombre plus grand que 0 pour demander des résultats
     paginés au serveur LDAP en accord avec la RFC 2696. La valeur par
     défaut (0) est de ne pas demander de pagination des résultats.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-ignore-users-option
          nss-initgroups-ignoreusers
     Cette option évite les recherches d’appartenance au groupe à
     travers le LDAP pour les utilisateurs spécifiés. Autrement, la
     valeur ’all-local peut être utilisée. Avec cette valeur nslcd
     construit une liste complète des utilisateurs non-LDAP au
     démarrage.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number nss-min-uid
     Cette option s’assure que les utilisateurs LDAP avec un id
     utilisateur numérique plus petit que la valeur spécifiée sont
     ignorés.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number nss-uid-offset
     Cette option spécifie un décalage à ajouter à tous les id
     utilisateurs numériques LDAP. Cela peut être utile pour éviter des
     collisions d’id utilisateurs avec des utilisateurs locaux.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-number nss-gid-offset
     Cette option spécifie un décalage à ajouter à tous les id de groupe
     numériques LDAP. Cela peut être utile pour éviter des collisions
     d’id utilisateurs avec des groupes locaux.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-boolean nss-nested-groups
     Si cette option est indiquée, l’attribut de membre de groupe peut
     pointer vers un autre groupe. Les membres de groupes imbriqués sont
     aussi renvoyés dans le groupe de haut-niveau et les groupes parents
     sont renvoyés lorsqu’on recherche un utilisateur spécifique. La
     valeur par défaut est de ne pas effectuer de recherche
     supplémentaire sur les groupes imbriqués.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-boolean
          nss-getgrent-skipmembers
     Si cette option est indiqée, la liste de membres du groupe n’est
     pas récupérée lorsqu’on cherche un groupe. Les recherches pour
     trouver les groupes auxquels un utilisateur appartient resteront
     fonctionnelles donc l’utilisateur obtiendra probablement les bons
     groupes à la connexion.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-boolean
          nss-disable-enumeration
     Si cette option est indiquée, les fonctions qui causent le
     chargement de toutes les entrées d’utilisateur et de groupe depuis
     le répertoire ne pourront pas le faire. Cela peut grandement
     diminuer la charge du serveur LDAP dans des situations où il y a
     beaucoup d’utilisateurs et de groupes. Cette option n’est pas
     recommandées pour la plupart des configurations.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string validnames
     Cette option peut être utilisée pour spécifier comment les noms
     d’utilisateurs et de groupes sont vérifiés sur le système. Ce motif
     est utilisé pour vérifier tous les noms d’utilisateurs et de
     groupes qui sont demandés et renvoyés par le LDAP.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-boolean ignorecase
     Cela spécifie s’il faut ou non effectuer des recherches avec une
     correspondance sensible à la casse. Activer cela pourrait mener à
     des vulnérabilités de type contournement d’authentification sur le
     système et introduire des vulnérabilité d’empoisonnement de cache
     nscd qui permettent un déni de service.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-boolean pam-authc-ppolicy
     Cette option spécifie si des contrôles de la politique de mots de
     passe sont demandés et gérés par le serveur LDAP à
     l’authentification de l’utilisateur.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string pam-authc-search
     Par défaut nslcd effectue une recherche LDAP avec le mot de passe
     de l’utilisateur après BIND (authentification) pour s’assurer que
     l’opération BIND a bien réussi. La recherche par défaut est une
     simple vérification que le DN de l’utilisateur existe. Un filtre de
     recherche peut être spécifié pour l’utiliser à la place. Il devrait
     renvoyer au moins une entrée.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string pam-authz-search
     Cette option permet la configuration fine et flexible de la
     vérification d’autorisation qui devrait être effectuée. Le filtre
     de recherche est exécuté et si une entrée correspond, l’accès est
     autorisé, sinon il est refusé.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : maybe-string
          pam-password-prohibit-message
     Si cette option est indiquée, la modification de mot de passe par
     pam_ldap sera refusée et le message spécifié sera présenté à
     l’utilisateur à la place. Le message peut être utilisé pour
     rediriger les utilisateurs vers une autre méthode pour changer leur
     mot de passe.

     La valeur par défaut est ‘disabled’.

 -- paramètre de ‘nslcd-configuration’ : list pam-services
     Liste de noms de service pam pour lesquels l’authentification LDAP
     devrait suffire.

     La valeur par défaut est ‘()’.


File: guix.fr.info,  Node: Services web,  Next: Services de certificats,  Prev: Services LDAP,  Up: Services

8.8.16 Services web
-------------------

Le module ‘(gnu services web)’ fournit le serveur Apache HTTP, le
serveur web nginx et aussi un démon fastcgi.

Serveur Apache HTTP
...................

 -- Variable Scheme : httpd-service-type
     Type de service pour le serveur Apache HTTP
     (https://httpd.apache.org/) (“httpd”). La valeur de ce type de
     service est un enregistrement ‘httpd-configuration’.

     Un exemple de configuration simple est donné ci-dessous.

          (service httpd-service-type
                   (httpd-configuration
                     (config
                       (httpd-config-file
                         (server-name "www.example.com")
                         (document-root "/srv/http/www.example.com")))))

     D’autres services peuvent aussi étendre ‘httpd-service-type’ pour
     être ajouté à la configuration.

          (simple-service 'www.example.com-server httpd-service-type
                          (list
                            (httpd-virtualhost
                              "*:80"
                              (list (string-join '("ServerName www.example.com"
                                                    "DocumentRoot /srv/http/www.example.com")
                                                 "\n")))))

   Les détails des types d’enregistrement ‘httpd-configuration’,
‘httpd-module’, ‘httpd-config-file’ et ‘httpd-virtualhost’ sont donnés
plus bas.

 -- Type de données : httpd-configuration
     Ce type de données représente la configuration du service httpd.

     ‘package’ (par défaut : ‘httpd’)
          Le paquet httpd à utiliser.

     ‘pid-file’ (par défaut : ‘"/var/run/httpd"’)
          Le fichier de pid utilisé par le service shepherd.

     ‘config’ (par défaut : ‘(httpd-config-file)’)
          Le fichier de configuration à utiliser avec le service httpd.
          La valeur par défaut est un enregistrement ‘httpd-config-file’
          mais cela peut aussi être un G-expression qui génère un
          fichier, par exemple un ‘plain-file’. Un fichier en dehors du
          dépôt peut aussi être spécifié avec une chaîne de caractères.

 -- Type de données : httpd-module
     Ce type de données représente un module pour le service httpd.

     ‘name’
          Le nom du module.

     ‘file’
          Le fichier pour le module. Cela peut être relatif au paquet
          httpd utilisé, l’emplacement absolu d’un fichier ou une
          G-expression pour un fichier dans le dépôt, par exemple
          ‘(file-append mod-wsgi "/modules/mod_wsgi.so")’.

 -- Variable Scheme : %default-httpd-modules
     Une liste par défaut des objets ‘httpd-module’.

 -- Type de données : httpd-config-file
     Ce type de données représente un fichier de configuration pour le
     service httpd.

     ‘modules’ (par défaut : ‘%default-httpd-modules’)
          Les modules à charger. Les modules supplémentaires peuvent
          être ajoutés ici ou chargés par des configuration
          supplémentaires.

          Par exemple, pour gérer les requêtes pour des fichiers PHP,
          vous pouvez utiliser le module ‘mod_proxy_fcgi’ d’Apache avec
          ‘php-fpm-service-type’ :

               (service httpd-service-type
                        (httpd-configuration
                         (config
                          (httpd-config-file
                           (modules (cons*
                                     (httpd-module
                                      (name "proxy_module")
                                      (file "modules/mod_proxy.so"))
                                     (httpd-module
                                      (name "proxy_fcgi_module")
                                      (file "modules/mod_proxy_fcgi.so"))
                                     %default-httpd-modules))
                           (extra-config (list "\
               <FilesMatch \\.php$>
                   SetHandler \"proxy:unix:/var/run/php-fpm.sock|fcgi://localhost/\"
               </FilesMatch>"))))))
               (service php-fpm-service-type
                        (php-fpm-configuration
                         (socket "/var/run/php-fpm.sock")
                         (socket-group "httpd")))

     ‘server-root’ (par défaut : ‘httpd’)
          Le ‘ServerRoot’ dans le fichier de configuration, par défaut
          le paquet httpd. Les directives comme ‘Include’ et
          ‘LoadModule’ sont prises relativement à la racine du serveur.

     ‘server-name’ (par défaut : ‘#f’)
          Le ‘ServerName’ dans le fichier de configuration, utilisé pour
          spécifier le schéma de requête, le nom d’hôte et le port que
          le serveur utilise pour s’identifier.

          This doesn’t need to be set in the server config, and can be
          specified in virtual hosts. The default is ‘#f’ to not specify
          a ‘ServerName’.

     ‘document-root’ (par défaut : ‘"/srv/http"’)
          Le ‘DocumentRoot’ depuis lequel les fichiers seront servis.

     ‘listen’ (par défaut : ‘'("80")’)
          La liste des valeurs pour les directives ‘Listen’ dans le
          fichier de configuration. La valeur devrait être une liste de
          chaînes, où chacune spécifie le port sur lequel écouter et
          éventuellement une adresse IP et un protocole à utiliser.

     ‘pid-file’ (par défaut : ‘"/var/run/httpd"’)
          Le ‘PidFile’ à utiliser. Cela devrait correspondre à
          ‘pid-file’ indiqué dans ‘httpd-configuration’ pour que le
          service Shepherd soit correctement configuré.

     ‘error-log’ (par défaut : ‘"/var/log/httpd/error_log"’)
          Le ‘ErrorLog’ où le serveur écrit les journaux d’erreurs.

     ‘user’ (par défaut : ‘"httpd"’)
          Le ‘User’ en tant que lequel le serveur répondra aux requêtes.

     ‘group’ (par défaut : ‘"httpd"’)
          Le ‘Group’ que le serveur utilisera pour répondre aux
          requêtes.

     ‘extra-config’ (par défaut : ‘(list "TypesConfig etc/httpd/mime.types")’)
          Une liste plate de chaînes et de G-expressions qui seront
          ajoutées à la fin du fichier de configuration.

          N’importe quelle valeur avec laquelle le service est étendu
          sera ajouté à cette liste.

 -- Type de données : httpd-virtualhost
     Ce type de données représente la configuration d’un hôte virtuel
     pour le service httpd.

     Ils devraient être ajoutés à extra-config dans httpd-service.

          (simple-service 'www.example.com-server httpd-service-type
                          (list
                            (httpd-virtualhost
                              "*:80"
                              (list (string-join '("ServerName www.example.com"
                                                    "DocumentRoot /srv/http/www.example.com")
                                                 "\n")))))

     ‘addresses-and-ports’
          L’adresse et le port pour la directive ‘VirtualHost’.

     ‘contents’
          Le contenu de la directive ‘VirtualHost’, cela devrait être
          une liste de chaîne et de G-expressions.

NGINX
.....

 -- Variable Scheme : nginx-service-type
     Type de service pour le serveur web NGinx (https://nginx.org/). La
     valeur de ce service est un enregistrement ‘<nginx-configuration>’.

     Un exemple de configuration simple est donné ci-dessous.

          (service nginx-service-type
                   (nginx-configuration
                     (server-blocks
                       (list (nginx-server-configuration
                               (server-name '("www.example.com"))
                               (root "/srv/http/www.example.com"))))))

     En plus d’ajouter des blocs de serveurs dans la configuration du
     service directement, ce service peut être étendu par d’autres
     services pour ajouter des blocs de serveurs, comme dans cet exemple
     :

          (simple-service 'my-extra-server nginx-service-type
                          (list (nginx-server-configuration
                                  (root "/srv/http/extra-website")
                                  (try-files (list "$uri" "$uri/index.html")))))

   Au démarrage, ‘nginx’ n’a pas encore lu son fichier de configuration,
donc il utilise les fichiers par défaut pour les messages d’erreur. S’il
échoue à charger sa configuration, c’est là où les messages seront
enregistrés. Après la lecture du fichier de configuration, le fichier de
journal d’erreur par défaut change en fonction de celle-ci. Dans notre
cas, les messages d’erreur au démarrage se trouvent dans
‘/var/run/nginx/logs/error.log’ et après la configuration dans
‘/var/log/nginx/error.log’. Ce second emplacement peut être modifié avec
l’option de configuration LOG-DIRECTORY.

 -- Type de données : nginx-configuration
     Ce type de données représente la configuration de NGinx. Certaines
     configurations peuvent se faire ici et d’autres fournissent des
     types d’enregistrement ou éventuellement, on peut fournir un
     fichier de configuration.

     ‘nginx’ (par défaut : ‘nginx’)
          Le paquet nginx à utiliser.

     ‘log-directory’ (par défaut : ‘"/var/log/nginx"’)
          Le répertoire dans lequel NGinx écrira ses fichiers journaux.

     ‘run-directory’ (par défaut : ‘"/var/run/nginx"’)
          Le répertoire dans lequel NGinx créera un fichier de pid et
          écrira des fichiers temporaires.

     ‘server-blocks’ (par défaut : ‘'()’)
          Une liste de “blocs serveur” à créer dans le fichier de
          configuration généré, dont les éléments sont de type
          ‘<nginx-server-configuration>’.

          L’exemple suivant paramètre NGinx pour servir
          ‘www.example.com’ depuis le répertoire
          ‘/srv/http/www.example.com’ sans utiliser HTTPS.
               (service nginx-service-type
                        (nginx-configuration
                          (server-blocks
                            (list (nginx-server-configuration
                                    (server-name '("www.example.com"))
                                    (root "/srv/http/www.example.com"))))))

     ‘upstream-blocks’ (par défaut : ‘'()’)
          Une liste de “blocs amont” à créer dans le fichier de
          configuration généré, dont les éléments sont de type
          ‘<nginx-upstream-configuration>’.

          Configurer les serveurs amont à travers les ‘upstream-blocks’
          peut être utile en combinaison avec ‘locations’ dans les
          enregistrements ‘<nginx-server-configuration>’. L’exemple
          suivant crée une configuration de serveur avec une
          configuration « location » qui sera mandataire pour une
          configuration amont, qui gérera les requêtes avec deux
          serveurs.

               (service
                 nginx-service-type
                 (nginx-configuration
                   (server-blocks
                     (list (nginx-server-configuration
                             (server-name '("www.example.com"))
                             (root "/srv/http/www.example.com")
                             (locations
                               (list
                                 (nginx-location-configuration
                                 (uri "/path1")
                                 (body '("proxy_pass http://server-proxy;"))))))))
                   (upstream-blocks
                     (list (nginx-upstream-configuration
                             (name "server-proxy")
                             (servers (list "server1.example.com"
                                            "server2.example.com")))))))

     ‘file’ (par défaut : ‘#f’)
          Si un fichier de configuration FILE est fourni, il sera
          utilisé au lieu de générer un fichier de configuration à
          partir des ‘log-directory’, ‘run-directory’, ‘server-blocks’
          et ‘upstream-blocks’ fournis. Pour un bon fonctionnement, ces
          arguments devraient correspondre à ce qui se trouve dans FILE
          pour s’assurer que les répertoires sont créé lorsque le
          service est activé.

          Cela peut être utile si vous avez déjà un fichier de
          configuration existant ou s’il n’est pas possible de faire ce
          dont vous avez besoin avec les autres parties de
          l’enregistrement nginx-configuration.

     ‘server-names-hash-bucket-size’ (par défaut : ‘#f’)
          Taille du seau pour les tables de hashage des noms de
          serveurs, par dauft ‘#f’ pour utilise la taille des lignes de
          cache du processeur.

     ‘server-names-hash-bucket-max-size’ (par défaut : ‘#f’)
          Taille maximum des seaux pour les tables de hashage des
          serveurs de noms.

     ‘modules’ (par défaut : ‘'()’)
          List of nginx dynamic modules to load. This should be a list
          of file names of loadable modules, as in this example:

               (modules
                (list
                 (file-append nginx-accept-language-module "\
               /etc/nginx/modules/ngx_http_accept_language_module.so")))

     ‘global-directives’ (default: ‘'((events . ()))’)
          Association list of global directives for the top level of the
          nginx configuration. Values may themselves be association
          lists.

               (global-directives
                `((worker_processes . 16)
                  (pcre_jit . on)
                  (events . ((worker_connections . 1024)))))

     ‘extra-content’ (par défaut : ‘""’)
          Contenu supplémentaire du bloc ‘http’. Cela devrait être une
          chaîne ou un G-expression.

 -- Type de données : nginx-server-configuration
     Type de données représentant la configuration d’un bloc serveur de
     nginx. Ce type a les paramètres suivants :

     ‘listen’ (par défaut : ‘'("80" "443 ssl")’)
          Chaque directive ‘listen’ indique l’adresse et le port pour le
          protocole IP ou le chemin d’un socket UNIX-domain sur lequel
          le serveur acceptera les connexions. On peut spécifier
          l’adresse et le port, ou juste l’adresse ou juste le port. Une
          adresse peut aussi être un nom d’hôte, par exemple :

               '("127.0.0.1:8000" "127.0.0.1" "8000" "*:8000" "localhost:8000")

     ‘server-name’ (par défaut : ‘(list 'default)’)
          Une liste de noms de serveurs que ce serveur représente.
          ‘'default’ représente le serveur par défaut pour les
          connexions qui ne correspondent à aucun autre serveur.

     ‘root’ (par défaut : ‘"/srv/http"’)
          Racine du site web que sert nginx.

     ‘locations’ (par défaut : ‘'()’)
          Une liste d’enregistrements “nginx-location-configuration” ou
          “nginx-named-location-configuration” à utiliser dans ce bloc
          serveur.

     ‘index’ (par défaut : ‘(list "index.html")’)
          Fichiers d’index à chercher lorsque les clients demandent un
          répertoire. S’il ne peut pas être trouvé, Nginx enverra la
          liste des fichiers dans le répertoire.

     ‘try-files’ (par défaut : ‘'()’)
          Une liste de fichiers dont l’existence doit être vérifiée dans
          l’ordre spécifié. ‘nginx’ utilisera le premier fichier trouvé
          pour satisfaire la requête.

     ‘ssl-certificate’ (par défaut : ‘#f’)
          Où trouver les certificats pour les connexions sécurisées.
          Indiquez ‘#f’ si vous n’avez pas de certificats et que vous ne
          voulez pas utiliser HTTPS.

     ‘ssl-certificate-key’ (par défaut : ‘#f’)
          Où trouver la clef privée pour les connexions sécurisées.
          Indiquez ‘#f’ si vous n’avez pas de clef et que vous ne voulez
          pas utiliser HTTPS.

     ‘server-tokens?’ (par défaut : ‘#f’)
          Indique si le serveur devrait ajouter sa configuration dans
          les réponses.

     ‘raw-content’ (par défaut : ‘'()’)
          Une liste de lignes brutes à ajouter dans le bloc serveur.

 -- Type de données : nginx-upstream-configuration
     Type de données représentant la configuration d’un bloc ‘upstream’
     nginx. Ce type a les paramètres suivants :

     ‘name’
          Nome de ces groupe de serveurs.

     ‘serveurs’
          Spécifie les adresses des serveurs dans le groupe. L’adresse
          peut être spécifié avec une adresse IP (p. ex. ‘127.0.0.1’),
          un nom de domaine (p. ex. ‘backend1.example.com’) ou un chemin
          vers un socket UNIX avec le préfixe ‘unix:’. Pour les adresse
          utilisant une adresse IP ou un nom de domaine, le port par
          défaut est 80 et un port différent peut être spécifié
          explicitement.

 -- Type de données : nginx-location-configuration
     Type de données représentant la configuration d’un bloc ‘location’
     nginx. Ce type a les paramètres suivants :

     ‘uri’
          URI qui correspond à ce bloc.

     ‘body’
          Corps du block location, spécifié comme une liste de chaînes
          de caractères. Cela peut contenir de nombreuses directives de
          configuration. Par exemple, pour passer des requêtes à un
          groupe de serveurs amont définis dans un bloc
          ‘nginx-upstream-configuration’, la directive suivante peut
          être spécifiée dans le corps : ‘(list "proxy_pass
          http://upstream-name;")’.

 -- Type de données : nginx-named-location-configuration
     Type de données représentant la configuration d’un bloc location
     nginx nommé. Les blocs location nommés sont utilisé les
     redirections de requêtes et pas pour le traitement des requêtes
     normales. Ce type a les paramètres suivants :

     ‘name’
          Nom pour identifier ce bloc location.

     ‘body’
          *Note nginx-location-configuration body::, comme le corps d’un
          bloc location nommé peut être utilisé de la même manière que
          ‘nginx-location-configuration body’. Une restriction est que
          le corps d’un bloc location nommé ne peut pas contenir de bloc
          location.

Cache Varnish
.............

Varnish est un serveur de cache rapide qui se trouve entre les
applications web et les utilisateurs. Il sert de serveur mandataire pour
les requêtes des clients et met les URL accédées en cache pour que
plusieurs requêtes à la même ressource ne crée qu’une requête au moteur.

 -- Variable Scheme : varnish-service-type
     Type de service pour le démon Varnish.

 -- Type de données : varnish-configuration
     Type de données représentant la configuration du service ‘varnish’.
     Ce type a les paramètres suivants :

     ‘package’ (par défaut : ‘varnish’)
          Le paquet Varnish à utiliser.

     ‘name’ (par défaut : ‘"default"’)
          Un nom pour cet instance de Varnish. Varnish va créer un
          répertoire dans ‘/var/varnish/’ avec ce nom et gardera des
          fichiers temporaires à cet endroit. Si le nom commence par une
          barre oblique, il est interprété comme un nom de répertoire
          absolu.

          Passez l’argument ‘-n’ aux autres programmes Varnish pour vous
          connecter à l’instance nommée, p. ex. ‘varnishncsa -n
          default’.

     ‘backend’ (par défaut : ‘"localhost:8080"’)
          Le moteur à utiliser. Cette option n’a pas d’effet si ‘vcl’
          est vrai.

     ‘vcl’ (par défaut : #f)
          Le programme “VCL” (Varnish Configuration Language) à lancer.
          Si la valeur est ‘#f’, Varnsh servira de mandataire pour
          ‘backend’ avec la configuration par défaut. Sinon, ce doit
          être un objet simili-fichier avec une syntaxe VCL valide.

          For example, to mirror www.gnu.org (https://www.gnu.org) with
          VCL you can do something along these lines:

               (define %gnu-mirror
                 (plain-file "gnu.vcl"
                             "vcl 4.1;
               backend gnu { .host = \"www.gnu.org\"; }"))

               (operating-system
                 ;; ...
                 (services (cons (service varnish-service-type
                                          (varnish-configuration
                                           (listen '(":80"))
                                           (vcl %gnu-mirror)))
                                 %base-services)))

          On peut inspecter la configuration d’une instance Varnish
          actuellement lancée en utilisant le programme ‘varnishadm’.

          Consultez le guide utilisateur de varnish
          (https://varnish-cache.org/docs/) et le livre varnish
          (https://book.varnish-software.com/4.0/) pour une
          documentation complète sur Varnish et son langage de
          configuration.

     ‘listen’ (par défaut : ‘'("localhost:80")’)
          Liste des adresses sur lesquelles écoute Varnish.

     ‘storage’ (par défaut : ‘'("malloc,128m")’)
          Liste de moteurs de stockage qui seront disponibles en VCL.

     ‘parameters’ (par défaut : ‘'()’)
          Liste des paramètres à l’exécution de la forme ‘'(("parameter"
          . "value"))’.

     ‘extra-options’ (par défaut : ‘'()’)
          Arguments supplémentaires à passer au processus ‘varnishd’.

Patchwork
.........

Patchwork is a patch tracking system. It can collect patches sent to a
mailing list, and display them in a web interface.

 -- Scheme Variable : patchwork-service-type
     Service type for Patchwork.

   The following example is an example of a minimal service for
Patchwork, for the ‘patchwork.example.com’ domain.

     (service patchwork-service-type
              (patchwork-configuration
               (domain "patchwork.example.com")
               (settings-module
                (patchwork-settings-module
                 (allowed-hosts (list domain))
                 (default-from-email "patchwork@patchwork.example.com")))
               (getmail-retriever-config
                (getmail-retriever-configuration
                 (type "SimpleIMAPSSLRetriever")
                 (server "imap.example.com")
                 (port 993)
                 (username "patchwork")
                 (password-command
                  (list (file-append coreutils "/bin/cat")
                        "/etc/getmail-patchwork-imap-password"))
                 (extra-parameters
                 '((mailboxes . ("Patches"))))))))


   There are three records for configuring the Patchwork service. The
‘<patchwork-configuration>’ relates to the configuration for Patchwork
within the HTTPD service.

   The ‘settings-module’ field within the ‘<patchwork-configuration>’
record can be populated with the ‘<patchwork-settings-module>’ record,
which describes a settings module that is generated within the Guix
store.

   For the ‘database-configuration’ field within the
‘<patchwork-settings-module>’, the ‘<patchwork-database-configuration>’
must be used.

 -- Data Type : patchwork-configuration
     Data type representing the Patchwork service configuration. This
     type has the following parameters:

     ‘patchwork’ (default: ‘patchwork’)
          The Patchwork package to use.

     ‘domain’
          The domain to use for Patchwork, this is used in the HTTPD
          service virtual host.

     ‘settings-module’
          The settings module to use for Patchwork. As a Django
          application, Patchwork is configured with a Python module
          containing the settings. This can either be an instance of the
          ‘<patchwork-settings-module>’ record, any other record that
          represents the settings in the store, or a directory outside
          of the store.

     ‘static-path’ (default: ‘"/static/"’)
          The path under which the HTTPD service should serve the static
          files.

     ‘getmail-retriever-config’
          The getmail-retriever-configuration record value to use with
          Patchwork. Getmail will be configured with this value, the
          messages will be delivered to Patchwork.

 -- Data Type : patchwork-settings-module
     Data type representing a settings module for Patchwork. Some of
     these settings relate directly to Patchwork, but others relate to
     Django, the web framework used by Patchwork, or the Django Rest
     Framework library. This type has the following parameters:

     ‘database-configuration’ (default: ‘(patchwork-database-configuration)’)
          The database connection settings used for Patchwork. See the
          ‘<patchwork-database-configuration>’ record type for more
          information.

     ‘secret-key-file’ (default: ‘"/etc/patchwork/django-secret-key"’)
          Patchwork, as a Django web application uses a secret key for
          cryptographically signing values. This file should contain a
          unique unpredictable value.

          If this file does not exist, it will be created and populated
          with a random value by the patchwork-setup shepherd service.

          This setting relates to Django.

     ‘allowed-hosts’
          A list of valid hosts for this Patchwork service. This should
          at least include the domain specified in the
          ‘<patchwork-configuration>’ record.

          This is a Django setting.

     ‘default-from-email’
          The email address from which Patchwork should send email by
          default.

          This is a Patchwork setting.

     ‘static-url’ (default: ‘#f’)
          The URL to use when serving static assets. It can be part of a
          URL, or a full URL, but must end in a ‘/’.

          If the default value is used, the ‘static-path’ value from the
          ‘<patchwork-configuration>’ record will be used.

          This is a Django setting.

     ‘admins’ (default: ‘'()’)
          Email addresses to send the details of errors that occur. Each
          value should be a list containing two elements, the name and
          then the email address.

          This is a Django setting.

     ‘debug?’ (par défaut : ‘#f’)
          Whether to run Patchwork in debug mode. If set to ‘#t’,
          detailed error messages will be shown.

          This is a Django setting.

     ‘enable-rest-api?’ (default: ‘#t’)
          Whether to enable the Patchwork REST API.

          This is a Patchwork setting.

     ‘enable-xmlrpc?’ (default: ‘#t’)
          Whether to enable the XML RPC API.

          This is a Patchwork setting.

     ‘force-https-links?’ (default: ‘#t’)
          Whether to use HTTPS links on Patchwork pages.

          This is a Patchwork setting.

     ‘extra-settings’ (par défaut : ‘""’)
          Extra code to place at the end of the Patchwork settings
          module.

 -- Data Type : patchwork-database-configuration
     Data type representing the database configuration for Patchwork.

     ‘engine’ (default: ‘"django.db.backends.postgresql_psycopg2"’)
          The database engine to use.

     ‘name’ (default: ‘"patchwork"’)
          The name of the database to use.

     ‘user’ (par défaut : ‘"httpd"’)
          The user to connect to the database as.

     ‘password’ (default: ‘""’)
          The password to use when connecting to the database.

     ‘host’ (default: ‘""’)
          The host to make the database connection to.

     ‘port’ (default: ‘""’)
          The port on which to connect to the database.

Mumi
....

Mumi (https://git.elephly.net/gitweb.cgi?p=software/mumi.git) is a Web
interface to the Debbugs bug tracker, by default for the GNU instance
(https://bugs.gnu.org). Mumi is a Web server, but it also fetches and
indexes mail retrieved from Debbugs.

 -- Scheme Variable : mumi-service-type
     This is the service type for Mumi.

 -- Data Type : mumi-configuration
     Data type representing the Mumi service configuration. This type
     has the following fields:

     ‘mumi’ (default: ‘mumi’)
          The Mumi package to use.

     ‘mailer?’ (default: ‘#true’)
          Whether to enable or disable the mailer component.

     ‘mumi-configuration-sender’
          The email address used as the sender for comments.

     ‘mumi-configuration-smtp’
          A URI to configure the SMTP settings for Mailutils. This could
          be something like ‘sendmail:///path/to/bin/msmtp’ or any other
          URI supported by Mailutils. *Note SMTP Mailboxes:
          (mailutils)SMTP Mailboxes.

FastCGI
.......

FastCGI est une interface entre le frontal et le moteur d’un service
web. C’est un dispositif quelque peu désuet ; les nouveaux services
devraient généralement juste parler HTTP entre le frontal et le moteur.
Cependant il y a un certain nombre de services de moteurs comme PHP ou
l’accès aux dépôts Git optimisé en HTTP qui utilisent FastCGI, donc nous
le supportons dans Guix.

   Pour utiliser FastCGI, vous configurez le serveur web frontal (p. ex.
nginx) pour envoyer un sous-ensemble de ses requêtes au moteur fastcgi,
qui écoute sur un socket UNIX ou TCP local. Il y a un programme
‘fcgiwrap’ intermédiaire qui se trouve entre le processus du moteur et
le serveur web. Le frontal indique quel moteur lancer, en passant cette
information au processus ‘fcgiwrap’.

 -- Variable Scheme : fcgiwrap-service-type
     Un type de service pour le mandataire FastCGI ‘fcgiwrap’.

 -- Type de données : fcgiwrap-configuration
     Type de données représentant la configuration du service
     ‘fcgiwrap’. Ce type a les paramètres suivants :
     ‘package’ (par défaut : ‘fcgiwrap’)
          Le paquet fcgiwrap à utiliser.

     ‘socket’ (par défaut : ‘tcp:127.0.0.1:9000’)
          Le socket sur lequel le processus ‘fcgiwrap’ écoute, en tant
          que chaîne de caractères. Les valeurs valides de SOCKET sont
          ‘unix:/PATH/TO/UNIX/SOCKET’, ‘tcp:DOT.TED.QU.AD:PORT’ et
          ‘tcp6:[IPV6_ADDR]:port’.

     ‘user’ (par défaut : ‘fcgiwrap’)
     ‘group’ (par défaut : ‘fcgiwrap’)
          Les noms de l’utilisateur et du groupe, en tant que chaînes de
          caractères, sous lesquels lancer le processus ‘fcgiwrap’. Le
          service ‘fastcgi’ s’assurera que si l’utilisateur demande les
          noms d’utilisateurs et de groupes ‘fcgiwrap’ l’utilisateur et
          le groupe correspondant seront présents sur le système.

          It is possible to configure a FastCGI-backed web service to
          pass HTTP authentication information from the front-end to the
          back-end, and to allow ‘fcgiwrap’ to run the back-end process
          as a corresponding local user. To enable this capability on
          the back-end, run ‘fcgiwrap’ as the ‘root’ user and group.
          Note that this capability also has to be configured on the
          front-end as well.

   PHP-FPM (FastCGI Process Manager) est une implémentation FastCGI de
PHP alternative avec quelques fonctionnalités supplémentaires utiles
pour les sites de toutes tailles.

   Ces fonctionnalités comprennent :
   • La création de processus adaptative
   • Des statistiques de base (comme le mod_status d’Apache)
   • La gestion des processus avancée avec arrêt et démarrage sans
     heurts
   • La possibilité de démarrer des processus de travail avec différents
     uid/gid/chroot/environnement et différents php.ini (à la place de
     safe_mode)
   • L’enregistrement des journaux sur stdout et stderr
   • Le redémarrage d’urgence dans le cas de la destruction accidentelle
     du cache des opcodes
   • Le support des téléversements accélérés
   • Le support de « showlog »
   • Des améliorations à FastCGI, comme fastcgi_finish_request() - une
     fonction spéciale pour terminer la requête et nettoyer toutes les
     données tout en continuant à faire d’autres choses qui prennent du
     temps (conversion vidéo, gestion des stats, etc.).
   … et bien plus.

 -- Variable Scheme : php-fpm-service-type
     Un type de service pour ‘php-fpm’.

 -- Type de données : php-fpm-configuration
     Type de données pour la configuration du service php-fpm.
     ‘php’ (par défaut : ‘php’)
          Le paquet php à utiliser.
     ‘socket’ (par défaut : ‘(string-append "/var/run/php" (version-major (package-version php)) "-fpm.sock")’)
          L’adresse sur laquelle accepter les requêtes FastCGI. Les
          syntaxes valides sont :
          ‘"ip.add.re.ss:port"’
               Écoute sur un socket TCP sur l’adresse spécifiée sur un
               port spécifié.
          ‘"port"’
               Écoute sur un socket TCP sur toutes les adresse sur un
               port spécifique.
          ‘"/path/to/unix/socket"’
               Écoute sur un socket unix.

     ‘user’ (par défaut : ‘php-fpm’)
          Utilisateur à qui appartiendra le processus de travail de php.
     ‘group’ (par défaut : ‘php-fpm’)
          Groupe du processus de travail.
     ‘socket-user’ (par défaut : ‘php-fpm’)
          Utilisateur qui peut parler au socket php-fpm.
     ‘socket-group’ (default: ‘nginx’)
          Groupe qui peut parler au socket php-fpm.
     ‘pid-file’ (par défaut : ‘(string-append "/var/run/php" (version-major (package-version php)) "-fpm.pid")’)
          Le pid de php-fpm est écrit dans ce fichier une fois que le
          service a démarré.
     ‘log-file’ (par défaut : ‘(string-append "/var/log/php" (version-major (package-version php)) "-fpm.log")’)
          Fichier de journal pour le processus maître de php-fpm.
     ‘process-manager’ (par défaut : ‘(php-fpm-dynamic-process-manager-configuration)’)
          Detailed settings for the php-fpm process manager. Must be one
          of:
          ‘<php-fpm-dynamic-process-manager-configuration>’
          ‘<php-fpm-static-process-manager-configuration> ou’
          ‘<php-fpm-on-demand-process-manager-configuration>’
     ‘display-errors’ (par défaut : ‘#f’)
          Détermine si les erreurs et les avertissements php doivent
          être envoyés aux clients et affichés dans leur navigateur.
          Cela est utile pour un développement php local, mais un risque
          pour la sécurité pour les sites publics, comme les messages
          d’erreur peuvent révéler des mots de passes et des données
          personnelles.
     ‘timezone’ (par défaut : ‘#f’)
          Spécifie le paramètre ‘php_admin_value[date.timezone]’.
     ‘workers-logfile’ (par défaut : ‘(string-append "/var/log/php" (version-major (package-version php)) "-fpm.www.log")’)
          Ce fichier enregistrera la sortie ‘stderr’ des processus de
          travail de php. On peut indiquer ‘#f’ pour désactiver la
          journalisation.
     ‘file’ (par défaut : ‘#f’)
          Une version alternative de la configuration complète. Vous
          pouvez utiliser la fonction ‘mixed-text-file’ ou un chemin de
          fichier absolu.

 -- Type de données : php-fpm-dynamic-process-manager-configuration
     Type de données pour le gestionnaire de processus ‘dynamic’ de
     php-fpm. Avec le gestionnaire de processus ‘dynamic’, des processus
     de travail de secours sont gardés en fonction des limites
     configurées.
     ‘max-children’ (par défaut : ‘5’)
          Nombre maximum de processus de travail.
     ‘start-servers’ (par défaut : ‘2’)
          Nombre de processus de travail au démarrage.
     ‘min-spare-servers’ (par défaut : ‘1’)
          Nombre de processus de travail de secours minimum qui doivent
          rester à disposition.
     ‘max-spare-servers’ (par défaut : ‘3’)
          Nombre maximum de processus de travail de secours qui peuvent
          rester à disposition.

 -- Type de données : php-fpm-static-process-manager-configuration
     Type de données pour le gestionnaire de processus ‘static’ de
     php-fpm. Avec le gestionnaire de processus ‘static’, un nombre
     constant de processus de travail est créé.
     ‘max-children’ (par défaut : ‘5’)
          Nombre maximum de processus de travail.

 -- Type de données : php-fpm-on-demand-process-manager-configuration
     Type de données pour le gestionnaire de processus ‘on-demand’ de
     php-fpm. Avec le gestionnaire de processus ‘on-demand’, les
     processus de travail ne sont créés que lorsque les requêtes
     arrivent.
     ‘max-children’ (par défaut : ‘5’)
          Nombre maximum de processus de travail.
     ‘process-idle-timeout’ (par défaut : ‘10’)
          La durée en secondes après laquelle un processus sans requête
          sera tué.

 -- Scheme Procedure : nginx-php-location [#:nginx-package nginx]
          [socket (string-append "/var/run/php" (version-major
          (package-version php)) "-fpm.sock")]
     Une fonction d’aide pour ajouter rapidement php à un
     ‘nginx-server-configuration’.

   Une configuration simple de services pour php ressemble à ceci :
     (services (cons* (service dhcp-client-service-type)
                      (service php-fpm-service-type)
                      (service nginx-service-type
                               (nginx-server-configuration
                                (server-name '("example.com"))
                                (root "/srv/http/")
                                (locations
                                 (list (nginx-php-location)))
                                (listen '("80"))
                                (ssl-certificate #f)
                                (ssl-certificate-key #f)))
                      %base-services))

   Le générateur d’avatar de chat est un simple service pour démontrer
l’utilisation de php-fpm dans ‘Nginx’. Il permet de générer des avatars
de chats à partir d’une graine, par exemple le hash de l’adresse de
courriel d’un utilisateur.

 -- Procédure Scheme : cat-avatar-generator-service [#:cache-dir
          "/var/cache/cat-avatar-generator"] [#:package
          cat-avatar-generator] [#:configuration
          (nginx-server-configuration)]
     Renvoie un nginx-server-configuration qui hérite de
     ‘configuration’. Il étend la configuration nginx pour ajouter un
     bloc de serveur qui sert ‘package’, une version de
     cat-avatar-generator. Pendant l’exécution, cat-avatar-generator
     pourra utiliser ‘cache-dir’ comme répertoire de cache.

   Une configuration simple de cat-avatar-generator ressemble à ceci :
     (services (cons* (cat-avatar-generator-service
                       #:configuration
                       (nginx-server-configuration
                         (server-name '("example.com"))))
                      ...
                      %base-services))

Hpcguix-web
...........

The hpcguix-web (https://github.com/UMCUGenetics/hpcguix-web/) program
is a customizable web interface to browse Guix packages, initially
designed for users of high-performance computing (HPC) clusters.

 -- Variable Scheme : hpcguix-web-service-type
     Le type de service pour ‘hpcguix-web’.

 -- Type de données : hpcguix-web-configuration
     Type de données pour la configuration du service hpcguix-web.

     ‘specs’
          Une gexp (*note G-Expressions::) spécifiant la configuration
          du service hpcguix-web. Les éléments principaux disponibles
          dans cette spec sont :

          ‘title-prefix’ (par défaut : ‘"hpcguix | "’)
               Le préfixe du titre des pages.

          ‘guix-command’ (par défaut : ‘"guix"’)
               La commande ‘guix’

          ‘package-filter-proc’ (par défaut : ‘(const #t)’)
               Une procédure qui spécifie comment filtrer les paquets
               qui seront affichés.

          ‘package-page-extension-proc’ (par défaut : ‘(const '())’)
               Paquet d’extensions pour ‘hpcguix-web’.

          ‘menu’ (par défaut : ‘'()’)
               Entrée supplémentaire dans la page ‘menu’.

          ‘channels’ (par défaut : ‘%default-channels’)
               Liste des canaux depuis lesquels la liste des paquets est
               construite (*note Canaux::).

          ‘package-list-expiration’ (par défaut : ‘(* 12 3600)’)
               Le temps d’expiration, en secondes, après lequel la liste
               des paquets est reconstruite depuis les dernières
               instance des canaux donnés.

          Voir le dépôt hpcguix-web pour un exemple complet
          (https://github.com/UMCUGenetics/hpcguix-web/blob/master/hpcweb-configuration.scm)

     ‘package’ (par défaut : ‘hpcguix-web’)
          Le paquet hpcguix-web à utiliser.

   Une déclaration de service hpcguix-web typique ressemble à cela :

     (service hpcguix-web-service-type
              (hpcguix-web-configuration
               (specs
                #~(define site-config
                    (hpcweb-configuration
                     (title-prefix "Guix-HPC - ")
                     (menu '(("/about" "ABOUT"))))))))

     Remarque : Le service hpcguix-web met régulièrement à jour la liste
     des paquets qu’il publie en récupérant les canaux depuis Git. Pour
     cela, il doit accéder aux certificats X.509 pour qu’il puisse
     authentifier les serveurs Git quand il communique en HTTPS, et il
     suppose que ‘/etc/ssl/certs’ contient ces certificats.

     Ainsi, assurez-vous d’ajouter ‘nss-certs’ ou un autre paquet de
     certificats dans le champ ‘packages’ de votre configuration. *note
     Certificats X.509:: pour plus d’informations sur les certificats
     X.509.

