This is guix.de.info, produced by makeinfo version 6.7 from
guix.de.texi.

Copyright © 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020 Ludovic
Courtès
Copyright © 2013, 2014, 2016 Andreas Enge
Copyright © 2013 Nikita Karetnikov
Copyright © 2014, 2015, 2016 Alex Kost
Copyright © 2015, 2016 Mathieu Lirzin
Copyright © 2014 Pierre-Antoine Rault
Copyright © 2015 Taylan Ulrich Bayırlı/Kammer
Copyright © 2015, 2016, 2017, 2019, 2020 Leo Famulari
Copyright © 2015, 2016, 2017, 2018, 2019, 2020 Ricardo Wurmus
Copyright © 2016 Ben Woodcroft
Copyright © 2016, 2017, 2018 Chris Marusich
Copyright © 2016, 2017, 2018, 2019, 2020 Efraim Flashner
Copyright © 2016 John Darrington
Copyright © 2016, 2017 Nikita Gillmann
Copyright © 2016, 2017, 2018, 2019, 2020 Jan Nieuwenhuizen
Copyright © 2016, 2017, 2018, 2019, 2020 Julien Lepiller
Copyright © 2016 Alex ter Weele
Copyright © 2016, 2017, 2018, 2019 Christopher Baines
Copyright © 2017, 2018, 2019 Clément Lassieur
Copyright © 2017, 2018 Mathieu Othacehe
Copyright © 2017 Federico Beffa
Copyright © 2017, 2018 Carlo Zancanaro
Copyright © 2017 Thomas Danckaert
Copyright © 2017 humanitiesNerd
Copyright © 2017 Christopher Allan Webber
Copyright © 2017, 2018, 2019, 2020 Marius Bakke
Copyright © 2017, 2019, 2020 Hartmut Goebel
Copyright © 2017, 2019, 2020 Maxim Cournoyer
Copyright © 2017, 2018, 2019, 2020 Tobias Geerinckx-Rice
Copyright © 2017 George Clemmer
Copyright © 2017 Andy Wingo
Copyright © 2017, 2018, 2019 Arun Isaac
Copyright © 2017 nee
Copyright © 2018 Rutger Helling
Copyright © 2018 Oleg Pykhalov
Copyright © 2018 Mike Gerwitz
Copyright © 2018 Pierre-Antoine Rouby
Copyright © 2018, 2019 Gábor Boskovits
Copyright © 2018, 2019 Florian Pelz
Copyright © 2018 Laura Lazzati
Copyright © 2018 Alex Vong
Copyright © 2019 Josh Holland
Copyright © 2019, 2020 Diego Nicola Barbato
Copyright © 2019 Ivan Petkov
Copyright © 2019 Jakob L. Kreuze
Copyright © 2019 Kyle Andrews
Copyright © 2019 Alex Griffin
Copyright © 2019 Guillaume Le Vaillant
Copyright © 2020 Leo Prikler
Copyright © 2019, 2020 Simon Tournier
Copyright © 2020 Wiktor Żelazny
Copyright © 2020 Damien Cassou
Copyright © 2020 Jakub Kądziołka
Copyright © 2020 Jack Hill
Copyright © 2020 Naga Malleswari
Copyright © 2020 Brice Waegeneire
Copyright © 2020 R Veera Kumar
Copyright © 2020 Pierre Langlois
Copyright © 2020 pinoaffe

   Es ist Ihnen gestattet, dieses Dokument zu vervielfältigen,
weiterzugeben und/oder zu verändern, unter den Bedingungen der GNU Free
Documentation License, entweder gemäß Version 1.3 der Lizenz oder (nach
Ihrer Option) einer späteren Version, die von der Free Software
Foundation veröffentlicht wurde, ohne unveränderliche Abschnitte, ohne
vorderen Umschlagtext und ohne hinteren Umschlagtext. Eine Kopie der
Lizenz finden Sie im Abschnitt mit dem Titel „GNU Free Documentation
License“.
INFO-DIR-SECTION Systemadministration
START-INFO-DIR-ENTRY
* Guix: (guix.de).           Installierte Software und Systemkonfigurationen
                               verwalten.
* guix package: (guix.de)guix package aufrufen.  Pakete installieren,
                                                   entfernen und
                                                   aktualisieren.
* guix gc: (guix.de)guix gc aufrufen.  Unbenutzten Plattenspeicher wieder
                                         freigeben.
* guix pull: (guix.de)guix pull aufrufen.  Die Liste verfügbarer Pakete
                                             aktualisieren.
* guix system: (guix.de)guix system aufrufen.  Die
                                                 Betriebssystemkonfiguration
                                                 verwalten.
* guix deploy: (guix.de)guix deploy aufrufen.  Betriebssystemkonfigurationen
                                                 entfernter Rechner verwalten.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION Softwareentwicklung
START-INFO-DIR-ENTRY
* guix environment: (guix.de)guix environment aufrufen.  Umgebungen für
                                                           Entwickler
                                                           erstellen
* guix build: (guix.de)guix build aufrufen.  Erstellen von Paketen.
* guix pack: (guix.de)guix pack aufrufen.  Bündel aus Binärdateien
                                             erstellen.
END-INFO-DIR-ENTRY


File: guix.de.info,  Node: Geplante Auftragsausführung,  Next: Log-Rotation,  Prev: Basisdienste,  Up: Dienste

8.8.2 Geplante Auftragsausführung
---------------------------------

Das Modul ‘(gnu services mcron)’ enthält eine Schnittstelle zu
GNU mcron, einem Daemon, der gemäß einem vorher festgelegten Zeitplan
Aufträge (sogenannte „Jobs“) ausführt (siehe *note (mcron)Top::).
GNU mcron ist ähnlich zum traditionellen ‘cron’-Daemon aus Unix; der
größte Unterschied ist, dass mcron in Guile Scheme implementiert ist,
wodurch einem viel Flexibilität bei der Spezifikation von Aufträgen und
ihren Aktionen offen steht.

   Das folgende Beispiel definiert ein Betriebssystem, das täglich die
Befehle ‘updatedb’ (siehe *note (find)Invoking updatedb::) und ‘guix gc’
(siehe *note Aufruf von guix gc::) ausführt sowie den Befehl ‘mkid’ im
Namen eines „unprivilegierten“ Nutzers ohne besondere Berechtigungen
laufen lässt (siehe *note (idutils)mkid invocation::). Zum Anlegen von
Auftragsdefinitionen benutzt es G-Ausdrücke, die dann an mcron übergeben
werden (siehe *note G-Ausdrücke::).

     (use-modules (guix) (gnu) (gnu services mcron))
     (use-package-modules base idutils)

     (define updatedb-job
       ;; 'updatedb' jeden Tag um 3 Uhr morgens ausführen. Hier schreiben wir
       ;; die vom Auftrag durchzuführende Aktion als eine Scheme-Prozedur.
       #~(job '(next-hour '(3))
              (lambda ()
                (execl (string-append #$findutils "/bin/updatedb")
                       "updatedb"
                       "--prunepaths=/tmp /var/tmp /gnu/store"))))

     (define garbage-collector-job
       ;; Jeden Tag 5 Minuten nach Mitternacht Müll sammeln gehen.
       ;; Die Aktions des Auftrags ist ein Shell-Befehl.
       #~(job "5 0 * * *"            ;Vixie-cron-Syntax
              "guix gc -F 1G"))

     (define idutils-job
       ;; Die Index-Datenbank des Benutzers "charlie" um 12:15 Uhr und
       ;; 19:15 Uhr aktualisieren. Dies wird aus seinem Persönlichen
       ;; Ordner heraus ausgeführt.
       #~(job '(next-minute-from (next-hour '(12 19)) '(15))
              (string-append #$idutils "/bin/mkid src")
              #:user "charlie"))

     (operating-system
       ;; …
       (services (cons (service mcron-service-type
                                (mcron-configuration
                                 (jobs (list garbage-collector-job
                                             updatedb-job
                                             idutils-job))))
                       %base-services)))

   Wenn Sie einen komplexeren Auftrag mit Scheme-Code auf oberster Ebene
festlegen möchten, um zum Beispiel eine ‘use-modules’-Form einzuführen,
können Sie Ihren Code in ein separates Programm verschieben, indem Sie
die Prozedur ‘program-file’ aus dem Modul ‘(guix gexp)’ benutzen (siehe
*note G-Ausdrücke::). Das folgende Beispiel veranschaulicht dies.

     (define %batterie-alarm-auftrag
       ;; Piepsen, wenn die Akkuladung in Prozent unter %MIN-NIVEAU fällt.
       #~(job
          '(next-minute (range 0 60 1))
          #$(program-file
             "batterie-alarm.scm"
             (with-imported-modules (source-module-closure
                                     '((guix build utils)))
               #~(begin
                   (define %min-niveau 20)
                   (use-modules (guix build utils)
                                (ice-9 popen)
                                (ice-9 regex)
                                (ice-9 textual-ports)
                                (srfi srfi-2))
                   (setenv "LC_ALL" "C")     ;Ausgabe auf Englisch
                   (and-let* ((input-pipe (open-pipe*
                                           OPEN_READ
                                           #$(file-append acpi "/bin/acpi")))
                              (ausgabe (get-string-all input-pipe))
                              (m (string-match "Discharging, ([0-9]+)%" ausgabe))
                              (niveau (string->number (match:substring m 1)))
                              ((< niveau %min-niveau)))
                     (format #t "Warnung: Batterieladung nur noch (~a%)~%" niveau)
                     (invoke #$(file-append beep "/bin/beep") "-r5")))))))

   Siehe *note mcron job specifications: (mcron)Guile Syntax. für
weitere Informationen zu mcron-Auftragsspezifikationen. Nun folgt die
Referenz des mcron-Dienstes.

   Wenn das System läuft, können Sie mit der Aktion ‘schedule’ des
Dienstes visualisieren lassen, welche mcron-Aufträge als Nächstes
ausgeführt werden:

     # herd schedule mcron

Das vorangehende Beispiel listet die nächsten fünf Aufgaben auf, die
ausgeführt werden, aber Sie können auch angeben, wieviele Aufgaben
angezeigt werden sollen:

     # herd schedule mcron 10

 -- Scheme-Variable: mcron-service-type
     Dies ist der Diensttyp des ‘mcron’-Dienstes. Als Wert verwendet er
     ein ‘mcron-configuration’-Objekt.

     Dieser Diensttyp kann als Ziel einer Diensterweiterung verwendet
     werden, die ihn mit zusätzlichen Auftragsspezifikationen versorgt
     (siehe *note Dienstkompositionen::). Mit anderen Worten ist es
     möglich, Dienste zu definieren, die weitere mcron-Aufträge
     ausführen lassen.

 -- Datentyp: mcron-configuration
     Datentyp, der die Konfiguration von mcron repräsentiert.

     ‘mcron’ (Vorgabe: MCRON)
          Welches mcron-Paket benutzt werden soll.

     ‘jobs’
          Dies muss eine Liste von G-Ausdrücken sein (siehe *note
          G-Ausdrücke::), die jeweils einer mcron-Auftragsspezifikation
          (der Spezifikation eines „Jobs“) entsprechen (siehe *note
          mcron job specifications: (mcron)Syntax.).


File: guix.de.info,  Node: Log-Rotation,  Next: Netzwerkdienste,  Prev: Geplante Auftragsausführung,  Up: Dienste

8.8.3 Log-Rotation
------------------

Protokolldateien wie die in ‘/var/log’ neigen dazu, bis ins Unendliche
zu wachsen, deshalb ist es eine gute Idee, sie von Zeit zu Zeit zu
“rotieren” — d.h. ihren Inhalt in separaten Dateien zu archivieren,
welche optional auch komprimiert werden. Das Modul ‘(gnu services
admin)’ stellt eine Schnittstelle zu GNU Rot[t]log bereit, einem
Werkzeug, um Protokolldateien („Log“-Dateien) zu rotieren (siehe *note
(rottlog)Top::).

   Dieser Dienst ist Teil der ‘%base-services’ und daher standardmäßig
mit seinen Vorgabeeinstellungen für übliche Log-Dateien aktiv. Das
Beispiel unten zeigt, wie Sie ihn um eine weitere “rotation” erweitern
können, wenn dies nötig wird (normalerweise kümmern sich darum schon die
Dienste, die die Log-Dateien erzeugen):

     (use-modules (guix) (gnu))
     (use-service-modules admin)

     (define my-log-files
       ;; Log-Dateien, die ich rotieren lassen will.
       '("/var/log/irgendein.log" "/var/log/noch-ein.log"))

     (operating-system
       ;; …
       (services (cons (simple-service 'meinen-kram-rotieren
                                       rottlog-service-type
                                       (list (log-rotation
                                              (frequency 'daily)
                                              (files my-log-files))))
                       %base-services)))

 -- Scheme-Variable: rottlog-service-type
     Dies ist der Typ des Rottlog-Dienstes, dessen Wert ein
     ‘rottlog-configuration’-Objekt ist.

     Andere Dienste können diesen Dienst um neue ‘log-rotation’-Objekte
     erweitern (siehe unten), wodurch die Auswahl an zu rotierenden
     Dateien ausgeweitet wird.

     Dieser Diensttyp kann mcron-Aufträge definieren (siehe *note
     Geplante Auftragsausführung::), die den rottlog-Dienst ausführen.

 -- Datentyp: rottlog-configuration
     Datentyp, der die Konfiguration von rottlog repräsentiert.

     ‘rottlog’ (Vorgabe: ‘rottlog’)
          Das Rottlog-Paket, das verwendet werden soll.

     ‘rc-file’ (Vorgabe: ‘(file-append rottlog "/etc/rc")’)
          Die zu benutzende Rottlog-Konfigurationsdatei (siehe *note
          (rottlog)Mandatory RC Variables::).

     ‘rotations’ (Vorgabe: ‘%default-rotations’)
          Eine Liste von ‘log-rotation’-Objekten, wie wir sie weiter
          unten definieren.

     ‘jobs’
          Dies ist eine Liste von G-Ausdrücken. Jeder G-Ausdruck darin
          entspricht einer mcron-Auftragsspezifikation (siehe *note
          Geplante Auftragsausführung::).

 -- Datentyp: log-rotation
     Datentyp, der die Rotation einer Gruppe von Protokolldateien
     repräsentiert.

     Um ein Beispiel aus dem Rottlog-Handbuch (siehe *note
     (rottlog)Period Related File Examples::) aufzugreifen: Eine
     Log-Rotation kann auf folgende Art definiert werden:

          (log-rotation
            (frequency 'daily) ;täglich
            (files '("/var/log/apache/*"))
            (options '("storedir apache-archives"
                       "rotate 6"
                       "notifempty"
                       "nocompress")))

     Die Liste der Felder ist folgendermaßen aufgebaut:

     ‘frequency’ (Vorgabe: ‘'weekly’)
          Die Häufigkeit der Log-Rotation, dargestellt als
          englischsprachiges Symbol.

     ‘files’
          Die Liste der Dateien oder Glob-Muster für Dateien, die
          rotiert werden sollen.

     ‘options’ (Vorgabe: ‘'()’)
          Die Liste der Rottlog-Optionen für diese Rotation (siehe *note
          (rottlog)Configuration parameters::).

     ‘post-rotate’ (Vorgabe: ‘#f’)
          Entweder ‘#f’ oder ein G-Ausdruck, der nach Abschluss der
          Rotation einmal ausgeführt wird.

 -- Scheme-Variable: %default-rotations
     Specifies weekly rotation of ‘%rotated-files’ and of
     ‘/var/log/guix-daemon.log’.

 -- Scheme-Variable: %rotated-files
     Die Liste der von Syslog verwalteten Dateien, die rotiert werden
     sollen. Vorgegeben ist ‘'("/var/log/messages" "/var/log/secure"
     "/var/log/debug" "/var/log/maillog")’.


File: guix.de.info,  Node: Netzwerkdienste,  Next: X Window,  Prev: Log-Rotation,  Up: Dienste

8.8.4 Netzwerkdienste
---------------------

Das Modul ‘(gnu services networking)’ bietet Dienste zum Konfigurieren
des Netzwerks an.

 -- Scheme-Variable: dhcp-client-service-type
     Dies ist der Diensttyp für den Dienst, der DHCP ausführt, einen
     Client für das „Dynamic Host Configuration Protocol“ (DHCP), der
     auf allen Netzwerkschnittstellen außer „loopback“ läuft. Sein Wert
     ist das zu verwendende DHCP-Client-Paket; vorgegeben ist
     ‘isc-dhcp’.

 -- Scheme-Prozedur: dhcpd-service-type
     Dieser Diensttyp definiert einen Dienst, der einen DHCP-Daemon
     ausführt. Um einen Dienst zu diesem Typ anzugeben, müssen Sie eine
     ‘<dhcpd-configuration>’ bereitstellen. Zum Beispiel so:

          (service dhcpd-service-type
                   (dhcpd-configuration
                    (config-file (local-file "my-dhcpd.conf"))
                    (interfaces '("enp0s25"))))

 -- Datentyp: dhcpd-configuration
     ‘package’ (Vorgabe: ‘isc-dhcp’)
          Das Paket, das den DHCP-Daemon zur Verfügung stellt. Von
          diesem Paket wird erwartet, dass es den Daemon unter dem Pfad
          ‘sbin/dhcpd’ relativ zum Verzeichnis der Paketausgabe
          bereitstellt. Das vorgegebene Paket ist der DHCP-Server vom
          ISC (https://www.isc.org/products/DHCP).
     ‘config-file’ (Vorgabe: ‘#f’)
          Die Konfigurationsdatei, die benutzt werden soll. Sie _muss_
          angegeben werden und wird an ‘dhcpd’ mittels seiner
          Befehlszeilenoption ‘-cf’ übergeben. Ein beliebiges
          „dateiartiges“ Objekt kann dafür angegeben werden (siehe *note
          dateiartige Objekte: G-Ausdrücke.). Siehe ‘man dhcpd.conf’ für
          Details, welcher Syntax die Konfigurationsdatei genügen muss.
     ‘version’ (Vorgabe: ‘"4"’)
          Die DHCP-Version, die benutzt werden soll. Der ISC-DHCP-Server
          unterstützt die Werte „4“, „6“ und „4o6“. Das Feld entspricht
          den Befehlszeilenoptionen ‘-4’, ‘-6’ und ‘-4o6’ von ‘dhcpd’.
          Siehe ‘man dhcpd’ für Details.
     ‘run-directory’ (Vorgabe: ‘"/run/dhcpd"’)
          Das zu benutzende Laufzeit-Verzeichnis („run“-Verzeichnis).
          Wenn der Dienst aktiviert wird, wird dieses Verzeichnis
          erzeugt, wenn es noch nicht existiert.
     ‘pid-file’ (Vorgabe: ‘"/run/dhcpd/dhcpd.pid"’)
          Die zu benutzende PID-Datei. Dieses Feld entspricht der
          Befehlszeilenoption ‘-pf’ von ‘dhcpd’. Siehe ‘man dhcpd’ für
          Details.
     ‘interfaces’ (Vorgabe: ‘'()’)
          Die Namen der Netzwerkschnittstelle, auf der dhcpd auf
          Broadcast-Nachrichten lauscht. Wenn diese Liste nicht leer
          ist, werden ihre Elemente (diese müssen Zeichenketten sein) an
          den ‘dhcpd’-Aufruf beim Starten des Daemons angehängt. Es ist
          unter Umständen _nicht_ nötig, hier Schnittstellen
          ausdrücklich anzugeben; siehe ‘man dhcpd’ für Details.

 -- Scheme-Variable: static-networking-service-type
     Dies ist der Typ für statisch konfigurierte Netzwerkschnittstellen.

 -- Scheme-Prozedur: static-networking-service SCHNITTSTELLE IP
          [#:netmask #f] [#:gateway #f] [#:name-servers ‘'()’]
           [#:requirement
     ‘'(udev)’] Liefert einen Dienst, der die SCHNITTSTELLE auf dieser
     IP-Adresse startet. Wenn NETMASK wahr ist, wird es als
     Netzwerkmaske benutzt. Wenn GATEWAY wahr ist, muss es eine
     Zeichenkette sein, die den voreingestellten Netzwerk-Zugang
     („Netzwerk-Gateway“) angibt. Als REQUIREMENT („Anforderung“) können
     Abhängigkeiten von anderen Diensten deklariert werden, die vor dem
     Konfigurieren der Schnittstelle gestartet sein müssen.

     Diese Prozedur kann mehrmals aufgerufen werden, einmal pro
     Netzwerkschnittstelle, die Sie möchten. Intern funktioniert sie,
     indem sie ‘static-networking-service-type’ mit zusätzlichen
     Netzwerkschnittstellen erweitert, um die sich der Dienst kümmern
     soll.

     Zum Beispiel:

          (static-networking-service "eno1" "192.168.1.82"
                                     #:gateway "192.168.1.2"
                                     #:name-servers '("192.168.1.2"))

 -- Scheme-Prozedur: wicd-service [#:wicd WICD]
     Liefert einen Dienst, der Wicd (https://launchpad.net/wicd)
     ausführt, einen Netzwerkverwaltungsdaemon, um ein einfacheres
     Einrichten kabelgebundener und drahtloser Netzwerkanbindungen zu
     ermöglichen.

     Dieser Dienst fügt das WICD-Paket zum globalen Profil hinzu und
     stellt dadurch mehrere Befehle zur Verfügung, um mit dem Daemon zu
     interagieren und Netzwerke einzurichten: ‘wicd-client’, eine
     grafische Benutzeroberfläche, und die Benutzungsschnittstellen
     ‘wicd-cli’ und ‘wicd-curses’.

 -- Scheme-Variable: modem-manager-service-type
     Dies ist der Diensttyp für den ModemManager-Dienst
     (https://wiki.gnome.org/Projects/ModemManager). Der Wert dieses
     Diensttyps ist ein ‘modem-manager-configuration’-Verbundsobjekt.

     Dieser Dienst gehört zu den ‘%desktop-services’ (siehe *note
     Desktop-Dienste::).

 -- Datentyp: modem-manager-configuration
     Repräsentiert die Konfiguration vom ModemManager.

     ‘modem-manager’ (Vorgabe: ‘modem-manager’)
          Das ModemManager-Paket, was benutzt werden soll.

 -- Scheme-Variable: usb-modeswitch-service-type
     Dies ist der Diensttyp für den USB_ModeSwitch-Dienst
     (https://www.draisberghof.de/usb_modeswitch/). Der Wert dieses
     Diensttyps ist ein ‘usb-modeswitch-configuration’-Verbundsobjekt.

     Wenn sie eingesteckt werden, geben sich manche USB-Modems (und
     andere USB-Geräte) zunächst als Nur-Lese-Speichermedien und nicht
     als Modem aus. Sie müssen erst einem Moduswechsel („Modeswitching“)
     unterzogen werden, bevor sie benutzt werden können. Der
     USB_ModeSwitch-Diensttyp installiert udev-Regeln, um bei diesen
     Geräten automatisch ein Modeswitching durchzuführen, wenn sie
     eingesteckt werden.

     Dieser Dienst gehört zu den ‘%desktop-services’ (siehe *note
     Desktop-Dienste::).

 -- Datentyp: usb-modeswitch-configuration
     Der Datentyp, der die Konfiguration von USB_ModeSwitch
     repräsentiert.

     ‘usb-modeswitch’ (Vorgabe: ‘usb-modeswitch’)
          Das USB_ModeSwitch-Paket, das die Programmdateien für das
          Modeswitching enthält.

     ‘usb-modeswitch-data’ (Vorgabe: ‘usb-modeswitch-data’)
          Das Paket, in dem die Gerätedaten und die udev-Regeldatei
          stehen, die USB_ModeSwitch benutzt.

     ‘config-file’ (Vorgabe: ‘#~(string-append #$usb-modeswitch:dispatcher "/etc/usb_modeswitch.conf")’)
          Welche Konfigurationsdatei das USB_ModeSwitch-Aufrufprogramm
          („Dispatcher“) benutzt. Nach Vorgabe wird die mit
          USB_ModeSwitch ausgelieferte Konfigurationsdatei benutzt, die
          neben anderen Voreinstellungen die Protokollierung nach
          ‘/var/log’ abschaltet. Wenn ‘#f’ festgelegt wird, wird keine
          Konfigurationsdatei benutzt.

 -- Scheme-Variable: network-manager-service-type
     Dies ist der Diensttyp für den NetworkManager-Dienst
     (https://wiki.gnome.org/Projects/NetworkManager). Der Wert dieses
     Diensttyps ist ein ‘network-manager-configuration’-Verbundsobjekt.

     Dieser Dienst gehört zu den ‘%desktop-services’ (siehe *note
     Desktop-Dienste::).

 -- Datentyp: network-manager-configuration
     Datentyp, der die Konfiguration von NetworkManager repräsentiert.

     ‘network-manager’ (Vorgabe: ‘network-manager’)
          Das zu verwendende NetworkManager-Paket.

     ‘dns’ (Vorgabe: ‘"default"’)
          Der Verarbeitungsmodus für DNS-Anfragen. Er hat Einfluss
          darauf, wie NetworkManager mit der Konfigurationsdatei
          ‘resolv.conf’ verfährt.

          ‘default’
               NetworkManager aktualisiert ‘resolv.conf’, damit sie die
               Nameserver enthält, die von zur Zeit aktiven Verbindungen
               benutzt werden.

          ‘dnsmasq’
               NetworkManager führt ‘dnsmasq’ als lokal
               zwischenspeichernden Nameserver aus und aktualisiert
               ‘resolv.conf’ so, dass es auf den lokalen Nameserver
               verweist. Falls Sie mit einem VPN verbunden sind, wird
               dafür eine getrennte DNS-Auflösung verwendet
               („Conditional Forwarding“).

               Mit dieser Einstellung können Sie Ihre Netzwerkverbindung
               teilen. Wenn Sie sie zum Beispiel mit einem anderen
               Laptop über ein Ethernet-Kabel teilen möchten, können Sie
               ‘nm-connection-editor’ öffnen und die Methode der
               Ethernet-Verbindung für IPv4 und IPv6 auf „Gemeinsam mit
               anderen Rechnern“ stellen und daraufhin die Verbindung
               neu herstellen (oder Ihren Rechner neu starten).

               Sie können so auch eine Verbindung vom Wirts- zum
               Gastsystem in virtuellen Maschinen mit QEMU (siehe *note
               Guix in einer VM installieren::) herstellen, d.h. eine
               „Host-to-Guest Connection“). Mit einer solchen
               Wirt-nach-Gast-Verbindung können Sie z.B. von einem
               Webbrowser auf Ihrem Wirtssystem auf einen Web-Server
               zugreifen, der auf der VM läuft (siehe *note
               Web-Dienste::). Sie können sich damit auch über SSH mit
               der virtuellen Maschine verbinden (siehe *note
               ‘openssh-service-type’: Netzwerkdienste.). Um eine
               Wirt-nach-Gast-Verbindung einzurichten, führen Sie einmal
               diesen Befehl aus:

                    nmcli connection add type tun \
                     connection.interface-name tap0 \
                     tun.mode tap tun.owner $(id -u) \
                     ipv4.method shared \
                     ipv4.addresses 172.28.112.1/24

               Danach geben Sie bei jedem Start Ihrer virtuellen
               QEMU-Maschine (siehe *note Guix in einer VM starten::)
               die Befehlszeilenoption ‘-nic
               tap,ifname=tap0,script=no,downscript=no’ an
               ‘qemu-system-…’ mit.

          ‘none’
               NetworkManager verändert ‘resolv.conf’ nicht.

     ‘vpn-plugins’ (Vorgabe: ‘'()’)
          Dies ist die Liste der verfügbaren Plugins für virtuelle
          private Netzwerke (VPN). Zum Beispiel kann das Paket
          ‘network-manager-openvpn’ angegeben werden, womit
          NetworkManager virtuelle private Netzwerke mit OpenVPN
          verwalten kann.

 -- Scheme-Variable: connman-service-type
     Mit diesem Diensttyp wird Connman (https://01.org/connman)
     ausgeführt, ein Programm zum Verwalten von Netzwerkverbindungen.

     Sein Wert muss ein ‘connman-configuration’-Verbundsobjekt wie im
     folgenden Beispiel sein:

          (service connman-service-type
                   (connman-configuration
                     (disable-vpn? #t)))

     Weiter unten werden Details der ‘connman-configuration’ erklärt.

 -- Datentyp: connman-configuration
     Datentyp, der die Konfiguration von Connman repräsentiert.

     ‘connman’ (Vorgabe: CONNMAN)
          Das zu verwendende Connman-Paket.

     ‘disable-vpn?’ (Vorgabe: ‘#f’)
          Falls dies auf wahr gesetzt ist, wird Connmans VPN-Plugin
          deaktiviert.

 -- Scheme-Variable: wpa-supplicant-service-type
     Dies ist der Diensttyp, um WPA Supplicant
     (https://w1.fi/wpa_supplicant/) auszuführen. Dabei handelt es sich
     um einen Authentisierungsdaemon, der notwendig ist, um sich
     gegenüber verschlüsselten WLAN- oder Ethernet-Netzwerken zu
     authentisieren.

 -- Datentyp: wpa-supplicant-configuration
     Repräsentiert die Konfiguration des WPA-Supplikanten.

     Sie hat folgende Parameter:

     ‘wpa-supplicant’ (Vorgabe: ‘wpa-supplicant’)
          Das WPA-Supplicant-Paket, was benutzt werden soll.

     ‘dbus?’ (Vorgabe: ‘#t’)
          Ob auf Anfragen auf D-Bus gelauscht werden soll.

     ‘pid-file’ (Vorgabe: ‘"/var/run/wpa_supplicant.pid"’)
          Wo die PID-Datei abgelegt wird.

     ‘interface’ (Vorgabe: ‘#f’)
          Wenn dieses Feld gesetzt ist, muss es den Namen einer
          Netzwerkschnittstelle angeben, die von WPA Supplicant
          verwaltet werden soll.

     ‘config-file’ (Vorgabe: ‘#f’)
          Optionale Konfigurationsdatei.

     ‘extra-options’ (Vorgabe: ‘'()’)
          Liste zusätzlicher Befehlszeilenoptionen, die an den Daemon
          übergeben werden.

 -- Scheme Variable: hostapd-service-type
     This is the service type to run the hostapd
     (https://w1.fi/hostapd/) daemon to set up WiFi (IEEE 802.11) access
     points and authentication servers. Its associated value must be a
     ‘hostapd-configuration’ as shown below:

          ;; Use wlan1 to run the access point for "My Network".
          (service hostapd-service-type
                   (hostapd-configuration
                    (interface "wlan1")
                    (ssid "My Network")
                    (channel 12)))

 -- Data Type: hostapd-configuration
     This data type represents the configuration of the hostapd service,
     with the following fields:

     ‘package’ (default: ‘hostapd’)
          The hostapd package to use.

     ‘interface’ (default: ‘"wlan0"’)
          The network interface to run the WiFi access point.

     ‘ssid’
          The SSID (“service set identifier”), a string that identifies
          this network.

     ‘broadcast-ssid?’ (default: ‘#t’)
          Whether to broadcast this SSID.

     ‘channel’ (default: ‘1’)
          The WiFi channel to use.

     ‘driver’ (default: ‘"nl80211"’)
          The driver interface type. ‘"nl80211"’ is used with all Linux
          mac80211 drivers. Use ‘"none"’ if building hostapd as a
          standalone RADIUS server that does # not control any
          wireless/wired driver.

     ‘extra-settings’ (Vorgabe: ‘""’)
          Extra settings to append as-is to the hostapd configuration
          file. See
          <https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf> for the
          configuration file reference.

 -- Scheme Variable: simulated-wifi-service-type
     This is the type of a service to simulate WiFi networking, which
     can be useful in virtual machines for testing purposes. The service
     loads the Linux kernel ‘mac80211_hwsim’ module
     (https://www.kernel.org/doc/html/latest/networking/mac80211_hwsim/mac80211_hwsim.html)
     and starts hostapd to create a pseudo WiFi network that can be seen
     on ‘wlan0’, by default.

     The service’s value is a ‘hostapd-configuration’ record.

 -- Scheme-Variable: iptables-service-type
     Mit diesem Diensttyp wird eine iptables-Konfiguration eingerichtet.
     iptables ist ein Rahmen für Netzwerkpaketfilter, der vom
     Linux-Kernel unterstützt wird. Der Dienst unterstützt die
     Konfiguration von iptables für sowohl IPv4 als auch IPv6. Eine
     einfache Beispielkonfiguration, die alle eingehenden Verbindungen
     verweigert, die nicht an den SSH-Port 22 gehen, können Sie hier
     sehen:

          (service iptables-service-type
                   (iptables-configuration
                    (ipv4-rules (plain-file "iptables.rules" "*filter
          :INPUT ACCEPT
          :FORWARD ACCEPT
          :OUTPUT ACCEPT
          -A INPUT -p tcp --dport 22 -j ACCEPT
          -A INPUT -j REJECT --reject-with icmp-port-unreachable
          COMMIT
          "))
                    (ipv6-rules (plain-file "ip6tables.rules" "*filter
          :INPUT ACCEPT
          :FORWARD ACCEPT
          :OUTPUT ACCEPT
          -A INPUT -p tcp --dport 22 -j ACCEPT
          -A INPUT -j REJECT --reject-with icmp6-port-unreachable
          COMMIT
          "))))

 -- Datentyp: iptables-configuration
     Repräsentiert die iptables-Konfiguration.

     ‘iptables’ (Vorgabe: ‘iptables’)
          Das zu benutzende iptables-Paket, das ‘iptables-restore’ und
          ‘ip6tables-restore’ zur Verfügung stellt.
     ‘ipv4-rules’ (Vorgabe: ‘%iptables-accept-all-rules’)
          Die zu benutzenden iptables-Regeln. Diese werden an
          ‘iptables-restore’ übergeben. Als Regeln kann jedes
          „dateiartige“ Objekt angegeben werden (siehe *note dateiartige
          Objekte: G-Ausdrücke.).
     ‘ipv6-rules’ (Vorgabe: ‘%iptables-accept-all-rules’)
          Die zu benutzenden ip6tables-Regeln. Diese werden an
          ‘ip6tables-restore’ übergeben. Als Regeln kann jedes
          „dateiartige“ Objekt angegeben werden (siehe *note dateiartige
          Objekte: G-Ausdrücke.).

 -- Scheme-Variable: nftables-service-type
     Dieser Dienst richtet eine Konfiguration von nftables ein. nftables
     ist als Projekt ein Teil von Netfilter mit dem Ziel, den
     bestehenden Aufbau aus iptables, ip6tables, arptables und ebtables
     zu ersetzen. Es stellt einen neuen Rahmen für Netzwerkpaketfilter
     bereit sowie ein neues Werkzeug ‘nft’ auf Anwendungsebene und eine
     Kompatibilitätsschicht für iptables. Dieser Dienst wird zusammen
     mit ‘%default-nftables-ruleset’ ausgeliefert, einem vorgegebenen
     Satz von Regeln, der alle eingehenden Verbindungen außer auf dem
     SSH-Port 22 ablehnt. Um ihn zu benutzen, schreiben Sie einfach:

          (service nftables-service-type)

 -- Datentyp: nftables-configuration
     Datentyp, der die nftables-Konfiguration repräsentiert.

     ‘package’ (Vorgabe: ‘nftables’)
          Das nftables-Paket, das ‘nft’ zur Verfügung stellt.
     ‘ruleset’ (Vorgabe: ‘%default-nftables-ruleset’)
          Die zu benutzenden nftables-Regeln. Als Regeln kann jedes
          „dateiartige“ Objekt angegeben werden (siehe *note dateiartige
          Objekte: G-Ausdrücke.).

 -- Scheme-Variable: ntp-service-type
     Dies ist der Typ des Dienstes, der den ‘ntpd’-Daemon für das
     Network Time Protocol (https://www.ntp.org), kurz NTP, ausführt.
     Mit diesem Daemon wird die Systemuhr mit der Uhr auf den
     angegebenen NTP-Servern synchronisiert.

     Der Wert dieses Dienstes ist ein ‘ntpd-configuration’-Objekt, wie
     im Folgenden beschrieben.

 -- Datentyp: ntp-configuration
     Der Datentyp für die Dienstkonfiguration des NTP-Dienstes.

     ‘servers’ (Vorgabe: ‘%ntp-servers’)
          Dies ist die Liste der Server
          (‘<ntp-server>’-Verbundsobjekte), mit denen ‘ntpd’
          synchronisiert wird. Siehe die Definition des
          ‘ntp-server’-Datentyps weiter unten.

     ‘allow-large-adjustment?’ (Vorgabe: ‘#t’)
          Hiermit wird festgelegt, ob ‘ntpd’ die Uhr beim ersten
          Umstellen um mehr als 1.000 Sekunden ändern darf.

     ‘ntp’ (Vorgabe: ‘ntp’)
          Das NTP-Paket, was benutzt werden soll.

 -- Scheme-Variable: %ntp-servers
     Liste der Rechnernamen („Host“-Namen), die als vorgegebene
     NTP-Server benutzt werden. Dabei handelt es sich um die Server des
     NTP Pool Project (https://www.ntppool.org/en/).

 -- Datentyp: ntp-server
     Der Datentyp, der die Konfiguration eines NTP-Servers
     repräsentiert.

     ‘type’ (Vorgabe: ‘'server’)
          Die Art des NTP-Servers als Symbol, entweder ‘'pool’,
          ‘'server’, ‘'peer’, ‘'broadcast’ oder ‘'manycastclient’.

     ‘address’
          Die Adresse des Servers als Zeichenkette.

     ‘options’
          NTPD-Optionen, die für diesen bestimmten Server gelten sollen,
          angegeben als Liste von Optionsnamen und/oder Tupeln aus je
          Optionsname und -wert. Im folgenden Beispiel wird ein Server
          definiert, der die Optionen ‘iburst’ und ‘prefer’ sowie
          ‘version’ 3 und eine ‘maxpoll’-Zeit von 16 Sekunden benutzen
          soll.

               (ntp-server
                (type 'server)
                (address "ein.ntp.server.org")
                (options `(iburst (version 3) (maxpoll 16) prefer))))

 -- Scheme-Prozedur: openntpd-service-type
     Hiermit wird ‘ntpd’, der Network-Time-Protocol-Daemon (NTP-Daemon),
     ausgeführt, in seiner OpenNTPD-Implementierung
     (http://www.openntpd.org). Der Daemon sorgt dafür, dass die
     Systemuhr mit den Uhren der eingestellten Server synchron bleibt.

          (service
           openntpd-service-type
           (openntpd-configuration
            (listen-on '("127.0.0.1" "::1"))
            (sensor '("udcf0 correction 70000"))
            (constraint-from '("www.gnu.org"))
            (constraints-from '("https://www.google.com/"))
            (allow-large-adjustment? #t)))


 -- Scheme-Variable: %openntpd-servers
     This variable is a list of the server addresses defined in
     ‘%ntp-servers’.

 -- Datentyp: openntpd-configuration
     ‘openntpd’ (Vorgabe: ‘(file-append openntpd "/sbin/ntpd")’)
          Das openntpd-Programm, das benutzt werden soll.
     ‘listen-on’ (Vorgabe: ‘'("127.0.0.1" "::1")’)
          Eine Liste von lokalen IP-Adressen oder Rechnernamen
          („Host“-Namen), auf denen der ntpd-Daemon lauschen soll.
     ‘query-from’ (Vorgabe: ‘'()’)
          Eine Liste von lokalen IP-Adressen, die der ntpd-Daemon für
          ausgehende Anfragen benutzen soll.
     ‘sensor’ (Vorgabe: ‘'()’)
          Hiermit geben Sie eine Liste von Zeitdifferenz-Sensorgeräten
          an, die ntpd benutzen soll. ‘ntpd’ wird auf jeden Sensor
          lauschen, der auch tatsächlich existiert, und solche, die
          nicht existieren, ignorieren. Siehe die Dokumentation beim
          Anbieter (https://man.openbsd.org/ntpd.conf) für weitere
          Informationen.
     ‘server’ (Vorgabe: ‘'()’)
          Hiermit geben Sie eine Liste von IP-Adressen oder Rechnernamen
          von NTP-Servern an, mit denen synchronisiert werden soll.
     ‘servers’ (default: ‘%openntp-servers’)
          Hiermit geben Sie eine Liste von IP-Adressen oder Rechnernamen
          von NTP-Pools an, mit denen synchronisiert werden soll.
     ‘constraint-from’ (Vorgabe: ‘'()’)
          ‘ntpd’ kann so eingestellt werden, dass es das Datum aus der
          „Date“-Kopfzeile bei mit TLS übermittelten Anfragen an
          HTTPS-Server, denen vertraut wird, ausliest. Diese
          Zeitinformation wird nicht für Genauigkeit benutzt, sondern um
          mit authentifizierten Informationen die Auswirkungen eines
          Man-in-the-Middle-Angriffs auf unauthentifizierte
          NTP-Kommunikation einzuschränken. Geben Sie hierzu eine Liste
          von URLs, IP-Adressen oder Rechnernamen („Host“-Namen) von
          HTTPS-Servern an, um eine solche Beschränkung („Constraint“)
          einzurichten.
     ‘constraints-from’ (Vorgabe: ‘'()’)
          Wie bei ‘constraint-from’ geben Sie auch hier eine Liste von
          URLs, IP-Adressen oder Rechnernamen von HTTPS-Servern an, um
          eine Beschränkung einzurichten. Falls der Rechnername zu
          mehreren IP-Adressen aufgelöst wird, berechnet ‘ntpd’ den
          Median von allen als Beschränkung.
     ‘allow-large-adjustment?’ (Vorgabe: ‘#f’)
          Legt fest, ob ‘ntpd’ die Uhr beim ersten Umstellen um mehr als
          180 Sekunden verstellen darf.

 -- Scheme-Variable: inetd-service-type
     Dieser Dienst führt den ‘inetd’-Daemon aus (siehe *note
     (inetutils)inetd invocation::). ‘inetd’ lauscht auf Verbindungen
     mit Internet-Sockets und startet bei Bedarf das entsprechende
     Server-Programm, sobald eine Verbindung mit einem dieser Sockets
     hergestellt wird.

     Der Wert dieses Dienstes ist ein ‘inetd-configuration’-Objekt. Im
     folgenden Beispiel wird der ‘inetd’-Daemon konfiguriert, um den
     eingebauten ‘echo’-Dienst sowie einen SMTP-Dienst anzubieten, wobei
     letzterer SMTP-Kommunikation über SSH an einen Server ‘smtp-server’
     über einen vom ‘rechnername’n bezeichneten Zugang („Gateway“)
     weiterleitet:

          (service
           inetd-service-type
           (inetd-configuration
            (entries (list
                      (inetd-entry
                       (name "echo")
                       (socket-type 'stream)
                       (protocol "tcp")
                       (wait? #f)
                       (user "root"))
                      (inetd-entry
                       (node "127.0.0.1")
                       (name "smtp")
                       (socket-type 'stream)
                       (protocol "tcp")
                       (wait? #f)
                       (user "root")
                       (program (file-append openssh "/bin/ssh"))
                       (arguments
                        '("ssh" "-qT" "-i" "/pfad/zum/ssh_schlüssel"
                          "-W" "smtp-server:25" "benutzer@rechnername")))))))

     Siehe unten für mehr Details über ‘inetd-configuration’.

 -- Datentyp: inetd-configuration
     Datentyp, der die Konfiguration von ‘inetd’ repräsentiert.

     ‘program’ (Vorgabe: ‘(file-append inetutils "/libexec/inetd")’)
          Das ‘inetd’-Programm, das benutzt werden soll.

     ‘entries’ (Vorgabe: ‘'()’)
          Eine Liste von ‘inetd’-Diensteinträgen. Jeder Eintrag sollte
          von einem ‘inetd-entry’-Konstruktor erzeugt werden.

 -- Datentyp: inetd-entry
     Datentyp, der einen Eintrag in der ‘inetd’-Konfiguration
     repräsentiert. Jeder Eintrag entspricht einem Socket, auf dem
     ‘inetd’ auf Anfragen lauscht.

     ‘node’ (Vorgabe: ‘#f’)
          Optional sollte hier als Zeichenkette eine kommagetrennte
          Liste lokaler Adressen angegeben werden, die ‘inetd’ benutzen
          soll, wenn er stellvertretend für den angegebenen Dienst
          lauscht. Siehe *note (inetutils)Configuration file:: für eine
          vollständige Beschreibung aller Optionen.
     ‘name’
          Eine Zeichenkette. Dieser Name muss einem Eintrag in
          ‘/etc/services’ entsprechen.
     ‘socket-type’
          Entweder ‘'stream’, ‘'dgram’, ‘'raw’, ‘'rdm’ oder
          ‘'seqpacket’.
     ‘protocol’
          Eine Zeichenkette, die einem Eintrag in ‘/etc/protocols’
          entsprechen muss.
     ‘wait?’ (Vorgabe: ‘#t’)
          Ob ‘inetd’ warten soll, bis der Server beendet ist, bevor es
          wieder auf neue Anfragen an den Dienst lauscht.
     ‘user’
          Eine Zeichenkette mit dem Benutzernamen (und optional dem
          Gruppennamen) des Benutzers, als der dieser Server ausgeführt
          werden soll. Der Gruppenname kann als Suffix angegeben werden,
          getrennt durch einen Doppelpunkt oder Punkt, d.h.
          ‘"benutzer"’, ‘"benutzer:gruppe"’ oder ‘"benutzer.gruppe"’.
     ‘program’ (Vorgabe: ‘"internal"’)
          Das Serverprogramm, das die Anfragen bedienen soll, oder
          ‘"internal"’, wenn ‘inetd’ einen eingebauten Dienst verwenden
          soll.
     ‘arguments’ (Vorgabe: ‘'()’)
          Eine Liste von Zeichenketten oder dateiartigen Objekten, die
          dem Serverprogramm als Argumente übergeben werden, angefangen
          mit dem nullten Argument, d.h. dem Namen selbigen
          Serverprogramms. Bei in ‘inetd’ eingebauten Diensten muss
          dieser Eintrag auf ‘'()’ oder ‘'("internal")’ gesetzt sein.

     Siehe *note (inetutils)Configuration file:: für eine mehr ins
     Detail gehende Erörterung jedes Konfigurationsfeldes.

 -- Scheme-Variable: tor-service-type
     Dies ist der Diensttyp für den Dienst, der den Tor-Daemon
     (https://torproject.org) für anonyme Netzwerkrouten ausführt. Der
     Dienst benutzt für seine Konfiguration ein
     ‘<tor-configuration>’-Verbundsobjekt. Vorgegeben ist, dass der
     Tor-Daemon als „unprivilegierter“ Nutzer ‘tor’ ausgeführt wird,
     einem Mitglied der ‘tor’-Benutzergruppe ohne besondere
     Berechtigungen.

 -- Datentyp: tor-configuration
     ‘tor’ (Vorgabe: ‘tor’)
          Das Paket, das den Tor-Daemon zur Verfügung stellt. Von diesem
          Paket wird erwartet, dass es den Daemon unter dem Pfad
          ‘bin/tor’ relativ zum Ausgabeverzeichnis verfügbar macht. Das
          vorgegebene Paket ist die Implementierung des Tor-Projekts
          (https://www.torproject.org).

     ‘config-file’ (Vorgabe: ‘(plain-file "empty" "")’)
          Die Konfigurationsdatei, die benutzt werden soll. Sie wird an
          eine vorgegebene Konfigurationsdatei angehängt und die sich
          daraus ergebende Konfigurationsdatei wird dann an ‘tor’ über
          dessen Befehlszeilenoption ‘-f’ übergeben. Hier kann jedes
          „dateiartige“ Objekt (siehe *note dateiartige Objekte:
          G-Ausdrücke.) angegeben werden. Siehe ‘man tor’ für Details
          zur Syntax der Konfigurationsdatei.

     ‘hidden-services’ (Vorgabe: ‘'()’)
          Die Liste der zu benutzenden „versteckten Dienste“ als
          ‘<hidden-service>’-Verbundsobjekte. Für jeden versteckten
          Dienst, den Sie in dieser Liste eintragen, werden automatisch
          entsprechende Einstellungen zur vorgefertigten
          Konfigurationsdatei hinzugefügt. Sie können
          ‘<hidden-service>’-Verbundsobjekte bequem mit der unten
          beschriebenen Prozedur ‘tor-hidden-service’ erzeugen lassen.

     ‘socks-socket-type’ (Vorgabe: ‘'tcp’)
          Welche Art von Socket Tor für seinen SOCKS-Socket in der
          Voreinstellung benutzen soll. Dafür muss entweder ‘'tcp’ oder
          ‘'unix’ angegeben werden. Für ‘'tcp’ wird Tor nach
          Voreinstellung auf dem TCP-Port 9050 auf der
          loopback-Schnittstelle (d.h. localhost) lauschen. Für ‘'unix’
          wird Tor auf dem UNIX-Socket ‘/var/run/tor/socks-sock’
          lauschen, auf den Mitglieder der ‘tor’-Benutzergruppe
          Schreibberechtigung erhalten.

          Wenn Sie detailliertere Anpassungen am SOCKS-Socket vornehmen
          wollen, belassen Sie ‘socks-socket-type’ bei seinem
          vorgegebenen Wert ‘'tcp’ und benutzen Sie ‘config-file’, um
          diese Voreinstellung mit Ihrer eigenen ‘SocksPort’-Option zu
          überspielen.

 -- Scheme-Prozedur: tor-hidden-service NAME ZUORDNUNG
     Hiermit wird ein neuer “versteckter Dienst” von Tor mit diesem
     NAMEn definiert, der die ZUORDNUNG herstellt. Die ZUORDNUNG ist
     eine Liste von Port-/Rechner-Tupeln wie hier:

           '((22 "127.0.0.1:22")
             (80 "127.0.0.1:8080"))

     In diesem Beispiel wird Port 22 des versteckten Dienstes an den ihm
     zugeordneten lokalen Port 22 weitergeleitet und Port 80 wird an den
     lokalen Port 8080 weitergeleitet.

     Dadurch wird ein Verzeichnis ‘/var/lib/tor/hidden-services/NAME’
     erstellt, worin sich in der Datei ‘hostname’ der
     ‘.onion’-Rechnername („Host“-Name) des versteckten Dienstes
     befindet.

     Siehe die Dokumentation des Tor-Projekts
     (https://www.torproject.org/docs/tor-hidden-service.html.en) für
     weitere Informationen.

   Das Modul ‘(gnu services rsync)’ bietet die folgenden Dienste an:

   Sie könnten einen rsync-Daemon einsetzen wollen, um Dateien verfügbar
zu machen, damit jeder (oder nur Sie) bestehende Dateien herunterladen
oder neue Dateien hochladen kann.

 -- Scheme-Variable: rsync-service-type
     Dies ist der Diensttyp für den rsync-Daemon
     (https://rsync.samba.org), er benutzt ein
     ‘rsync-configuration’-Verbundsobjekt wie in diesem Beispiel:

          (service rsync-service-type)

     Siehe unten für Details zur ‘rsync-configuration’.

 -- Datentyp: rsync-configuration
     Datentyp, der die Konfiguration für den ‘rsync-service’
     repräsentiert.

     ‘package’ (Vorgabe: RSYNC)
          Zu benutzendes ‘rsync’-Paket.

     ‘port-number’ (Vorgabe: ‘873’)
          Der TCP-Port, auf dem ‘rsync’ auf eingehende Verbindungen
          lauscht. Wenn die Portnummer kleiner als ‘1024’ ist, muss
          ‘rsync’ als Administratornutzer ‘root’ und auch mit dieser
          Benutzergruppe gestartet werden.

     ‘pid-file’ (Vorgabe: ‘"/var/run/rsyncd/rsyncd.pid"’)
          Der Name der Datei, in die ‘rsync’ seine PID schreibt.

     ‘lock-file’ (Vorgabe: ‘"/var/run/rsyncd/rsyncd.lock"’)
          Der Name der Datei, die ‘rsync’ als seine Sperrdatei
          verwendet.

     ‘log-file’ (Vorgabe: ‘"/var/log/rsyncd.log"’)
          Der Name der Datei, in die ‘rsync’ seine Protokolle schreibt.

     ‘use-chroot?’ (Vorgabe: #T)
          Ob chroot auf das über ‘rsync’ geteilte Verzeichnis angewandt
          werden soll.

     ‘share-path’ (Vorgabe: ‘/srv/rsync’)
          Der Ort des Verzeichnisses, das ‘rsync’ teilt, d.h. seine
          „Shared Directory“.

     ‘share-comment’ (Vorgabe: ‘"Rsync share"’)
          Kommentar zum von ‘rsync’ geteilten Verzeichnis.

     ‘read-only?’ (Vorgabe: #F)
          Bestimmt die Lese- und Schreibberechtigungen für das
          gemeinsame Verzeichnis.

     ‘timeout’ (Vorgabe: ‘300’)
          Ein-/Ausgabe-Zeitbeschränkung in Sekunden.

     ‘user’ (Vorgabe: "ROOT")
          Das Benutzerkonto, dem der ‘rsync’-Prozess gehören soll.

     ‘group’ (Vorgabe: "ROOT")
          Die Benutzergruppe des ‘rsync’-Prozesses.

     ‘uid’ (Vorgabe: "RSYNCD")
          Der Benutzername oder der Benutzeridentifikator (d.h. die
          „User-ID“), mit dem Dateiübertragungen zum und vom Modul
          stattfinden sollen, wenn der Daemon als Administratornutzer
          ‘root’ läuft.

     ‘gid’ (Vorgabe: "RSYNCD")
          Benutzergruppenname oder Gruppenidentifikator („Group-ID“),
          mit dem auf das Modul zugegriffen wird.

   Des Weiteren bietet das Modul ‘(gnu services ssh)’ die folgenden
Dienste an.

 -- Scheme-Prozedur: lsh-service [#:host-key "/etc/lsh/host-key"]
          [#:daemonic? #t] [#:interfaces '()] [#:port-number 22]
          [#:allow-empty-passwords? #f] [#:root-login? #f]
           [#:syslog-output? #t]
     [#:x11-forwarding? #t]  [#:tcp/ip-forwarding? #t]
     [#:password-authentication? #t]  [#:public-key-authentication? #t]
     [#:initialize? #t] Das ‘lshd’-Programm auf dem LSH-Paket so
     ausführen, dass es auf dem Port mit Portnummer PORT-NUMBER lauscht.
     HOST-KEY muss eine Datei angeben, die den Wirtsschlüssel enthält,
     die nur für den Administratornutzer lesbar sein darf.

     Wenn DAEMONIC? wahr ist, entkoppelt sich ‘lshd’ vom Terminal, auf
     dem er läuft, und schickt seine Protokolle an syslogd, außer
     SYSLOG-OUTPUT? ist auf falsch gesetzt. Selbstverständlich hängt der
     lsh-service dann auch von der Existenz eines syslogd-Dienstes ab.
     Wenn PID-FILE? wahr ist, schreibt ‘lshd’ seine PID in die Datei
     namens PID-FILE.

     Wenn INITIALIZE? wahr ist, wird der Startwert zur Verschlüsselung
     ebenso wie der Wirtsschlüssel bei der Dienstaktivierung erstellt,
     falls sie noch nicht existieren. Das kann lange dauern und
     Anwenderinteraktion kann dabei erforderlich sein.

     Wenn INITIALIZE? falsch ist, bleibt es dem Nutzer überlassen, den
     Zufallsgenerator zu initialisieren (siehe *note
     (lsh)lsh-make-seed::) und ein Schlüsselpaar zu erzeugen, dessen
     privater Schlüssel in der mit HOST-KEY angegebenen Datei steht
     (siehe *note (lsh)lshd basics::).

     Wenn INTERFACES leer ist, lauscht lshd an allen
     Netzwerkschnittstellen auf Verbindungen, andernfalls muss
     INTERFACES eine Liste von Rechnernamen („Host“-Namen) oder Adressen
     bezeichnen.

     ALLOW-EMPTY-PASSWORDS? gibt an, ob Anmeldungen mit leeren
     Passwörtern akzeptiert werden sollen, und ROOT-LOGIN? gibt an, ob
     Anmeldungen als Administratornutzer „root“ akzeptiert werden
     sollen.

     Die anderen Felder sollten selbsterklärend sein.

 -- Scheme-Variable: openssh-service-type
     Dies ist der Diensttyp für den OpenSSH-Secure-Shell-Daemon
     (http://www.openssh.org), ‘sshd’. Sein Wert muss ein
     ‘openssh-configuration’-Verbundsobjekt wie in diesem Beispiel sein:

          (service openssh-service-type
                   (openssh-configuration
                     (x11-forwarding? #t)
                     (permit-root-login 'without-password)
                     (authorized-keys
                       `(("alice" ,(local-file "alice.pub"))
                         ("bob" ,(local-file "bob.pub"))))))

     Siehe unten für Details zur ‘openssh-configuration’.

     Dieser Dienst kann mit weiteren autorisierten Schlüsseln erweitert
     werden, wie in diesem Beispiel:

          (service-extension openssh-service-type
                             (const `(("charlie"
                                       ,(local-file "charlie.pub")))))

 -- Datentyp: openssh-configuration
     Dies ist der Verbundstyp für die Konfiguration von OpenSSHs ‘sshd’.

     ‘pid-file’ (Vorgabe: ‘"/var/run/sshd.pid"’)
          Der Name der Datei, in die ‘sshd’ seine PID schreibt.

     ‘port-number’ (Vorgabe: ‘22’)
          Der TCP-Port, auf dem ‘sshd’ auf eingehende Verbindungen
          lauscht.

     ‘permit-root-login’ (Vorgabe: ‘#f’)
          Dieses Feld bestimmt, ob und wann Anmeldungen als
          Administratornutzer „root“ erlaubt sind. Wenn es ‘#f’ ist,
          sind Anmeldungen als Administrator gesperrt, bei ‘#t’ sind sie
          erlaubt. Wird hier das Symbol ‘'without-password’ angegeben,
          dann sind Anmeldungen als Administrator erlaubt, aber nur,
          wenn keine passwortbasierte Authentifizierung verwendet wird.

     ‘allow-empty-passwords?’ (Vorgabe: ‘#f’)
          Wenn dies auf wahr gesetzt ist, können sich Nutzer, deren
          Passwort leer ist, anmelden. Ist es falsch, können sie es
          nicht.

     ‘password-authentication?’ (Vorgabe: ‘#t’)
          Wenn dies wahr ist, können sich Benutzer mit ihrem Passwort
          anmelden. Wenn es falsch ist, müssen sie andere
          Authentisierungsmethoden benutzen.

     ‘public-key-authentication?’ (Vorgabe: ‘#t’)
          Wenn dies wahr ist, können Benutzer zur Anmeldung mit ihrem
          öffentlichen Schlüssel authentifiziert werden. Wenn es falsch
          ist, müssen sie andere Authentisierungsmethoden benutzen.

          Autorisierte öffentliche Schlüssel werden in
          ‘~/.ssh/authorized_keys’ gespeichert. Dies wird nur für
          Protokollversion 2 benutzt.

     ‘x11-forwarding?’ (Vorgabe: ‘#f’)
          Wenn dies auf wahr gesetzt ist, ist das Weiterleiten von
          Verbindungen an grafische X11-Clients erlaubt — mit anderen
          Worten funktionieren dann die ‘ssh’-Befehlszeilenoptionen ‘-X’
          und ‘-Y’.

     ‘allow-agent-forwarding?’ (Vorgabe: ‘#t’)
          Ob Weiterleitung an den SSH-Agenten zugelassen werden soll.

     ‘allow-tcp-forwarding?’ (Vorgabe: ‘#t’)
          Ob Weiterleitung von TCP-Kommunikation zugelassen werden soll.

     ‘gateway-ports?’ (Vorgabe: ‘#f’)
          Ob Ports als Zugang für eingehende Verbindungen
          („Gateway-Ports“) weitergeleitet werden dürfen.

     ‘challenge-response-authentication?’ (Vorgabe: ‘#f’)
          Gibt an, ob „Challenge-Response“-Authentifizierung zugelassen
          wird (z.B. über PAM).

     ‘use-pam?’ (Vorgabe: ‘#t’)
          Aktiviert die Pluggable-Authentication-Module-Schnittstelle.
          Wenn es auf ‘#t’ gesetzt ist, wird dadurch PAM-Authentisierung
          über ‘challenge-response-authentication?’ und
          ‘password-authentication?’ aktiviert, zusätzlich zur
          Verarbeitung von PAM-Konten und Sitzungsmodulen für alle
          Authentisierungsarten.

          Weil PAM-Challenge-Response-Authentisierung oft für dieselben
          Zwecke wie Passwortauthentisierung eingesetzt wird, sollten
          Sie entweder ‘challenge-response-authentication?’ oder
          ‘password-authentication?’ deaktivieren.

     ‘print-last-log?’ (Vorgabe: ‘#t’)
          Hiermit wird angegeben, ob ‘sshd’ Datum und Uhrzeit der
          letzten Anmeldung anzeigen soll, wenn sich ein Benutzer
          interaktiv anmeldet.

     ‘subsystems’ (Vorgabe: ‘'(("sftp" "internal-sftp"))’)
          Hiermit werden externe Subsysteme konfiguriert (z.B. ein
          Dateiübertragungsdaemon).

          Diese werden als Liste von zweielementigen Listen angegeben,
          von denen jede den Namen des Subsystems und einen Befehl (mit
          optionalen Befehlszeilenargumenten) benennt, der bei einer
          Anfrage an das Subsystem ausgeführt werden soll.

          The command ‘internal-sftp’ implements an in-process SFTP
          server. Alternatively, one can specify the ‘sftp-server’
          command:
               (service openssh-service-type
                        (openssh-configuration
                         (subsystems
                          `(("sftp" ,(file-append openssh "/libexec/sftp-server"))))))

     ‘accepted-environment’ (Vorgabe: ‘'()’)
          Eine Liste von Zeichenketten, die die Umgebungsvariablen
          benennen, die exportiert werden dürfen.

          Jede Zeichenkette wird zu einer eigenen Zeile in der
          Konfigurationsdatei. Siehe die Option ‘AcceptEnv’ in ‘man
          sshd_config’.

          This example allows ssh-clients to export the ‘COLORTERM’
          variable. It is set by terminal emulators, which support
          colors. You can use it in your shell’s resource file to enable
          colors for the prompt and commands if this variable is set.

               (service openssh-service-type
                        (openssh-configuration
                          (accepted-environment '("COLORTERM"))))

     ‘authorized-keys’ (Vorgabe: ‘'()’)
          Dies ist die Liste der autorisierten Schlüssel. Jedes Element
          der Liste ist ein Benutzername gefolgt von einem oder mehr
          dateiartigen Objekten, die öffentliche SSH-Schlüssel
          repräsentieren. Zum Beispiel werden mit

               (openssh-configuration
                 (authorized-keys
                   `(("rekado" ,(local-file "rekado.pub"))
                     ("chris" ,(local-file "chris.pub"))
                     ("root" ,(local-file "rekado.pub") ,(local-file "chris.pub")))))

          die angegebenen öffentlichen Schlüssel für die Benutzerkonten
          ‘rekado’, ‘chris’ und ‘root’ registriert.

          Weitere autorisierte Schlüssel können als ‘service-extension’
          hinzugefügt werden.

          Beachten Sie, dass das hier neben ‘~/.ssh/authorized_keys’
          _ohne_ sich zu stören benutzt werden kann.

     ‘log-level’ (Vorgabe: ‘'info’)
          Dieses Symbol gibt die Stufe der Protokollierung an: ‘quiet’
          (schweigsam), ‘fatal’, ‘error’, ‘info’, ‘verbose’
          (ausführlich), ‘debug’ (Fehlersuche) etc. Siehe die
          Handbuchseite für ‘sshd_config’ für die vollständige Liste der
          Stufenbezeichnungen.

     ‘extra-content’ (Vorgabe: ‘""’)
          Dieses Feld kann benutzt werden, um beliebigen Text an die
          Konfigurationsdatei anzuhängen. Es ist besonders bei
          ausgeklügelten Konfigurationen nützlich, die anders nicht
          ausgedrückt werden können. Zum Beispiel würden mit dieser
          Konfiguration Anmeldungen als Administratornutzer „root“
          grundsätzlich untersagt, lediglich für eine bestimmte
          IP-Adresse wären sie zugelassen:

               (openssh-configuration
                 (extra-content "\
               Match Address 192.168.0.1
                 PermitRootLogin yes"))

 -- Scheme-Prozedur: dropbear-service [KONFIGURATION]
     Den Dropbear-SSH-Daemon
     (https://matt.ucc.asn.au/dropbear/dropbear.html) mit der
     angegebenen KONFIGURATION ausführen, einem
     ‘<dropbear-configuration>’-Objekt.

     Wenn Sie zum Beispiel einen Dropbear-Dienst angeben möchten, der
     auf Port 1234 lauscht, dann fügen Sie diesen Aufruf ins
     ‘services’-Feld des Betriebssystems ein:

          (dropbear-service (dropbear-configuration
                              (port-number 1234)))

 -- Datentyp: dropbear-configuration
     Dieser Datentyp repräsentiert die Konfiguration eines
     Dropbear-SSH-Daemons.

     ‘dropbear’ (Vorgabe: DROPBEAR)
          Das zu benutzende Dropbear-Paket.

     ‘port-number’ (Vorgabe: 22)
          Die Portnummer des TCP-Ports, auf dem der Daemon auf
          eingehende Verbindungen wartet.

     ‘syslog-output?’ (Vorgabe: ‘#t’)
          Ob eine Ausgabe für Syslog aktiviert sein soll.

     ‘pid-file’ (Vorgabe: ‘"/var/run/dropbear.pid"’)
          Der Dateiname der PID-Datei des Daemons.

     ‘root-login?’ (Vorgabe: ‘#f’)
          Ob Anmeldungen als Administratornutzer ‘root’ möglich sein
          sollen.

     ‘allow-empty-passwords?’ (Vorgabe: ‘#f’)
          Ob leere Passwörter zugelassen sein sollen.

     ‘password-authentication?’ (Vorgabe: ‘#t’)
          Ob passwortbasierte Authentisierung zugelassen sein soll.

 -- Scheme Variable: autossh-service-type
     This is the type for the AutoSSH
     (https://www.harding.motd.ca/autossh) program that runs a copy of
     ‘ssh’ and monitors it, restarting it as necessary should it die or
     stop passing traffic. AutoSSH can be run manually from the
     command-line by passing arguments to the binary ‘autossh’ from the
     package ‘autossh’, but it can also be run as a Guix service. This
     latter use case is documented here.

     AutoSSH can be used to forward local traffic to a remote machine
     using an SSH tunnel, and it respects the ‘~/.ssh/config’ of the
     user it is run as.

     For example, to specify a service running autossh as the user
     ‘pino’ and forwarding all local connections to port ‘8081’ to
     ‘remote:8081’ using an SSH tunnel, add this call to the operating
     system’s ‘services’ field:

          (service autossh-service-type
                   (autossh-configuration
                    (user "pino")
                    (ssh-options (list "-T" "-N" "-L" "8081:localhost:8081" "remote.net"))))

 -- Data Type: autossh-configuration
     This data type represents the configuration of an AutoSSH service.

     ‘user’ (default ‘"autossh"’)
          The user as which the AutoSSH service is to be run. This
          assumes that the specified user exists.

     ‘poll’ (default ‘600’)
          Specifies the connection poll time in seconds.

     ‘first-poll’ (default ‘#f’)
          Specifies how many seconds AutoSSH waits before the first
          connection test. After this first test, polling is resumed at
          the pace defined in ‘poll’. When set to ‘#f’, the first poll
          is not treated specially and will also use the connection poll
          specified in ‘poll’.

     ‘gate-time’ (default ‘30’)
          Specifies how many seconds an SSH connection must be active
          before it is considered successful.

     ‘log-level’ (default ‘1’)
          The log level, corresponding to the levels used by syslog—so
          ‘0’ is the most silent while ‘7’ is the chattiest.

     ‘max-start’ (default ‘#f’)
          The maximum number of times SSH may be (re)started before
          AutoSSH exits. When set to ‘#f’, no maximum is configured and
          AutoSSH may restart indefinitely.

     ‘message’ (default ‘""’)
          The message to append to the echo message sent when testing
          connections.

     ‘port’ (default ‘"0"’)
          The ports used for monitoring the connection. When set to
          ‘"0"’, monitoring is disabled. When set to ‘"N"’ where N is a
          positive integer, ports N and N+1 are used for monitoring the
          connection, such that port N is the base monitoring port and
          ‘n+1’ is the echo port. When set to ‘"N:M"’ where N and M are
          positive integers, the ports N and N+1 are used for monitoring
          the connection, such that port N is the base monitoring port
          and M is the echo port.

     ‘ssh-options’ (default ‘'()’)
          The list of command-line arguments to pass to ‘ssh’ when it is
          run. Options ‘-f’ and ‘-M’ are reserved for AutoSSH and may
          cause undefined behaviour.

 -- Scheme-Variable: %facebook-host-aliases
     Diese Variable enthält eine Zeichenkette, die Sie für ‘/etc/hosts’
     benutzen können (siehe *note (libc)Host Names::). Jede Zeile
     enthält einen Eintrag, der einen bekannten Servernamen des
     Facebook-Online-Dienstes — z.B. ‘www.facebook.com’ — an den lokalen
     Rechner umleitet — also an ‘127.0.0.1’ oder dessen IPv6-Gegenstück
     ‘::1’.

     Normalerweise wird diese Variable im Feld ‘hosts-file’ einer
     ‘operating-system’-Betriebssystemdeklaration benutzt (siehe *note
     ‘/etc/hosts’: „operating-system“-Referenz.):

          (use-modules (gnu) (guix))

          (operating-system
            (host-name "mymachine")
            ;; …
            (hosts-file
              ;; Eine /etc/hosts-Datei, mit der "localhost" und
              ;; "mymachine" als Alias-Namen eingerichtet werden
              ;; und für die Facebook-Servernamen stattdessen
              ;; Alias-Namen benutzt werden.
              (plain-file "hosts"
                          (string-append (local-host-aliases host-name)
                                         %facebook-host-aliases))))

     Dieser Mechanismus kann verhindern, dass lokal laufende Programme,
     wie z.B. Web-Browser, auf Facebook zugreifen.

   Das Modul ‘(gnu services avahi)’ stellt die folgende Definition zur
Verfügung.

 -- Scheme-Variable: avahi-service-type
     Dieser Dienst führt den ‘avahi-daemon’ aus, einen systemweiten
     mDNS-/DNS-SD-Anbieter, mit dem im lokalen Netzwerk befindliche
     Geräte erkannt werden können („Service Discovery“) und Rechnernamen
     selbstständig aufgelöst werden können („Zero-Configuration“) (siehe
     <https://avahi.org/>). Sein Wert muss ein
     ‘zero-configuration’-Verbundsobjekt sein — siehe unten.

     Dieser Dienst erweitert den Name Service Cache Daemon (nscd), damit
     er ‘.local’-Rechnernamen mit nss-mdns
     (https://0pointer.de/lennart/projects/nss-mdns/) auflösen kann.
     Siehe *note Name Service Switch:: für Informationen zur Auflösung
     von Rechnernamen.

     Des Weiteren wird das AVAHI-Paket zum Systemprofil hinzugefügt,
     damit Befehle wie ‘avahi-browse’ einfach benutzt werden können.

 -- Datentyp: avahi-configuration
     Dieser Datentyp repräsentiert die Konfiguration von Avahi.

     ‘host-name’ (Vorgabe: ‘#f’)
          Wenn dies auf etwas anderes als ‘#f’ gesetzt ist, wird es
          anderen als Rechnername für diese Maschine mitgeteilt,
          andernfalls wird der tatsächliche Rechnername anderen
          mitgeteilt.

     ‘publish?’ (Vorgabe: ‘#t’)
          Wenn es auf wahr gesetzt ist, dürfen Rechnernamen und
          Avahi-Dienste über das Netzwerk mitgeteilt werden (als
          Broadcast).

     ‘publish-workstation?’ (Vorgabe: ‘#t’)
          Wenn es auf wahr gesetzt ist, teilt ‘avahi-daemon’ den
          Rechnernamen dieser Maschine und die IP-Adresse über mDNS auf
          dem lokalen Netzwerk öffentlich mit. Um die auf Ihrem lokalen
          Netzwerk mitgeteilten Rechnernamen zu sehen, können Sie das
          hier ausführen:

               avahi-browse _workstation._tcp

     ‘wide-area?’ (Vorgabe: ‘#f’)
          Wenn dies auf wahr gesetzt ist, ist DNS-SD über „Unicast DNS“
          aktiviert.

     ‘ipv4?’ (Vorgabe: ‘#t’)
     ‘ipv6?’ (Vorgabe: ‘#t’)
          Mit diesen Feldern wird festgelegt, ob IPv4-/IPv6-Sockets
          verwendet werden.

     ‘domains-to-browse’ (Vorgabe: ‘'()’)
          Dies ist eine Liste von Domänen, die durchsucht werden.

 -- Scheme-Variable: openvswitch-service-type
     Dies ist der Diensttyp des Open-vSwitch-Dienstes
     (https://www.openvswitch.org), der als Wert ein
     ‘openvswitch-configuration’-Objekt hat.

 -- Datentyp: openvswitch-configuration
     Der Datentyp, der die Konfiguration von Open vSwitch repräsentiert,
     einem auf mehreren Schichten arbeitenden („multilayer“) virtuellen
     Switch, der für massenhafte Netzwerkautomatisierung durch
     programmatische Erweiterungen eingesetzt werden kann.

     ‘package’ (Vorgabe: OPENVSWITCH)
          Das Paketobjekt vom Open vSwitch.

 -- Scheme-Variable: pagekite-service-type
     Dies ist der Diensttyp für den PageKite-Dienst
     (https://memcached.org/), einem Angebot zur getunnelten
     Netzwerkumleitung, womit bloß auf localhost lauschende Server
     öffentlich erreichbar gemacht werden können. Mit PageKite werden
     die Server für andere erreichbar, selbst wenn Ihre Maschine nur
     über eine restriktive Firewall oder eine Netzwerkadressübersetzung
     („Network Address Translation“, NAT) ohne Portweiterleitung mit dem
     Internet verbunden ist. Der Wert dieses Dienstes ist ein
     ‘pagekite-configuration’-Verbundsobjekt.

     Hier ist ein Beispiel, wodurch die lokal laufenden HTTP- und
     SSH-Daemons zugänglich gemacht werden:

          (service pagekite-service-type
                   (pagekite-configuration
                     (kites '("http:@kitename:localhost:80:@kitesecret"
                              "raw/22:@kitename:localhost:22:@kitesecret"))
                     (extra-file "/etc/pagekite.rc")))

 -- Datentyp: pagekite-configuration
     Der Datentyp, der die Konfiguration von PageKite repräsentiert.

     ‘package’ (Vorgabe: PAGEKITE)
          Paketobjekt von PageKite.

     ‘kitename’ (Vorgabe: ‘#f’)
          PageKite-Name, um sich gegenüber dem Vordergrundserver zu
          authentisieren.

     ‘kitesecret’ (Vorgabe: ‘#f’)
          Das gemeinsame Geheimnis, das eine Authentisierung gegenüber
          dem Vordergrundserver ermöglicht. Wahrscheinlich sollten Sie
          es besser als Teil von ‘extra-file’ angeben.

     ‘frontend’ (Vorgabe: ‘#f’)
          Eine Verbindung zum angegebenen PageKite-Vordergrundserver
          herstellen statt zu dem Dienst von pagekite.net.

     ‘kites’ (Vorgabe: ‘'("http:@kitename:localhost:80:@kitesecret")’)
          Die Liste der zu benutzenden „Kites“ für Dienste. Nach Vorgabe
          wird der HTTP-Server auf Port 80 nach außen hin zugänglich
          gemacht. Dienste sind im Format
          ‘protokoll:kitename:rechnername:port:geheimnis’ anzugeben.

     ‘extra-file’ (Vorgabe: ‘#f’)
          Eine Konfigurationsdatei, die zusätzlich eingelesen werden
          soll. Es wird erwartet, dass Sie diese manuell erstellen.
          Benutzen Sie sie, wenn Sie zusätzliche Optionen angeben
          möchten und um gemeinsame Geheimnisse abseits von Guix’
          Zuständigkeitsbereich zu verwalten.


File: guix.de.info,  Node: X Window,  Next: Druckdienste,  Prev: Netzwerkdienste,  Up: Dienste

8.8.5 X Window
--------------

Unterstützung für das grafische Anzeigesystem X Window — insbesondere
Xorg — wird vom Modul ‘(gnu services xorg)’ zur Verfügung gestellt.
Beachten Sie, dass es _keine_ ‘xorg-service’-Prozedur gibt, sondern der
X-Server durch eine Software zur “Anmeldeverwaltung” gestartet wird (ein
„Login Manager“). Vorgegeben ist, dass zur Anzeigenverwaltung der GNOME
Display Manager (GDM) benutzt wird.

   GDM ermöglicht es seinen Nutzern natürlich auch, sich bei anderen
Fensterverwaltungssystemen und Arbeitsumgebungen als GNOME anzumelden.
Wer GNOME benutzt, kann Funktionalitäten wie eine automatische
Bildschirmsperre nur verwenden, wenn die Anmeldung über GDM läuft.

   Um X11 zu benutzen, müssen Sie ein Programme zur “Fensterverwaltung”
(„Window-Manager“) oder mehrere davon installieren — zum Beispiel die
Pakete ‘windowmaker’ oder ‘openbox’ —, vorzugsweise indem Sie sie in das
‘packages’-Feld Ihrer Betriebssystemdefinition eintragen (siehe *note
system-wide packages: „operating-system“-Referenz.).

 -- Scheme-Variable: gdm-service-type
     This is the type for the GNOME Desktop Manager
     (https://wiki.gnome.org/Projects/GDM/) (GDM), a program that
     manages graphical display servers and handles graphical user
     logins. Its value must be a ‘gdm-configuration’ (see below).

     GDM liest die in den ‘.desktop’-Dateien in
     ‘/run/current-system/profile/share/xsessions’ befindlichen
     “Sitzungstypen” ein und stellt diese seinen Nutzern zur Auswahl auf
     dem Anmeldebildschirm. Pakete wie ‘gnome’, ‘xfce’ und ‘i3’ stellen
     ‘.desktop’-Dateien bereit; wenn diese Pakete zu den systemweit
     verfügbaren Paketen hinzugefügt werden, werden diese automatisch
     auf dem Anmeldebildschirm angezeigt.

     Des Weiteren werden ‘~/.xsession’-Dateien berücksichtigt. Wenn es
     vorhanden ist, muss ‘~/.xsession’ eine ausführbare Datei sein, die
     ein Programm zur Fensterverwaltung und/oder andere X-Clients
     startet.

 -- Datentyp: gdm-configuration
     ‘auto-login?’ (Vorgabe: ‘#f’)
     ‘default-user’ (Vorgabe: ‘#f’)
          Wenn ‘auto-login?’ falsch ist, zeigt GDM einen
          Anmeldebildschirm an.

          Wenn ‘auto-login?’ wahr ist, meldet GDM automatisch den in
          ‘default-user’ angegebenen voreingestellten Benutzer an.

     ‘debug?’ (Vorgabe: ‘#f’)
          Wenn es wahr ist, schreibt GDM Informationen zur Fehlersuche
          in sein Protokoll.

     ‘gnome-shell-assets’ (Vorgabe: …)
          Liste der GNOME-Shell-„Assets“, die GDM benötigt, d.h.
          Symbolthema, Schriftarten etc.

     ‘xorg-configuration’ (Vorgabe: ‘(xorg-configuration)’)
          Xorg-Server für grafische Oberflächen konfigurieren.

     ‘xsession’ (Vorgabe: ‘(xinitrc)’)
          Das Skript, das vor dem Starten einer X-Sitzung ausgeführt
          werden soll.

     ‘dbus-daemon’ (Vorgabe: ‘dbus-daemon-wrapper’)
          Der Dateiname der ausführbaren Datei des
          ‘dbus-daemon’-Programms.

     ‘gdm’ (Vorgabe: ‘gdm’)
          Das GDM-Paket, was benutzt werden soll.

 -- Scheme-Variable: slim-service-type
     Dies ist der Diensttyp für die schlanke grafische
     Anmeldungsverwaltung SLiM für X11.

     Wie GDM liest SLiM die in ‘.desktop’-Dateien beschriebenen
     Sitzungstypen aus und ermöglicht es Nutzern, eine Sitzung darunter
     im Anmeldebildschirm durch Drücken von ‘F1’ auszuwählen. Auch
     ‘~/.xsession’-Dateien können benutzt werden.

     Anders als GDM wird durch SLiM die Benutzersitzung nicht auf einem
     anderen virtuellen Terminal gestartet, nachdem man sich anmeldet.
     Die Folge davon ist, dass man nur eine einzige grafische Sitzung
     starten kann. Wenn Sie mehrere, gleichzeitig laufende grafische
     Sitzungen starten können möchten, müssen Sie mehrere SLiM-Dienste
     zu ihren Systemdiensten hinzufügen. Das folgende Beispiel zeigt,
     wie Sie den vorgegebenen GDM-Dienst durch zwei SLiM-Dienste auf
     tty7 und tty8 ersetzen.

          (use-modules (gnu services)
                       (gnu services desktop)
                       (gnu services xorg)
                       (srfi srfi-1))  ;für 'remove'

          (operating-system
            ;; ...
            (services (cons* (service slim-service-type (slim-configuration
                                                         (display ":0")
                                                         (vt "vt7")))
                             (service slim-service-type (slim-configuration
                                                         (display ":1")
                                                         (vt "vt8")))
                             (remove (lambda (service)
                                       (eq? (service-kind service) gdm-service-type))
                                     %desktop-services))))

 -- Datentyp: slim-configuration
     Datentyp, der die Konfiguration des ‘slim-service-type’
     repräsentiert.

     ‘allow-empty-passwords?’ (Vorgabe: ‘#t’)
          Ob Anmeldungen mit leeren Passwörtern möglich sein sollen.

     ‘auto-login?’ (Vorgabe: ‘#f’)
     ‘default-user’ (Vorgabe: ‘""’)
          Wenn ‘auto-login?’ falsch ist, zeigt SLiM einen
          Anmeldebildschirm an.

          Wenn ‘auto-login?’ wahr ist, meldet SLiM automatisch den in
          ‘default-user’ angegebenen voreingestellten Benutzer an.

     ‘theme’ (Vorgabe: ‘%default-slim-theme’)
     ‘theme-name’ (Vorgabe: ‘%default-slim-theme-name’)
          Das grafische Thema, was benutzt werden soll, mit seinem
          Namen.

     ‘auto-login-session’ (Vorgabe: ‘#f’)
          Wenn es wahr ist, muss es den Namen der ausführbaren Datei
          angeben, die als voreingestellte Sitzung gestartet werden soll
          — z.B. ‘(file-append windowmaker "/bin/windowmaker")’.

          Wenn es falsch ist, wird eine von einer der ‘.desktop’-Dateien
          in ‘/run/current-system/profile’ und ‘~/.guix-profile’
          beschriebenen Sitzungen benutzt.

               Anmerkung: Sie müssen mindestens ein
               Fensterverwaltungsprogramm in das Systemprofil oder Ihr
               Benutzerprofil installieren, ansonsten können Sie sich,
               sofern ‘auto-login-session’ falsch ist, nicht anmelden.

     ‘xorg-configuration’ (Vorgabe: ‘(xorg-configuration)’)
          Xorg-Server für grafische Oberflächen konfigurieren.

     ‘display’ (Vorgabe: ‘":0"’)
          Die Anzeige, auf welcher der Xorg-Server für grafische
          Oberflächen gestartet werden soll.

     ‘vt’ (Vorgabe: ‘"vt7"’)
          Das virtuelle Terminal, auf dem der Xorg-Server für grafische
          Oberflächen gestartet werden soll.

     ‘xauth’ (Vorgabe: ‘xauth’)
          Das XAuth-Paket, das benutzt werden soll.

     ‘shepherd’ (Vorgabe: ‘shepherd’)
          Das Shepherd-Paket, das benutzt wird, wenn ‘halt’ und ‘reboot’
          aufgerufen werden.

     ‘sessreg’ (Vorgabe: ‘sessreg’)
          Das sessreg-Paket, das zum Registrieren der Sitzung benutzt
          werden soll.

     ‘slim’ (Vorgabe: ‘slim’)
          Das zu benutzende SLiM-Paket.

 -- Scheme-Variable: %default-theme
 -- Scheme-Variable: %default-theme-name
     Das vorgegebene Thema für das Aussehen von SLiM mit seinem Namen.

 -- Datentyp: sddm-configuration
     This is the data type representing the SDDM service configuration.

     ‘display-server’ (Vorgabe: "x11")
          Select display server to use for the greeter. Valid values are
          ‘"x11"’ or ‘"wayland"’.

     ‘numlock’ (Vorgabe: "on")
          Valid values are ‘"on"’, ‘"off"’ or ‘"none"’.

     ‘halt-command’ (Vorgabe: ‘#~(string-apppend #$shepherd "/sbin/halt")’)
          Der Befehl, der zum Anhalten des Systems ausgeführt wird.

     ‘reboot-command’ (Vorgabe: ‘#~(string-append #$shepherd "/sbin/reboot")’)
          Der Befehl, der zum Neustarten des Systems ausgeführt wird.

     ‘theme’ (Vorgabe: "maldives")
          Theme to use. Default themes provided by SDDM are ‘"elarun"’,
          ‘"maldives"’ or ‘"maya"’.

     ‘themes-directory’ (Vorgabe: "/run/current-system/profile/share/sddm/themes")
          Verzeichnis, wo Themen gefunden werden können.

     ‘faces-directory’ (Vorgabe: "/run/current-system/profile/share/sddm/faces")
          Verzeichnis, wo Avatarbilder gefunden werden können.<

     ‘default-path’ (Vorgabe: "/run/current-system/profile/bin")
          Welcher PATH voreingestellt sein soll.

     ‘minimum-uid’ (Vorgabe: 1000)
          Der kleinste Benutzeridentifikator (UID), mit dem Benutzer in
          SDDM angezeigt werden und sich anmelden können.

     ‘maximum-uid’ (Vorgabe: 2000)
          Der größte Benutzeridentifikator (UID), mit dem Benutzer in
          SDDM angezeigt werden.<

     ‘remember-last-user?’ (Vorgabe: #t)
          Den zuletzt ausgewählten Benutzer voreinstellen.

     ‘remember-last-session?’ (Vorgabe: #t)
          Die zuletzt ausgewählte Sitzung voreinstellen.

     ‘hide-users’ (Vorgabe: "")
          Benutzernamen, die in SDDM _nicht_ sichtbar sein sollen.

     ‘hide-shells’ (Vorgabe: ‘#~(string-append #$shadow "/sbin/nologin")’)
          Benutzerkonten, für die als Shell eine davon eingestellt ist,
          wird SDDM _nicht_ anzeigen.

     ‘session-command’ (Vorgabe: ‘#~(string-append #$sddm "/share/sddm/scripts/wayland-session")’)
          Das Skript, das vor dem Starten einer Wayland-Sitzung
          ausgeführt werden soll.

     ‘sessions-directory’ (Vorgabe: "/run/current-system/profile/share/wayland-sessions")
          Verzeichnis, das nach .desktop-Dateien zum Starten von
          Wayland-Sitzungen durchsucht wird.

     ‘xorg-configuration’ (Vorgabe: ‘(xorg-configuration)’)
          Xorg-Server für grafische Oberflächen konfigurieren.

     ‘xauth-path’ (Vorgabe: ‘#~(string-append #$xauth "/bin/xauth")’)
          Pfad von xauth.

     ‘xephyr-path’ (Vorgabe: ‘#~(string-append #$xorg-server "/bin/Xephyr")’)
          Pfad von Xephyr.

     ‘xdisplay-start’ (Vorgabe: ‘#~(string-append #$sddm "/share/sddm/scripts/Xsetup")’)
          Skript, das nach dem Starten vom Xorg-Server ausgeführt wird.

     ‘xdisplay-stop’ (Vorgabe: ‘#~(string-append #$sddm "/share/sddm/scripts/Xstop")’)
          Skript, das vor dem Stoppen vom Xorg-Server ausgeführt wird.

     ‘xsession-command’ (Vorgabe: ‘xinitrc’)
          Das Skript, das vor dem Starten einer X-Sitzung ausgeführt
          werden soll.

     ‘xsessions-directory’ (Vorgabe: "/run/current-system/profile/share/xsessions")
          Verzeichnis, das nach .desktop-Dateien zum Starten von
          X-Sitzungen durchsucht wird.<

     ‘minimum-vt’ (Vorgabe: 7)
          Das kleinste virtuelle Terminal, das benutzt werden darf.

     ‘auto-login-user’ (Vorgabe: "")
          Benutzer, der bei automatischer Anmeldung angemeldet wird.

     ‘auto-login-session’ (Vorgabe: "")
          Desktop-Datei für die automatische Anmeldung.

     ‘relogin?’ (Vorgabe: #f)
          Ob nach dem Abmelden neu angemeldet werden soll.

 -- Scheme-Variable: sddm-service-type
     Dies ist der Typ des Dienstes, mit dem der SDDM-Anzeigeserver
     (https://github.com/sddm/sddm) gestartet wird. Sein Wert muss ein
     ‘sddm-configuration’-Verbundsobjekt sein (siehe unten).

     Hier ist ein Beispiel für seine Verwendung:

          (service sddm-service-type
                   (sddm-configuration
                     (auto-login-user "alice")
                     (auto-login-session "xfce.desktop")))

 -- Datentyp: sddm-configuration
     Dieser Datentyp repräsentiert die Konfiguration der
     SDDM-Anmeldeverwaltung. Die verfügbaren Felder sind:

     ‘sddm’ (Vorgabe: ‘sddm’)
          Das SDDM-Paket, was benutzt werden soll.

     ‘display-server’ (Vorgabe: ‘"x11"’)
          Hier muss entweder ‘"x11"’ oder ‘"wayland"’ angegeben werden.

     ‘auto-login-user’ (Vorgabe: ‘""’)
          Wenn es nicht leer ist, enthält dieses Feld das Benutzerkonto,
          mit dem man automatisch angemeldet wird.

     ‘auto-login-session’ (Vorgabe: ‘""’)
          Wenn es nicht leer ist, gibt dieses Feld den Namen der
          ‘.desktop’-Datei an, die bei automatischer Anmeldung für die
          Sitzung verwendet wird.

 -- Datentyp: xorg-configuration
     Dieser Datentyp repräsentiert die Konfiguration des grafischen
     Anzeigeservers Xorg. Beachten Sie, dass es keinen Xorg-Dienst gibt,
     sondern der X-Server von einer „Anzeigenverwaltung“ wie GDM, SDDM
     oder SLiM gestartet wird. Deswegen wird aus der Konfiguration
     dieser Anzeigenverwaltungen ein ‘xorg-configuration’-Verbundsobjekt
     konstruiert.

     ‘modules’ (Vorgabe: ‘%default-xorg-modules’)
          Dies ist eine Liste von “Modulpaketen”, die vom Xorg-Server
          geladen werden — z.B. ‘xf86-video-vesa’, ‘xf86-input-keyboard’
          und so weiter.

     ‘fonts’ (Vorgabe: ‘%default-xorg-fonts’)
          Dies ist eine Liste von Verzeichnissen mit Schriftarten, die
          zum Schriftartensuchpfad („Font Path“) des Servers hinzugefügt
          werden.

     ‘drivers’ (Vorgabe: ‘'()’)
          Dies muss entweder die leere Liste sein — in diesem Fall wird
          durch Xorg automatisch ein Grafiktreiber ausgewählt — oder
          eine Liste von Treibernamen, die in dieser Reihenfolge
          durchprobiert werden — z.B. ‘("modesetting" "vesa")’.

     ‘resolutions’ (Vorgabe: ‘'()’)
          Wenn ‘resolutions’ die leere Liste ist, wird automatisch durch
          Xorg eine passende Bildschirmauflösung gewählt. Andernfalls
          muss hier eine Liste von Bildschirmauflösungen angegeben
          werden — z.B. ‘((1024 768) (640 480))’.

     ‘keyboard-layout’ (Vorgabe: ‘#f’)
          Wenn es auf ‘#f’ gesetzt ist, benutzt Xorg die voreingestellte
          Tastaturbelegung, also normalerweise US English („QWERTY“) für
          eine PC-Tastatur mit 105 Tasten.

          Andernfalls muss hier ein ‘keyboard-layout’-Objekt stehen, das
          angibt, welche Tastaturbelegung aktiv sein soll, während Xorg
          läuft. Siehe *note Tastaturbelegung:: für mehr Informationen,
          wie die Tastaturbelegung angegeben werden kann.

     ‘extra-config’ (Vorgabe: ‘'()’)
          Dies ist eine Liste von Zeichenketten oder Objekten, die an
          die Konfigurationsdatei angehängt werden. Mit ihnen wird
          zusätzlicher Text wortwörtlich zur Konfigurationsdatei
          hinzugefügt.

     ‘server’ (Vorgabe: ‘xorg-server’)
          Dieses Paket stellt den Xorg-Server zur Verfügung.

     ‘server-arguments’ (Vorgabe: ‘%default-xorg-server-arguments’)
          Dies ist die Liste der Befehlszeilenargumente, die an den
          X-Server übergeben werden. Die Vorgabe ist ‘-nolisten tcp’.

 -- Scheme-Prozedur: set-xorg-configuration KONFIGURATION
          [LOGIN-MANAGER-SERVICE-TYPE] Benennt, welche KONFIGURATION die
     Anmeldeverwaltung (vom Typ LOGIN-MANAGER-SERVICE-TYPE) benutzen
     soll, als ein ‘<xorg-configuration>’-Verbundsobjekt.

     Da die Xorg-Konfiguration in die Konfiguration der
     Anmeldeverwaltung eingebettet ist — z.B. in einer
     ‘gdm-configuration’ —, bietet diese Prozedur eine Kurzschreibweise
     zum Ändern der Xorg-Konfiguration.

 -- Scheme-Prozedur: xorg-start-command [KONFIGURATION]
     Hier wird ein ‘startx’-Skript geliefert, in welchem die Module,
     Schriftarten usw. verfügbar sind, die in der KONFIGURATION
     angegeben wurden. Das Ergebnis soll anstelle von ‘startx’ benutzt
     werden.

     Normalerweise wird der X-Server von der Anmeldeverwaltung
     gestartet.

 -- Scheme Procedure: screen-locker-service PAKET [PROGRAMM]
     Das PAKET zur Menge der setuid-Programme hinzufügen, worin sich ein
     Programm zum Sperren des Bildschirms oder ein Bildschirmschoner
     befinden muss, der mit dem Befehl PROGRAMM gestartet wird, und
     einen PAM-Eintrag dafür hinzufügen. Zum Beispiel macht

          (screen-locker-service xlockmore "xlock")

     das gute alte XlockMore benutzbar.


File: guix.de.info,  Node: Druckdienste,  Next: Desktop-Dienste,  Prev: X Window,  Up: Dienste

8.8.6 Druckdienste
------------------

Das Modul ‘(gnu services cups)’ stellt eine Guix-Dienstdefinition für
den CUPS-Druckdienst zur Verfügung. Wenn Sie Druckerunterstützung zu
einem Guix-System hinzufügen möchten, dann fügen Sie einen
‘cups-service’-Dienst in die Betriebssystemdefinition ein.

 -- Scheme-Variable: cups-service-type
     Der Diensttyp für den CUPS-Druckserver. Als Wert muss eine gültige
     CUPS-Konfiguration angegeben werden (siehe unten). Um die
     Voreinstellungen zu verwenden, schreiben Sie einfach nur:
          (service cups-service-type)

   Mit der CUPS-Konfiguration stellen Sie die grundlegenden Merkmale
Ihrer CUPS-Installation ein: Auf welcher Schnittstelle sie lauscht, wie
mit einem fehlgeschlagenen Druckauftrag umzugehen ist, wieviel in
Protokolle geschrieben werden soll und so weiter. Um einen Drucker
hinzuzufügen, müssen Sie jedoch die URL <http://localhost:631> besuchen
oder ein Werkzeug wie die Druckereinstellungsdienste von GNOME benutzen.
Die Vorgabe ist, dass beim Konfigurieren eines CUPS-Dienstes ein
selbstsigniertes Zertifikat erzeugt wird, um sichere Verbindungen mit
dem Druckserver zu ermöglichen.

   Nehmen wir an, Sie wollen die Weboberfläche von CUPS aktivieren und
Unterstützung für Epson-Drucker über das ‘escpr’-Paket und für
HP-Drucker über das ‘hplip-minimal’-Paket aktivieren. Sie können das auf
diese Weise gleich machen (dazu müssen Sie vorher angeben, dass das
Modul ‘(gnu packages cups)’ benutzt werden soll):

     (service cups-service-type
              (cups-configuration
                (web-interface? #t)
                (extensions
                  (list cups-filters escpr hplip-minimal))))

   Anmerkung: Wenn Sie die Qt5-basierte grafische Benutzeroberfläche
benutzen möchten, die dem hplip-Paket beiliegt, sollten Sie das
‘hplip’-Paket installieren, entweder in die Konfigurationsdatei Ihres
Betriebssystems oder für Ihr Benutzerkonto.

   Im Folgenden sehen Sie die verfügbaren Konfigurationsparameter. Vor
jeder Parameterdefinition wird ihr Typ angegeben, zum Beispiel steht
‘Zeichenketten-Liste foo’ für einen Parameter ‘foo’, der als Liste von
Zeichenketten angegeben werden muss. Sie können die Konfiguration aber
auch in einer einzigen Zeichenkette angeben, wenn Sie eine alte
‘cupsd.conf’-Datei von einem anderen System weiterbenutzen möchten;
siehe das Abschnittsende für mehr Details.

   Die verfügbaren ‘cups-configuration’-Felder sind:

 -- ‘cups-configuration’-Parameter: „package“ cups
     Das CUPS-Paket.

 -- ‘cups-configuration’-Parameter: „package“-Liste extensions
     Treiber und andere Erweiterungen für das CUPS-Paket.

 -- ‘cups-configuration’-Parameter: „files-configuration“
          files-configuration
     Konfiguration, wo Protokolle abgelegt werden sollen, welche
     Verzeichnisse für Druckspoolerwarteschlangen benutzt werden sollen
     und ähnliche Berechtigungen erfordernde Konfigurationsparameter.

     Verfügbare Felder einer ‘files-configuration’ sind:

      -- ‘files-configuration’-Parameter: Protokollpfad access-log
          Hiermit wird der Dateiname des Zugriffsprotokolls („Access
          Log“) festgelegt. Wenn ein leerer Name angegeben wird, wird
          kein Protokoll erzeugt. Der Wert ‘stderr’ lässt
          Protokolleinträge in die Standardfehlerdatei schreiben, wenn
          das Druckplanungsprogramm im Vordergrund läuft, oder an den
          Systemprotokolldaemon (also Syslog), wenn es im Hintergrund
          läuft. Der Wert ‘syslog’ bewirkt, dass Protokolleinträge an
          den Systemprotokolldaemon geschickt werden. Der Servername
          darf in Dateinamen als die Zeichenkette ‘%s’ angegeben werden,
          so kann etwa ‘/var/log/cups/%s-access_log’ angegeben werden.

          Die Vorgabe ist ‘"/var/log/cups/access_log"’.

      -- ‘files-configuration’-Parameter: Dateiname cache-dir
          Wo CUPS zwischengespeicherte Daten ablegen soll.

          Die Vorgabe ist ‘"/var/cache/cups"’.

      -- ‘files-configuration’-Parameter: Zeichenkette config-file-perm
          Gibt die Berechtigungen für alle Konfigurationsdateien an, die
          das Planungsprogramm schreibt.

          Beachten Sie, dass auf die Berechtigungen der Datei
          printers.conf eine Maske gelegt wird, wodurch Zugriffe nur
          durch das planende Benutzerkonto erlaubt werden (in der Regel
          der Administratornutzer „root“). Der Grund dafür ist, dass
          Druckergeräte-URIs manchmal sensible Authentisierungsdaten
          enthalten, die nicht allgemein auf dem System bekannt sein
          sollten. Es gibt keine Möglichkeit, diese Sicherheitsmaßnahme
          abzuschalten.

          Die Vorgabe ist ‘"0640"’.

      -- ‘files-configuration’-Parameter: Protokollpfad error-log
          Hiermit wird der Dateiname des Fehlerprotokolls („Error Log“)
          festgelegt. Wenn ein leerer Name angegeben wird, wird kein
          Fehlerprotokoll erzeugt. Der Wert ‘stderr’ lässt
          Protokolleinträge in die Standardfehlerdatei schreiben, wenn
          das Planungsprogramm im Vordergrund läuft, oder an den
          Systemprotokolldaemon (also Syslog), wenn es im Hintergrund
          läuft. Der Wert ‘syslog’ bewirkt, dass Protokolleinträge an
          den Systemprotokolldaemon geschickt werden. Der Servername
          darf in Dateinamen als die Zeichenkette ‘%s’ angegeben werden,
          so kann etwa ‘/var/log/cups/%s-error_log’ angegeben werden.

          Die Vorgabe ist ‘"/var/log/cups/error_log"’.

      -- ‘files-configuration’-Parameter: Zeichenkette fatal-errors
          Gibt an, bei welchen Fehlern das Druckplanungsprogramm
          terminieren soll. Die Zeichenketten für die Arten sind:

          ‘none’
               Keine Fehler führen zur Beendigung.

          ‘all’
               Jeder der im Folgenden aufgeführten Fehler terminiert den
               Druckplaner.

          ‘browse’
               Fehler bei der Suche während der Initialisierung
               terminieren den Druckplaner, zum Beispiel wenn keine
               Verbindung zum DNS-SD-Daemon aufgebaut werden kann.

          ‘config’
               Syntaxfehler in der Konfigurationsdatei terminieren den
               Druckplaner.

          ‘listen’
               Fehler beim Lauschen oder Portfehler (entsprechend der
               Direktiven „Listen“ oder „Port“) terminieren den
               Druckplaner; ausgenommen sind Fehler bei IPv6 auf
               Loopback- oder ‘any’-Adressen.

          ‘log’
               Fehler beim Erzeugen von Protokolldateien terminieren den
               Druckplaner.

          ‘permissions’
               Falsche Zugriffsberechtigungen auf zum Starten benötigten
               Dateien terminieren den Druckplaner, zum Beispiel wenn
               auf gemeinsame TLS-Zertifikats- und Schlüsseldateien von
               allen lesend zugegriffen werden kann.

          Die Vorgabe ist ‘"all -browse"’.

      -- ‘files-configuration’-Parameter: Boolescher-Ausdruck
               file-device?
          Gibt an, welches Pseudogerät für neue Druckerwarteschlangen
          benutzt werden kann. Die URI <file:///dev/null> wird immer
          zugelassen.

          Vorgegeben ist ‘#f’.

      -- ‘files-configuration’-Parameter: Zeichenkette group
          Gibt Namen oder Identifikator der Benutzergruppe an, die zum
          Ausführen von externen Programmen verwendet wird.

          Die Vorgabe ist ‘"lp"’.

      -- ‘files-configuration’-Parameter: Zeichenkette log-file-perm
          Gibt die Berechtigungen für alle Protokolldateien an, die das
          Planungsprogramm schreibt.

          Die Vorgabe ist ‘"0644"’.

      -- ‘files-configuration’-Parameter: log-location page-log
          Hiermit wird der Dateiname des Seitenprotokolls („Page Log“)
          festgelegt. Wenn ein leerer Name angegeben wird, wird kein
          Seitenprotokoll erzeugt. Der Wert ‘stderr’ lässt
          Protokolleinträge in die Standardfehlerdatei schreiben, wenn
          das Planungsprogramm im Vordergrund läuft, oder an den
          Systemprotokolldaemon (also Syslog), wenn es im Hintergrund
          läuft. Der Wert ‘syslog’ bewirkt, dass Protokolleinträge an
          den Systemprotokolldaemon geschickt werden. Der Servername
          darf in Dateinamen als die Zeichenkette ‘%s’ angegeben werden,
          so kann etwa ‘/var/log/cups/%s-page_log’ angegeben werden.

          Die Vorgabe ist ‘"/var/log/cups/page_log"’.

      -- ‘files-configuration’-Parameter: Zeichenkette remote-root
          Gibt den Benutzernamen an, der für unauthentifizierte Zugriffe
          durch Clients verwendet wird, die sich als der
          Administratornutzer „root“ anmelden. Vorgegeben ist ‘remroot’.

          Die Vorgabe ist ‘"remroot"’.

      -- ‘files-configuration’-Parameter: Dateiname request-root
          Gibt das Verzeichnis an, in dem Druckaufträge und andere Daten
          zu HTTP-Anfragen abgelegt werden.

          Die Vorgabe ist ‘"/var/spool/cups"’.

      -- ‘files-configuration’-Parameter: Isolierung sandboxing
          Gibt die Stufe der Sicherheitsisolierung („Sandboxing“) an,
          die auf Druckfilter, Hintergrundsysteme (Backends) und andere
          Kindprozesse des Planungsprogramms angewandt wird; entweder
          ‘relaxed’ („locker“) oder ‘strict’ („strikt“). Diese Direktive
          wird zur Zeit nur auf macOS benutzt/unterstützt.

          Die Vorgabe ist ‘strict’.

      -- ‘files-configuration’-Parameter: Dateiname server-keychain
          Specifies the location of TLS certificates and private keys.
          CUPS will look for public and private keys in this directory:
          ‘.crt’ files for PEM-encoded certificates and corresponding
          ‘.key’ files for PEM-encoded private keys.

          Die Vorgabe ist ‘"/etc/cups/ssl"’.

      -- ‘files-configuration’-Parameter: Dateiname server-root
          Gibt das Verzeichnis an, das die Serverkonfigurationsdateien
          enthält.

          Die Vorgabe ist ‘"/etc/cups"’.

      -- ‘files-configuration’-Parameter: Boolescher-Ausdruck
               sync-on-close?
          Gibt an, ob das Planungsprogramm fsync(2) aufrufen soll,
          nachdem es in Konfigurations- oder Zustandsdateien geschrieben
          hat.

          Vorgegeben ist ‘#f’.

      -- ‘files-configuration’-Parameter:
               Leerzeichengetrennte-Zeichenketten-Liste system-group
          Gibt die Benutzergruppe(n) an, die als die ‘@SYSTEM’-Gruppen
          für die Authentisierung benutzt werden können.

      -- ‘files-configuration’-Parameter: Dateiname temp-dir
          Gibt das Verzeichnis an, in das temporäre Dateien gespeichert
          werden.

          Die Vorgabe ist ‘"/var/spool/cups/tmp"’.

      -- ‘files-configuration’-Parameter: Zeichenkette user
          Gibt den Benutzernamen oder -identifikator an, mit dessen
          Benutzerkonto externe Programme ausgeführt werden.

          Die Vorgabe ist ‘"lp"’.

      -- ‘files-configuration’-Parameter: Zeichenkette set-env
          Legt die angegebene Umgebungsvariable auf einen Wert (englisch
          „Value“) fest, die an Kindprozesse übergeben wird.

          Die Vorgabe ist ‘"variable value"’.

 -- ‘cups-configuration’-Parameter: Zugriffsprotokollstufe
          access-log-level
     Gibt an, mit welcher Detailstufe das Protokoll in der
     AccessLog-Datei geführt wird. Bei der Stufe ‘config’ wird
     protokolliert, wenn Drucker und Klassen hinzugefügt, entfernt oder
     verändert werden, und wenn auf Konfigurationsdateien zugegriffen
     oder sie aktualisiert werden. Bei der Stufe ‘actions’ wird
     protokolliert, wenn Druckaufträge eingereicht, gehalten,
     freigegeben, geändert oder abgebrochen werden sowie alles, was bei
     ‘config’ Protokollierung auslöst. Bei der Stufe ‘all’ wird jede
     Anfrage protokolliert.

     Die Vorgabe ist ‘actions’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck auto-purge-jobs?
     Gibt an, ob Daten über den Auftragsverlauf automatisch gelöscht
     werden sollen, wenn Sie nicht mehr zur Berechnung von
     Druckkontingenten benötigt werden.

     Vorgegeben ist ‘#f’.

 -- ‘cups-configuration’-Parameter: Kommagetrennte-Zeichenketten-Liste
          browse-dns-sd-sub-types
     Gibt eine Liste von DNS-SD-Subtypen an, die anderen für jeden
     geteilten Drucker mitgeteilt werden sollen. Zum Beispiel wird bei
     ‘"_cups" "_print"’ den Netzwerk-Clients mitgeteilt, dass sowohl
     Teilen zwischen CUPS als auch IPP Everywhere unterstützt werden.

     Die Vorgabe ist ‘"_cups"’.

 -- ‘cups-configuration’-Parameter: Protokolle-zur-lokalen-Suche
          browse-local-protocols
     Gibt an, welche Protokolle zum lokalen Teilen („Freigeben“) von
     Druckern benutzt werden sollen.

     Die Vorgabe ist ‘dnssd’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck browse-web-if?
     Gibt an, ob die Weboberfläche von CUPS anderen mitgeteilt wird.

     Vorgegeben ist ‘#f’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck browsing?
     Gibt an, ob geteilte Drucker bei Druckersuchen mitgeteilt werden.

     Vorgegeben ist ‘#f’.

 -- ‘cups-configuration’-Parameter: Zeichenkette classification
     Specifies the security classification of the server. Any valid
     banner name can be used, including ‘"classified"’,
     ‘"confidential"’, ‘"secret"’, ‘"topsecret"’, and ‘"unclassified"’,
     or the banner can be omitted to disable secure printing functions.

     Die Vorgabe ist ‘""’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck
          classify-override?
     Gibt an, ob Nutzer bei einzelnen Druckaufträgen eine andere als die
     voreingestellte Geheimhaltungsstufe (für das Deckblatt) vorgeben
     können, indem sie die Option ‘job-sheets’ einstellen.

     Vorgegeben ist ‘#f’.

 -- ‘cups-configuration’-Parameter: Voreingestelle-Authentifizierungsart
          default-auth-type
     Gibt an, wie man nach Voreinstellung authentifiziert wird.

     Die Vorgabe ist ‘Basic’.

 -- ‘cups-configuration’-Parameter: Voreingestellte-Verschlüsselung
          default-encryption
     Gibt an, ob für authentifizierte Anfragen Verschlüsselung benutzt
     wird.

     Die Vorgabe ist ‘Required’.

 -- ‘cups-configuration’-Parameter: Zeichenkette default-language
     Gibt an, welche Sprache für Text und Weboberfläche voreingestellt
     benutzt werden soll.

     Die Vorgabe ist ‘"en"’.

 -- ‘cups-configuration’-Parameter: Zeichenkette default-paper-size
     Gibt das voreingestellte Papierformat für neue Druckwarteschlangen
     an. Bei ‘"Auto"’ wird eine der Locale entsprechende Voreinstellung
     gewählt, während bei ‘"None"’ kein Papierformat voreingestellt ist.
     Verfügbare Formatbezeichnungen sind typischerweise ‘"Letter"’ oder
     ‘"A4"’.

     Die Vorgabe ist ‘"Auto"’.

 -- ‘cups-configuration’-Parameter: Zeichenkette default-policy
     Gibt die voreingestellte Zugriffsrichtlinie an, die benutzt werden
     soll.

     Die Vorgabe ist ‘"default"’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck default-shared?
     Gibt an, ob lokale Drucker nach Voreinstellung geteilt werden
     sollen.

     Die Vorgabe ist ‘#t’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          dirty-clean-interval
     Gibt an, mit welcher Verzögerung Konfigurations- und
     Zustandsdateien aktualisiert werden sollen. Der Wert 0 lässt die
     Aktualisierung so bald wie möglich stattfinden, in der Regel nach
     ein paar Millisekunden.

     Die Vorgabe ist ‘30’.

 -- ‘cups-configuration’-Parameter: Fehlerrichtlinie error-policy
     Gibt an, wie beim Auftreten eines Fehlers verfahren werden soll.
     Mögliche Werte sind ‘abort-job’, wodurch der fehlgeschlagene
     Druckauftrag verworfen wird, ‘retry-job’, wodurch der Druckauftrag
     später erneut versucht wird, ‘retry-current-job’, wodurch der
     fehlgeschlagene Druckauftrag sofort erneut versucht wird, und
     ‘stop-printer’, wodurch der Drucker angehalten wird.

     Die Vorgabe ist ‘stop-printer’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          filter-limit
     Gibt die Maximalkosten von Filtern an, die nebenläufig ausgeführt
     werden, wodurch Probleme durch Platten-, Arbeitsspeicher- und
     Prozessorressourcennutzung minimiert werden können. Eine
     Beschränkung von 0 deaktiviert die Filterbeschränkung. Ein
     durchschnittlicher Druck mit einem Nicht-PostScript-Drucker
     erfordert eine Filterbeschränkung von mindestens ungefähr 200. Ein
     PostScript-Drucker erfordert eine halb so hohe Filterbeschränkung
     (100). Wird die Beschränkung unterhalb dieser Schwellwerte
     angesetzt, kann das Planungsprogramm effektiv nur noch einen
     einzelnen Druckauftrag gleichzeitig abarbeiten.

     Die Vorgabe ist ‘0’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl filter-nice
     Gibt die Planungspriorität von Filtern an, die zum Drucken eines
     Druckauftrags ausgeführt werden. Der nice-Wert kann zwischen 0, der
     höchsten Priorität, und 19, der niedrigsten Priorität, liegen.

     Die Vorgabe ist ‘0’.

 -- ‘cups-configuration’-Parameter: Rechnernamensauflösungen
          host-name-lookups
     Gibt an, ob inverse Namensauflösungen („Reverse Lookups“) bei sich
     verbindenden Clients durchgeführt werden sollen. Die Einstellung
     ‘double’ lässt ‘cupsd’ verifizieren, dass der anhand der Adresse
     aufgelöste Rechnername zu einer der für den Rechnernamen
     zurückgelieferten Adressen passt. „Double“-Namensauflösungen
     verhindern auch, dass sich Clients mit unregistrierten Adressen mit
     Ihrem Server verbinden können. Setzen Sie diese Option nur dann auf
     ‘#t’ oder ‘double’, wenn es unbedingt notwendig ist.

     Vorgegeben ist ‘#f’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          job-kill-delay
     Gibt die Anzahl an Sekunden an, wie lange vor dem Abwürgen der mit
     einem abgebrochenen oder gehaltenen Druckauftrag assoziierten
     Filter- und Hintergrundprozesse (dem „Backend“) gewartet wird.

     Die Vorgabe ist ‘30’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          job-retry-interval
     Gibt das Zeitintervall zwischen erneuten Versuchen von
     Druckaufträgen in Sekunden an. Dies wird in der Regel für
     Fax-Warteschlangen benutzt, kann aber auch für normale
     Druckwarteschlangen benutzt werden, deren Fehlerrichtlinie
     ‘retry-job’ oder ‘retry-current-job’ ist.

     Die Vorgabe ist ‘30’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          job-retry-limit
     Gibt die Anzahl an, wie oft ein Druckauftrag erneut versucht wird.
     Dies wird in der Regel für Fax-Warteschlangen benutzt, kann aber
     auch für normale Druckwarteschlangen benutzt werden, deren
     Fehlerrichtlinie ‘retry-job’ oder ‘retry-current-job’ ist.

     Die Vorgabe ist ‘5’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck keep-alive?
     Gibt an, ob HTTP-„keep-alive“ für Verbindungen unterstützt wird.

     Die Vorgabe ist ‘#t’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          keep-alive-timeout
     Gibt an, wie lange eine Clientverbindung ohne Aktivität offen
     bleibt, in Sekunden.

     Die Vorgabe ist ‘30’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          limit-request-body
     Gibt die Maximalgröße von zu druckenden Dateien, IPP-Anfragen und
     HTML-Formulardaten an. Eine Beschränkung von 0 deaktiviert die
     Beschränkung.

     Die Vorgabe ist ‘0’.

 -- ‘cups-configuration’-Parameter: Mehrzeilige-Zeichenketten-Liste
          listen
     Lauscht auf den angegebenen Schnittstellen auf Verbindungen.
     Gültige Werte haben die Form ADRESSE:PORT, wobei die ADRESSE
     entweder eine von eckigen Klammern umschlossene IPv6-Adresse, eine
     IPv4-Adresse oder ‘*’ ist; letztere steht für alle Adressen. Werte
     können auch Dateinamen lokaler UNIX-Sockets sein. Die
     Listen-Direktive ähnelt der Port-Direktive, macht es aber möglich,
     den Zugriff für bestimmte Schnittstellen oder Netzwerke
     einzuschränken.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          listen-back-log
     Gibt die Anzahl ausstehender Verbindungen an, die möglich sein
     soll. Normalerweise betrifft dies nur sehr ausgelastete Server, die
     die MaxClients-Beschränkung erreicht haben. Es kann aber auch eine
     Rolle spielen, wenn versucht wird, gleichzeitig sehr viele
     Verbindungen herzustellen. Wenn die Beschränkung erreicht wird,
     sperrt das Betriebssystem den Aufbau weiterer Verbindungen, bis das
     Druckplanungsprogramm die ausstehenden akzeptieren konnte.

     Die Vorgabe ist ‘128’.

 -- ‘cups-configuration’-Parameter: „location-access-controls“-Liste
          location-access-controls
     Gibt eine Liste zusätzlicher Zugriffssteuerungen („Access
     Controls“) an.

     Verfügbare ‘location-access-controls’-Felder sind:

      -- ‘location-access-controls’-Parameter: Dateiname path
          Gibt den URI-Pfad an, für den die Zugriffssteuerung gilt.

      -- ‘location-access-controls’-Parameter: Zugriffssteuerungs-Liste
               access-controls
          Zugriffssteuerungen für jeden Zugriff auf diesen Pfad, im
          selben Format wie die ‘access-controls’ bei
          ‘operation-access-control’.

          Die Vorgabe ist ‘()’.

      -- ‘location-access-controls’-Parameter:
               „method-access-controls“-Liste method-access-controls
          Zugriffssteuerungen für methodenspezifische Zugriffe auf
          diesen Pfad.

          Die Vorgabe ist ‘()’.

          Verfügbare ‘method-access-controls’-Felder sind:

           -- ‘method-access-controls’-Parameter: Boolescher-Ausdruck
                    reverse?
               Falls dies ‘#t’ ist, gelten die Zugriffssteuerungen für
               alle Methoden außer den aufgelisteten Methoden.
               Andernfalls gelten sie nur für die aufgelisteten
               Methoden.

               Vorgegeben ist ‘#f’.

           -- ‘method-access-controls’-Parameter: Methoden-Liste methods
               Methoden, für die diese Zugriffssteuerung gilt.

               Die Vorgabe ist ‘()’.

           -- ‘method-access-controls’-Parameter:
                    Zugriffssteuerungs-Liste access-controls
               Access control directives, as a list of strings. Each
               string should be one directive, such as ‘"Order
               allow,deny"’.

               Die Vorgabe ist ‘()’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          log-debug-history
     Gibt die Anzahl der Nachrichten zur Fehlersuche an, die für
     Protokolle vorgehalten werden, wenn ein Fehler in einem
     Druckauftrag auftritt. Nachrichten zur Fehlersuche werden
     unabhängig von der LogLevel-Einstellung protokolliert.

     Die Vorgabe ist ‘100’.

 -- ‘cups-configuration’-Parameter: Protokollstufe log-level
     Gibt die Stufe der Protokollierung in die ErrorLog-Datei an. Der
     Wert ‘none’ stoppt alle Protokollierung, während ‘debug2’ alles
     protokollieren lässt.

     Die Vorgabe ist ‘info’.

 -- ‘cups-configuration’-Parameter: Protokollzeitformat log-time-format
     Gibt das Format von Datum und Uhrzeit in Protokolldateien an. Der
     Wert ‘standard’ lässt ganze Sekunden ins Protokoll schreiben,
     während bei ‘usecs’ Mikrosekunden protokolliert werden.

     Die Vorgabe ist ‘standard’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl max-clients
     Gibt die Maximalzahl gleichzeitig bedienter Clients an, die vom
     Planer zugelassen werden.

     Die Vorgabe ist ‘100’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          max-clients-per-host
     Gibt die Maximalzahl gleichzeitiger Clients von derselben Adresse
     an, die zugelassen werden.

     Die Vorgabe ist ‘100’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl max-copies
     Gibt die Maximalzahl der Kopien an, die ein Nutzer vom selben
     Druckauftrag ausdrucken lassen kann.

     Die Vorgabe ist ‘9999’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          max-hold-time
     Gibt die maximale Zeitdauer an, die ein Druckauftrag im
     Haltezustand ‘indefinite’ bleiben darf, bevor er abgebrochen wird.
     Ein Wert von 0 deaktiviert ein Abbrechen gehaltener Druckaufträge.

     Die Vorgabe ist ‘0’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl max-jobs
     Gibt die Maximalzahl gleichzeitiger Druckaufträge an, die noch
     zugelassen wird. Wenn Sie es auf 0 setzen, wird die Anzahl
     Druckaufträge _nicht_ beschränkt.

     Die Vorgabe ist ‘500’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          max-jobs-per-printer
     Gibt die Maximalzahl gleichzeitiger Druckaufträge an, die pro
     Drucker zugelassen werden. Ein Wert von 0 lässt bis zu
     MaxJobs-viele Druckaufträge pro Drucker zu.

     Die Vorgabe ist ‘0’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          max-jobs-per-user
     Gibt die Maximalzahl gleichzeitiger Druckaufträge an, die pro
     Benutzer zugelassen werden. Ein Wert von 0 lässt bis zu
     MaxJobs-viele Druckaufträge pro Benutzer zu.

     Die Vorgabe ist ‘0’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          max-job-time
     Specifies the maximum time a job may take to print before it is
     canceled, in seconds. Set to 0 to disable cancellation of “stuck”
     jobs.

     Die Vorgabe ist ‘10800’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          max-log-size
     Gibt die Maximalgröße der Protokolldateien an, bevor sie rotiert
     werden, in Bytes. Beim Wert 0 wird Protokollrotation deaktiviert.

     Die Vorgabe ist ‘1048576’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          multiple-operation-timeout
     Gibt die maximale Zeitdauer an, wie lange es zwischen Dateien in
     einem Druckauftrag mit mehreren Dateien dauern darf, in Sekunden.

     Die Vorgabe ist ‘300’.

 -- ‘cups-configuration’-Parameter: Zeichenkette page-log-format
     Gibt das Format der Zeilen im PageLog-Seitenprotokoll an. Folgen,
     die mit Prozentzeichen (‘%’) beginnen, werden durch die jeweils
     zugehörigen Informationen ersetzt, während alle anderen Zeichen
     wortwörtlich übernommen werden. Die folgenden Prozentfolgen werden
     erkannt:

     ‘%%’
          ein einzelnes Prozentzeichen einfügen

     ‘%{name}’
          den Wert des angegebenen IPP-Attributs einfügen

     ‘%C’
          die Anzahl der Kopien der aktuellen Seite einfügen

     ‘%P’
          die aktuelle Seitenzahl einfügen

     ‘%T’
          das aktuelle Datum und Uhrzeit im allgemeinen Protokollformat
          einfügen

     ‘%j’
          den Druckauftragsidentifikator („Job-ID“) einfügen

     ‘%p’
          den Druckernamen einfügen

     ‘%u’
          den Benutzernamen einfügen

     Wird die leere Zeichenkette als Wert angegeben, wird
     Seitenprotokollierung abgeschaltet. Die Zeichenkette ‘%p %u %j %T
     %P %C %{job-billing} %{job-originating-host-name} %{job-name}
     %{media} %{sides}’ erzeugt ein Seitenprotokoll mit den üblichen
     Elementen.

     Die Vorgabe ist ‘""’.

 -- ‘cups-configuration’-Parameter: Umgebungsvariable
          environment-variables
     Übergibt die angegebene(n) Umgebungsvariable(n) an Kindprozesse,
     als Liste von Zeichenketten.

     Die Vorgabe ist ‘()’.

 -- ‘cups-configuration’-Parameter: „policy-configuration“-Liste
          policies
     Gibt die benannten Zugriffssteuerungsrichtlinien an.

     Verfügbare ‘policy-configuration’-Felder sind:

      -- ‘policy-configuration’-Parameter: Zeichenkette name
          Der Name der Richtlinie.

      -- ‘policy-configuration’-Parameter: Zeichenkette
               job-private-access
          Gibt eine Zugriffsliste der privaten Werte eines Druckauftrags
          an. ‘@ACL’ wird auf die Werte von requesting-user-name-allowed
          oder requesting-user-name-denied des Druckers abgebildet.
          ‘@OWNER’ wird auf den Besitzer des Druckauftrags abgebildet.
          ‘@SYSTEM’ wird auf die Gruppen abgebildet, die im
          ‘system-group’-Feld der ‘files-config’-Konfiguration
          aufgelistet sind, aus der die Datei ‘cups-files.conf(5)’
          erzeugt wird. Zu den anderen möglichen Elementen der
          Zugriffsliste gehören Namen bestimmer Benutzerkonten und
          ‘@BENUTZERGRUPPE’, was für Mitglieder einer bestimmten
          Benutzergruppe steht. Die Zugriffsliste kann auch einfach als
          ‘all’ oder ‘default’ festgelegt werden.

          Die Vorgabe ist ‘"@OWNER @SYSTEM"’.

      -- ‘policy-configuration’-Parameter: Zeichenkette
               job-private-values
          Gibt die Liste der Druckauftragswerte an, die geschützt werden
          sollten, oder ‘all’, ‘default’ oder ‘none’.

          Die Vorgabe ist ‘"job-name job-originating-host-name
          job-originating-user-name phone"’.

      -- ‘policy-configuration’-Parameter: Zeichenkette
               subscription-private-access
          Gibt eine Zugriffsliste für die privaten Werte eines
          Abonnements an. ‘@ACL’ wird auf die Werte von
          requesting-user-name-allowed oder requesting-user-name-denied
          des Druckers abgebildet. ‘@OWNER’ wird auf den Besitzer des
          Druckauftrags abgebildet. ‘@SYSTEM’ wird auf die Gruppen
          abgebildet, die im ‘system-group’-Feld der
          ‘files-config’-Konfiguration aufgelistet sind, aus der die
          Datei ‘cups-files.conf(5)’ erzeugt wird. Zu den anderen
          möglichen Elementen der Zugriffsliste gehören Namen bestimmer
          Benutzerkonten und ‘@BENUTZERGRUPPE’, was für Mitglieder einer
          bestimmten Benutzergruppe steht. Die Zugriffsliste kann auch
          einfach als ‘all’ oder ‘default’ festgelegt werden.

          Die Vorgabe ist ‘"@OWNER @SYSTEM"’.

      -- ‘policy-configuration’-Parameter: Zeichenkette
               subscription-private-values
          Gibt die Liste der Druckauftragswerte an, die geschützt werden
          sollten, oder ‘all’, ‘default’ oder ‘none’.

          Die Vorgabe ist ‘"notify-events notify-pull-method
          notify-recipient-uri notify-subscriber-user-name
          notify-user-data"’.

      -- ‘policy-configuration’-Parameter:
               „operation-access-controls“-Liste access-controls
          Zugriffssteuerung durch IPP-Betrieb.

          Die Vorgabe ist ‘()’.

 -- ‘cups-configuration’-Parameter:
          Boolescher-Ausdruck-oder-Nichtnegative-ganze-Zahl
          preserve-job-files
     Gibt an, ob die Dateien eines Druckauftrags (Dokumente) erhalten
     bleiben, nachdem ein Druckauftrag ausgedruckt wurde. Wenn eine Zahl
     angegeben wird, bleiben die Dateien des Druckauftrags für die
     angegebene Zahl von Sekunden nach dem Drucken erhalten. Ein
     boolescher Wert bestimmt ansonsten, ob sie auf unbestimmte Zeit
     erhalten bleiben.

     Die Vorgabe ist ‘86400’.

 -- ‘cups-configuration’-Parameter:
          Boolescher-Ausdruck-oder-Nichtnegative-ganze-Zahl
          preserve-job-history
     Gibt an, ob der Druckauftragsverlauf nach dem Drucken eines
     Druckauftrags erhalten bleibt. Wenn eine Zahl angegeben wird,
     bleibt der Druckauftragsverlauf für die angegebene Zahl von
     Sekunden nach dem Drucken erhalten. Bei ‘#t’ bleibt der
     Druckauftragsverlauf so lange erhalten, bis die
     MaxJobs-Beschränkung erreicht wurde.

     Die Vorgabe ist ‘#t’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl
          reload-timeout
     Gibt an, wie lange vor dem Neustart des Planungsprogramms auf den
     Abschluss eines Druckauftrages gewartet wird.

     Die Vorgabe ist ‘30’.

 -- ‘cups-configuration’-Parameter: Zeichenkette rip-cache
     Gibt die maximale Menge an genutztem Arbeitsspeicher für das
     Konvertieren von Dokumenten in eine Rastergrafik (eine „Bitmap“)
     für einen Drucker an.

     Die Vorgabe ist ‘"128m"’.

 -- ‘cups-configuration’-Parameter: Zeichenkette server-admin
     Gibt die E-Mail-Adresse des Serveradministrators an.

     Die Vorgabe ist ‘"root@localhost.localdomain"’.

 -- ‘cups-configuration’-Parameter: Rechnernamens-Liste-oder-*
          server-alias
     Die ServerAlias-Direktive wird zur Prüfung der HTTP-Host-Kopfzeile
     benutzt, wenn sich Clients mit dem Planungsprogramm über externe
     Schnittstellen verbinden. Wenn der besondere Name ‘*’ benutzt wird,
     könnte Ihr System möglicherweise bekannten browserbasierten
     DNS-Rebinding-Angriffen ausgesetzt werden, selbst wenn auf die
     Angebote nur über eine Firewall zugegriffen wird. Wenn alternative
     Namen nicht automatisch erkannt werden, empfehlen wir, jeden
     alternativen Namen in der ServerAlias-Direktive aufzulisten, statt
     ‘*’ zu benutzen.

     Die Vorgabe ist ‘*’.

 -- ‘cups-configuration’-Parameter: Zeichenkette server-name
     Gibt den vollständigen Rechnernamen („Fully-Qualified Host Name“)
     des Servers an.

     Die Vorgabe ist ‘"localhost"’.

 -- ‘cups-configuration’-Parameter: Server-Tokens server-tokens
     Gibt an, welche Informationen in der Server-Kopfzeile von
     HTTP-Antworten vorkommen. ‘None’ deaktiviert die Server-Kopfzeile.
     ‘ProductOnly’ liefert ‘CUPS’. ‘Major’ liefert ‘CUPS 2’. ‘Minor’
     liefert ‘CUPS 2.0’. ‘Minimal’ liefert ‘CUPS 2.0.0’. ‘OS’ liefert
     ‘CUPS 2.0.0 (UNAME)’, wobei UNAME die Ausgabe des Befehls ‘uname’
     ist. ‘Full’ liefert ‘CUPS 2.0.0 (UNAME) IPP/2.0’.

     Die Vorgabe ist ‘Minimal’.

 -- ‘cups-configuration’-Parameter: Mehrzeilige-Zeichenketten-Liste
          ssl-listen
     Lauscht auf den angegebenen Schnittstellen auf verschlüsselte
     Verbindungen. Gültige Werte haben die Form ADRESSE:PORT, wobei die
     ADRESSE entweder eine von eckigen Klammern umschlossene
     IPv6-Adresse, eine IPv4-Adresse oder ‘*’ ist; letztere steht für
     alle Adressen.

     Die Vorgabe ist ‘()’.

 -- ‘cups-configuration’-Parameter: SSL-Optionen ssl-options
     Legt Verschlüsselungsoptionen fest. Nach Vorgabe unterstützt CUPS
     nur Verschlüsselung mit TLS v1.0 oder höher mit bekannten, sicheren
     „Cipher Suites“. Es ist weniger sicher, Optionen mit ‘Allow’
     („erlauben“) zu verwenden, und es erhöht die Sicherheit, Optionen
     mit ‘Deny’ („verweigern“) zu benutzen. Die Option ‘AllowRC4’
     aktiviert die 128-Bit-RC4-Cipher-Suites, die manche alten Clients
     brauchen. Die Option ‘AllowSSL3’ aktiviert SSL v3.0, das manche
     alte Clients brauchen, die TLS v1.0 nicht implementieren. Die
     Option ‘DenyCBC’ deaktiviert alle CBC-Cipher-Suites. Die Option
     ‘DenyTLS1.0’ deaktiviert Unterstützung für TLS v1.0 — dadurch wird
     TLS v1.1 zur kleinsten noch unterstützten Protokollversion.

     Die Vorgabe ist ‘()’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck
          strict-conformance?
     Gibt an, ob das Druckplanungsprogramm von Clients fordert, dass sie
     sich strikt an die IPP-Spezifikationen halten.

     Vorgegeben ist ‘#f’.

 -- ‘cups-configuration’-Parameter: Nichtnegative-ganze-Zahl timeout
     Gibt die Zeitbeschränkung für HTTP-Anfragen an, in Sekunden.

     Die Vorgabe ist ‘300’.

 -- ‘cups-configuration’-Parameter: Boolescher-Ausdruck web-interface?
     Gibt an, ob die Weboberfläche zur Verfügung gestellt wird.

     Vorgegeben ist ‘#f’.

   Mittlerweile denken Sie wahrscheinlich: „Ich bitte dich,
Guix-Handbuch, ich mag dich, aber kannst du jetzt bitte mit den
Konfigurationsoptionen aufhören?“ Damit hätten Sie recht. Allerdings
sollte ein weitere Punkt noch erwähnt werden: Vielleicht haben Sie eine
bestehende ‘cupsd.conf’, die Sie verwenden möchten. In diesem Fall
können Sie eine ‘opaque-cups-configuration’ als die Konfiguration eines
‘cups-service-type’ übergeben.

   Verfügbare ‘opaque-cups-configuration’-Felder sind:

 -- ‘opaque-cups-configuration’-Parameter: „package“ cups
     Das CUPS-Paket.

 -- ‘opaque-cups-configuration’-Parameter: Zeichenkette cupsd.conf
     Der Inhalt der Datei ‘cupsd.conf’ als eine Zeichenkette.

 -- ‘opaque-cups-configuration’-Parameter: Zeichenkette cups-files.conf
     Der Inhalt der Datei ‘cups-files.conf’ als eine Zeichenkette.

   Wenn Ihre ‘cupsd.conf’ und ‘cups-files.conf’ zum Beispiel in
Zeichenketten mit dem entsprechenden Namen definiert sind, könnten Sie
auf diese Weise einen CUPS-Dienst instanziieren:

     (service cups-service-type
              (opaque-cups-configuration
                (cupsd.conf cupsd.conf)
                (cups-files.conf cups-files.conf)))


File: guix.de.info,  Node: Desktop-Dienste,  Next: Tondienste,  Prev: Druckdienste,  Up: Dienste

8.8.7 Desktop-Dienste
---------------------

Das Modul ‘(gnu services desktop)’ stellt Dienste zur Verfügung, die
meistens bei „Desktop“-Einrichtungen für grafische Nutzung praktisch
sind — also auf einer Maschine mit einem grafischem Anzeigeserver,
vielleicht mit einer grafischen Benutzeroberfläche, usw. Im Modul werden
auch Dienste definiert, die bestimmte Arbeitsumgebungen wie GNOME, Xfce
oder MATE bereitstellen.

   Um es einfacher zu machen, definiert das Modul auch eine Variable mit
denjenigen Diensten, die man auf einer Maschine mit einer grafischen
Umgebung und Netzwerkunterstützung erwarten würde:

 -- Scheme-Variable: %desktop-services
     Dies ist eine Liste von Diensten, die ‘%base-services’ ergänzt und
     weitere Dienste hinzufügt oder bestehende anpasst, um für eine
     normale „Desktop“-Nutzung geeignet zu sein.

     Insbesondere wird eine grafische Anmeldeverwaltung hinzugefügt
     (siehe *note ‘gdm-service-type’: X Window.), ebenso Programme zur
     Bildschirmsperre, ein Werkzeug zur Netzwerkverwaltung (siehe *note
     ‘network-manager-service-type’: Netzwerkdienste.) mit Unterstützung
     für Modems (siehe *note ‘modem-manager-service-type’:
     Netzwerkdienste.), Energieverbrauchs- und Farbverwaltungsdienste,
     Anmeldungs- und Sitzungsverwaltung über ‘elogind’, der
     Berechtigungsdienst Polkit, der Ortungsdienst GeoClue, der
     AccountsService-Daemon, mit dem autorisierte Benutzer
     Systempasswörter ändern können, ein NTP-Client (siehe *note
     Netzwerkdienste::) und der Avahi-Daemon. Außerdem wird der Name
     Service Switch konfiguriert, damit er ‘nss-mdns’ benutzt (siehe
     *note mDNS: Name Service Switch.).

   Die ‘%desktop-services’-Variable kann als das ‘services’-Feld einer
‘operating-system’-Deklaration genutzt werden (siehe *note ‘services’:
„operating-system“-Referenz.).

   Daneben können die Prozeduren ‘gnome-desktop-service-type’,
‘xfce-desktop-service’, ‘mate-desktop-service-type’ und
‘enlightenment-desktop-service-type’ jeweils GNOME, Xfce, MATE und/oder
Enlightenment zu einem System hinzufügen. „GNOME hinzufügen“ bedeutet,
dass Dienste auf Systemebene wie z.B. Hilfsprogramme zur Anpassung der
Hintergrundbeleuchtung und des Energieverbrauchs zum System hinzugefügt
werden und ‘polkit’ und ‘dbus’ entsprechend erweitert werden, wodurch
GNOME mit erhöhten Berechtigungen auf eine begrenzte Zahl von speziellen
Systemschnittstellen zugreifen kann. Zusätzlich bedeutet das Hinzufügen
eines durch ‘gnome-desktop-service-type’ erzeugten Dienstes, dass das
GNOME-Metapaket ins Systemprofil eingefügt wird. Genauso wird beim
Einfügen des Xfce-Dienstes nicht nur das ‘xfce’-Metapaket zum
Systemprofil hinzugefügt, sondern dem Thunar-Dateiverwaltungsprogramm
wird auch die Berechtigung gegeben, ein Fenster mit Administratorrechten
zu öffnen, wenn der Benutzer sich mit dem Administratorpasswort über die
standardmäßige grafische Oberfläche von Polkit authentisiert. „MATE
hinzufügen“ bedeutet, dass ‘polkit’ und ‘dbus’ entsprechend erweitert
werden, wodurch MATE mit erhöhten Berechtigungen auf eine begrenzte Zahl
von speziellen Systemschnittstellen zugreifen kann. Zusätzlich bedeutet
das Hinzufügen eines durch ‘mate-desktop-service-type’ erzeugten
Dienstes, dass das MATE-Metapaket ins Systemprofil eingefügt wird.
„Enlightenment hinzufügen“ bedeutet, dass ‘dbus’ entsprechend erweitert
wird und mehrere Binärdateien von Enlightenment als setuid eingerichtet
werden, wodurch das Programm zum Sperren des Bildschirms und andere
Funktionen von Enlightenment wie erwartet funktionieren.

   Die Arbeitsumgebungen in Guix benutzen standardmäßig den
Xorg-Anzeigeserver. Falls Sie das neuere Anzeigeserverprotokoll namens
Wayland benutzen möchten, müssen Sie den Dienst ‘sddm-service’ anstelle
von GDM für die grafische Anmeldeverwaltung einrichten. Dann sollten Sie
in SDDM die Sitzung „GNOME (Wayland)“ auswählen. Alternativ können Sie
auch versuchen, GNOME mit Wayland manuell aus einer Konsole (TTY) mit
dem Befehl „XDG_SESSION_TYPE=wayland exec dbus-run-session
gnome-session“ zu starten. Derzeit wird Wayland nur von GNOME
unterstützt.

 -- Scheme-Variable: gnome-desktop-service-type
     This is the type of the service that adds the GNOME
     (https://www.gnome.org) desktop environment. Its value is a
     ‘gnome-desktop-configuration’ object (see below).

     Dieser Dienst fügt das ‘gnome’-Paket zum Systemprofil hinzu und
     erweitert Polkit um die von ‘gnome-settings-daemon’ benötigten
     Aktionen.

 -- Datentyp: gnome-desktop-configuration
     Verbundsobjekt für die Konfiguration der GNOME-Arbeitsumgebung.

     ‘gnome’ (Vorgabe: ‘gnome’)
          Welches GNOME-Paket benutzt werden soll.

 -- Scheme-Variable: xfce-desktop-service-type
     This is the type of a service to run the https://xfce.org/ (Xfce)
     desktop environment. Its value is an ‘xfce-desktop-configuration’
     object (see below).

     Dieser Dienst fügt das Paket ‘xfce’ zum Systemprofil hinzu und
     erweitert Polkit, damit ‘thunar’ befähigt wird, das Dateisystem aus
     einer Benutzersitzung heraus mit Administratorrechten zu
     bearbeiten, nachdem sich der Benutzer mit dem Administratorpasswort
     authentisiert hat.

 -- Datentyp: xfce-desktop-configuration
     Verbundstyp für Einstellungen zur Xfce-Arbeitsumgebung.

     ‘xfce’ (Vorgabe: ‘xfce’)
          Das Xfce-Paket, was benutzt werden soll.

 -- Scheme-Variable: mate-desktop-service-type
     This is the type of the service that runs the MATE desktop
     environment (https://mate-desktop.org/). Its value is a
     ‘mate-desktop-configuration’ object (see below).

     Dieser Dienst fügt das Paket ‘mate’ ins Systemprofil ein und
     erweitert Polkit um die Aktionen aus dem ‘mate-settings-daemon’.

 -- Datentyp: mate-desktop-configuration
     Verbundstyp für die Einstellungen der MATE-Arbeitsumgebung.

     ‘mate’ (Vorgabe: ‘mate’)
          Das MATE-Paket, was benutzt werden soll.

 -- Scheme-Variable: enlightenment-desktop-service-type
     Liefert einen Dienst, der das ‘enlightenment’-Paket zum
     Systemprofil hinzufügt und D-Bus mit den Aktionen aus ‘efl’
     erweitert.

 -- Datentyp: enlightenment-desktop-service-configuration
     ‘enlightenment’ (Vorgabe: ‘enlightenment’)
          Das Enlightenment-Paket, was benutzt werden soll.

   Weil die Desktopdienste GNOME, Xfce und MATE so viele Pakete ins
System mitnehmen, gehören diese nicht zu den Vorgaben in der
‘%desktop-services’-Variablen. Um GNOME, Xfce oder MATE hinzuzufügen,
benutzen Sie einfach ‘cons’ zum Anhängen an die ‘%desktop-services’ im
‘services’-Feld Ihrer ‘operating-system’-Deklaration:

     (use-modules (gnu))
     (use-service-modules desktop)
     (operating-system
       …
       ;; cons* adds items to the list given as its last argument.
       (services (cons* (service gnome-desktop-service-type)
                        (service xfce-desktop-service)
                        %desktop-services))
       …)

   Diese Arbeitsumgebungen stehen dann im grafischen Anmeldefenster zur
Auswahl.

   Die eigentlichen Dienstdefinitionen, die in ‘%desktop-services’
stehen und durch ‘(gnu services dbus)’ und ‘(gnu services desktop)’ zur
Verfügung gestellt werden, werden im Folgenden beschrieben.

 -- Scheme-Prozedur: dbus-service [#:dbus DBUS] [#:services '()]
     Liefert einen Dienst, der den „Systembus“ mit DBUS ausführt, mit
     Unterstützung für die als SERVICES übergebenen Dienste.

     D-Bus (https://dbus.freedesktop.org/) ist eine Einrichtung zur
     Interprozesskommunikation. Deren Systembus wird benutzt, damit
     Systemdienste miteinander kommunizieren können und damit sie bei
     systemweiten Ereignissen benachrichtigt werden können.

     Als SERVICES muss eine Liste von Paketen übergeben werden, die ein
     Verzeichnis ‘etc/dbus-1/system.d’ mit zusätzlichen
     D-Bus-Konfigurations- und Richtliniendateien enthalten. Damit zum
     Beispiel der Avahi-Daemon den Systembus benutzen kann, muss
     SERVICES gleich ‘(list avahi)’ sein.

 -- Scheme-Prozedur: elogind-service [#:config KONFIGURATION]
     Liefert einen Dienst, der den Anmelde- und Sitzungsdaemon ‘elogind’
     ausführt. Elogind (https://github.com/elogind/elogind) stellt eine
     D-Bus-Schnittstelle bereit, über die ausgelesen werden kann, welche
     Benutzer angemeldet sind und welche Sitzungen sie geöffnet haben,
     und außerdem das System in Bereitschaft versetzt werden kann, der
     Bereitschaftsmodus unterdrückt werden kann, das System neu
     gestartet werden kann und anderes.

     Die meisten Energieereignisse auf Systemebene in einem Rechner
     werden von elogind behandelt, wie etwa ein Versetzen des Systems in
     Bereitschaft, wenn der Rechner zugeklappt wird, oder ein
     Herunterfahren beim Drücken des Stromschalters.

     Das CONFIG-Schlüsselwort gibt die Konfiguration für elogind an und
     sollte das Ergebnis eines Aufrufs von ‘(elogind-configuration
     (PARAMETER WERT)...)’ sein. Verfügbare Parameter und ihre
     Vorgabewerte sind:

     ‘kill-user-processes?’
          ‘#f’
     ‘kill-only-users’
          ‘()’
     ‘kill-exclude-users’
          ‘("root")’
     ‘inhibit-delay-max-seconds’
          ‘5’
     ‘handle-power-key’
          ‘poweroff’
     ‘handle-suspend-key’
          ‘suspend’
     ‘handle-hibernate-key’
          ‘hibernate’
     ‘handle-lid-switch’
          ‘suspend’
     ‘handle-lid-switch-docked’
          ‘ignore’
     ‘power-key-ignore-inhibited?’
          ‘#f’
     ‘suspend-key-ignore-inhibited?’
          ‘#f’
     ‘hibernate-key-ignore-inhibited?’
          ‘#f’
     ‘lid-switch-ignore-inhibited?’
          ‘#t’
     ‘holdoff-timeout-seconds’
          ‘30’
     ‘idle-action’
          ‘ignore’
     ‘idle-action-seconds’
          ‘(* 30 60)’
     ‘runtime-directory-size-percent’
          ‘10’
     ‘runtime-directory-size’
          ‘#f’
     ‘remove-ipc?’
          ‘#t’
     ‘suspend-state’
          ‘("mem" "standby" "freeze")’
     ‘suspend-mode’
          ‘()’
     ‘hibernate-state’
          ‘("disk")’
     ‘hibernate-mode’
          ‘("platform" "shutdown")’
     ‘hybrid-sleep-state’
          ‘("disk")’
     ‘hybrid-sleep-mode’
          ‘("suspend" "platform" "shutdown")’

 -- Scheme-Prozedur: accountsservice-service [#:accountsservice
          ACCOUNTSSERVICE] Liefert einen Dienst, der
     AccountsService ausführt. Dabei handelt es sich um einen
     Systemdienst, mit dem verfügbare Benutzerkonten aufgelistet und
     deren Passwörter geändert werden können, und Ähnliches.
     AccountsService arbeitet mit PolicyKit zusammen, um es Benutzern
     ohne besondere Berechtigungen zu ermöglichen, ihre
     Systemkonfiguration zu ändern. Siehe den Webauftritt von
     AccountsService
     (https://www.freedesktop.org/wiki/Software/AccountsService/) für
     weitere Informationen.

     Das Schlüsselwortargument ACCOUNTSSERVICE gibt das
     ‘accountsservice’-Paket an, das als Dienst verfügbar gemacht wird.

 -- Scheme-Prozedur: polkit-service [#:polkit POLKIT] Liefert einen
          Dienst, der
     Polkit als Dienst zur Verwaltung von Berechtigungen
     (https://www.freedesktop.org/wiki/Software/polkit/) ausführt,
     wodurch Systemadministratoren auf strukturierte Weise den Zugang zu
     „privilegierten“ Operationen gewähren können, die erweiterte
     Berechtigungen erfordern. Indem der Polkit-Dienst angefragt wird,
     kann eine mit Berechtigungen ausgestattete Systemkomponente die
     Information erhalten, ob normalen Benutzern Berechtigungen gewährt
     werden dürfen. Zum Beispiel kann einer normalen Nutzerin die
     Berechtigung gegeben werden, das System in den Bereitschaftsmodus
     zu versetzen, unter der Voraussetzung, dass sie lokal vor Ort
     angemeldet ist.

 -- Scheme-Variable: polkit-wheel-service
     Dieser Dienst richtet die ‘wheel’-Benutzergruppe als
     Administratoren für den Polkit-Dienst ein. Der Zweck davon ist,
     dass Benutzer in der ‘wheel’-Benutzergruppe nach ihren eigenen
     Passwörtern gefragt werden statt dem Passwort des
     Administratornutzers ‘root’, wenn sie administrative Tätigkeiten
     durchführen, ähnlich dem, wie sich ‘sudo’ verhält.

 -- Scheme-Variable: upower-service-type
     Typ des Dienstes, der ‘upowerd’ (https://upower.freedesktop.org/)
     ausführt, ein Programm zur systemweiten Überwachung des
     Energieverbrauchs und der Akkuladung. Er hat die angegebenen
     Konfigurationseinstellungen.

     Er implementiert die D-Bus-Schnittstelle ‘org.freedesktop.UPower’.
     Insbesondere wird UPower auch von GNOME benutzt.

 -- Datentyp: upower-configuration
     Repräsentiert die Konfiguration von UPower.

     ‘upower’ (Vorgabe: UPOWER)
          Das Paket, das für ‘upower’ benutzt werden soll.

     ‘watts-up-pro?’ (Vorgabe: ‘#f’)
          Aktiviert das Watts-Up-Pro-Gerät.

     ‘poll-batteries?’ (Vorgabe: ‘#t’)
          Aktiviert das regelmäßige Abfragen des Kernels bezüglich
          Änderungen am Stand der Akku-Ladung.

     ‘ignore-lid?’ (Vorgabe: ‘#f’)
          Ignorieren, ob der Rechner zugeklappt ist. Das kann gewünscht
          sein, wenn Auf- und Zuklappen nicht richtig erkannt werden.

     ‘use-percentage-for-policy?’ (Vorgabe: ‘#f’)
          Ob sich die Richtlinie am Akku-Ladestand in Prozent
          orientieren soll. Die Vorgabe ist, sich an der verbleibenden
          Zeit zu orientieren. Wenn Sie sie auf ‘#t’ ändern, dient der
          Prozentstand als Orientierung.

     ‘percentage-low’ (Vorgabe: ‘10’)
          Wenn ‘use-percentage-for-policy?’ auf ‘#t’ gesetzt ist, wird
          hiermit der Prozentstand festgelegt, ab dem der Akku-Ladestand
          als niedrig gilt.

     ‘percentage-critical’ (Vorgabe: ‘3’)
          Wenn ‘use-percentage-for-policy?’ auf ‘#t’ gesetzt ist, wird
          hiermit der Prozentstand festgelegt, ab dem der Akku-Ladestand
          als kritisch gilt.

     ‘percentage-action’ (Vorgabe: ‘2’)
          Wenn ‘use-percentage-for-policy?’ auf ‘#t’ gesetzt ist, wird
          hiermit der Prozentstand festgelegt, ab dem Maßnahmen
          eingeleitet werden.

     ‘time-low’ (Vorgabe: ‘1200’)
          Wenn ‘use-percentage-for-policy?’ auf ‘#f’ gesetzt ist, wird
          hiermit die verbleibende Zeit in Sekunden festgelegt, ab der
          der Akku-Ladestand als niedrig gilt.

     ‘time-critical’ (Vorgabe: ‘300’)
          Wenn ‘use-percentage-for-policy?’ auf ‘#f’ gesetzt ist, wird
          hiermit die verbleibende Zeit in Sekunden festgelegt, ab der
          der Akku-Ladestand als kritisch gilt.

     ‘time-action’ (Vorgabe: ‘120’)
          Wenn ‘use-percentage-for-policy?’ auf ‘#f’ gesetzt ist, wird
          hiermit die verbleibende Zeit in Sekunden festgelegt, ab der
          Maßnahmen eingeleitet werden.

     ‘critical-power-action’ (Vorgabe: ‘'hybrid-sleep’)
          Welche Maßnahme eingeleitet wird, wenn die ‘percentage-action’
          oder ‘time-action’ erreicht wurde (je nachdem, wie
          ‘use-percentage-for-policy?’ eingestellt wurde).

          Mögliche Werte sind:

             • ‘'power-off’

             • ‘'hibernate’

             • ‘'hybrid-sleep’.

 -- Scheme-Prozedur: udisks-service [#:udisks UDISKS]
     Liefert einen Dienst für UDisks
     (https://udisks.freedesktop.org/docs/latest/), einen Daemon zur
     “Datenträgerverwaltung”, der Benutzeroberflächen mit
     Benachrichtigungen und Möglichkeiten zum Einbinden und Aushängen
     von Datenträgern versorgt. Zu den Programmen, die mit UDisks
     kommunizieren, gehört der Befehl ‘udisksctl’, der Teil von UDisks
     ist, sowie GNOME Disks.

 -- Scheme-Variable: colord-service-type
     Dies ist der Typ des Dienstes, der ‘colord’ ausführt. Dabei handelt
     es sich um einen Systemdienst mit einer D-Bus-Schnittstelle, um die
     Farbprofile von Ein- und Ausgabegeräten wie Bildschirmen oder
     Scannern zu verwalten. Insbesondere wird colord vom grafischen
     GNOME-Farbverwaltungswerkzeug benutzt. Siehe den Webauftritt von
     colord (https://www.freedesktop.org/software/colord/) für weitere
     Informationen.

 -- Scheme-Prozedur: geoclue-application Name [#:allowed? #t] [#:system?
          #f] [#:users '()]
     Liefert eine Konfiguration, mit der eine Anwendung auf Ortungsdaten
     von GeoClue zugreifen kann. Als NAME wird die Desktop-ID der
     Anwendung angegeben, ohne die Pfadkomponente mit ‘.desktop’-Endung.
     Wenn ALLOWED? wahr ist, hat die Anwendung standardmäßig Zugriff auf
     Ortungsinformationen. Der boolesche Wert SYSTEM? zeigt an, ob die
     Anwendung eine Systemkomponente ist oder nicht. Zum Schluss wird
     für USERS eine Liste von Benutzeridentifikatoren (UIDs) aller
     Benutzerkonten angegeben, für die diese Anwendung Zugriff auf
     Ortungsinformationen gewährt bekommt. Eine leere Benutzerliste
     bedeutet, dass dies für alle Benutzer gewährt wird.

 -- Scheme-Prozedur: sane-service-type
     Mit diesem Dienst wird Zugriff auf Scanner über SANE
     (http://www.sane-project.org) möglich, indem er die nötigen
     udev-Regeln installiert.

 -- Scheme-Variable: %standard-geoclue-applications
     Die Standardliste wohlbekannter GeoClue-Anwendungskonfigurationen,
     mit der das GNOME-Werkzeug für Datum und Uhrzeit die Berechtigung
     bekommt, den aktuellen Ort abzufragen, um die Zeitzone festzulegen,
     und die Webbrowser IceCat und Epiphany Ortsinformationen abfragen
     dürfen. IceCat und Epiphany fragen beide zuerst beim Benutzer nach,
     bevor sie einer Webseite gestatten, den Ort des Benutzer
     abzufragen.

 -- Scheme-Prozedur: geoclue-service [#:colord COLORD] [#:whitelist '()]
           [#:wifi-geolocation-url
     "https://location.services.mozilla.com/v1/geolocate?key=geoclue"]
      [#:submit-data? #f] [#:wifi-submission-url
     "https://location.services.mozilla.com/v1/submit?key=geoclue"]
      [#:submission-nick "geoclue"]  [#:applications
     %standard-geoclue-applications] Liefert einen Dienst, der den
     Ortungsdienst GeoClue ausführt. Dieser Dienst bietet eine
     D-Bus-Schnittstelle an, mit der Anwendungen Zugriff auf den
     physischen Ort eines Benutzers anfragen können, und optional
     Informationen in Online-Ortsdatenbanken eintragen können. Siehe den
     Webauftritt von GeoClue
     (https://wiki.freedesktop.org/www/Software/GeoClue/) für weitere
     Informationen.

 -- Scheme-Prozedur: bluetooth-service [#:bluez BLUEZ]
          [#:auto-enable? #f] Liefert einen Dienst, der den
     ‘bluetoothd’-Daemon ausführt, welcher alle Bluetooth-Geräte
     verwaltet, und eine Reihe von D-Bus-Schnittstellen zur Verfügung
     stellt. Wenn AUTO-ENABLE? wahr ist, wird die Bluetooth-Steuerung
     automatisch beim Hochfahren gestartet, was sich als nützlich
     erweisen kann, wenn man eine Bluetooth-Tastatur oder -Maus benutzt.

     Benutzer müssen zur ‘lp’-Benutzergruppe gehören, damit sie Zugriff
     auf den D-Bus-Dienst bekommen.

 -- Scheme-Variable: gnome-keyring-service-type
     This is the type of the service that adds the GNOME Keyring
     (https://wiki.gnome.org/Projects/GnomeKeyring). Its value is a
     ‘gnome-keyring-configuration’ object (see below).

     Dieser Dienst fügt das ‘gnome-keyring’-Paket zum Systemprofil hinzu
     und erweitert PAM um Einträge zur Nutzung von
     ‘pam_gnome_keyring.so’, wodurch der Schlüsselbund von Nutzern
     entsperrt wird, wenn sie sich anmelden, und passwd auch das
     Passwort des Schlüsselbunds festlegt.

 -- Datentyp: gnome-keyring-configuration
     Verbundsobjekt für die Konfiguration des
     GNOME-Schlüsselbunddienstes.

     ‘keyring’ (Vorgabe: ‘gnome-keyring’)
          Welches GNOME-Schlüsselbunddienst-Paket benutzt werden soll.

     ‘pam-services’
          Eine Liste von Paaren aus ‘(DIENST . TYP)’, die zu erweiternde
          PAM-Dienste bezeichnen. Dabei steht DIENST für den Namen eines
          bestehenden Dienstes, der erweitert werden soll, und als TYP
          kann ‘login’ oder ‘passwd’ angegeben werden.

          Wenn ‘login’ angegeben wird, wird ein optionales
          ‘pam_gnome_keyring.so’ zum Auth-Block ohne Argumente und zum
          Session-Block mit ‘auto_start’ hinzugefügt. Wenn ‘passwd’
          angegeben wird, wird ein optionales ‘pam_gnome_keyring.so’ zum
          Password-Block ohne Argumente hinzugefügt.

          Der vorgegebene Inhalt ist „gdm-password“ mit dem Wert ‘login’
          und „passwd“ mit dem Wert ‘passwd’.


File: guix.de.info,  Node: Tondienste,  Next: Datenbankdienste,  Prev: Desktop-Dienste,  Up: Dienste

8.8.8 Tondienste
----------------

Das Modul ‘(gnu services sound)’ stellt einen Dienst zur Verfügung, um
das Advanced-Linux-Sound-Architecture-System (ALSA) zu konfigurieren, so
dass PulseAudio als bevorzugter ALSA-Ausgabetreiber benutzt wird.

 -- Scheme-Variable: alsa-service-type
     Dies ist der Typ des Dienstes für das als Advanced Linux Sound
     Architecture (ALSA) (https://alsa-project.org/) bekannte System,
     das die Konfigurationsdatei ‘/etc/asound.conf’ erzeugt. Der Wert
     für diesen Diensttyp ist ein ‘alsa-configuration’-Verbundsobjekt
     wie in diesem Beispiel:

          (service alsa-service-type)

     Siehe die folgenden Details zur ‘alsa-configuration’.

 -- Datentyp: alsa-configuration
     Repräsentiert die Konfiguration für den Dienst ‘alsa-service’.

     ‘alsa-plugins’ (Vorgabe: ALSA-PLUGINS)
          ‘alsa-plugins’-Paket, was benutzt werden soll.

     ‘pulseaudio?’ (Vorgabe: #T)
          Ob ALSA-Anwendungen transparent den PulseAudio-Audioserver
          (https://www.pulseaudio.org/) benutzen sollen.

          Wenn PulseAudio benutzt wird, können Sie gleichzeitig mehrere
          Anwendungen mit Tonausgabe ausführen und sie unter anderem mit
          ‘pavucontrol’ einzeln einstellen.

     ‘extra-options’ (Vorgabe: "")
          Die Zeichenkette, die an die Datei ‘/etc/asound.conf’
          angehängt werden soll.

   Wenn einzelne Benutzer von ALSAs Systemkonfiguration abweichende
Einstellungen vornehmen möchten, können Sie das mit der
Konfigurationsdatei ‘~/.asoundrc’ tun:

     # In Guix müssen wir den absoluten Pfad von Plugins angeben.
     pcm_type.jack {
       lib "/home/alice/.guix-profile/lib/alsa-lib/libasound_module_pcm_jack.so"
     }

     # ALSA an jack weiterleiten:
     # <http://jackaudio.org/faq/routing_alsa.html>.
     pcm.rawjack {
       type jack
       playback_ports {
         0 system:playback_1
         1 system:playback_2
       }

       capture_ports {
         0 system:capture_1
         1 system:capture_2
       }
     }

     pcm.!default {
       type plug
       slave {
         pcm "rawjack"
       }
     }

   Siehe <https://www.alsa-project.org/main/index.php/Asoundrc> für die
Details.

 -- Scheme-Variable: pulseaudio-service-type
     Dies ist der Diensttyp für den PulseAudio-Soundserver
     (https://www.pulseaudio.org/). Mit ihm können die Voreinstellungen
     systemweit abgeändert werden. Dazu benutzen Sie eine
     ‘pulseaudio-configuration’, siehe unten.

          Warnung: This service overrides per-user configuration files.
          If you want PulseAudio to honor configuraton files in
          ‘~/.config/pulse’ you have to unset the environment variables
          ‘PULSE_CONFIG’ and ‘PULSE_CLIENTCONFIG’ in your
          ‘~/.bash_profile’.

          Warnung: Dieser Dienst sorgt alleine noch nicht dafür, dass
          auf ihrer Maschine das ‘pulseaudio’-Paket vorliegt. Er fügt
          bloß Konfigurationsdateien dafür hinzu, wie im Folgenden
          beschrieben. Für den (zugegebenermaßen unwahrscheinlichen)
          Fall, dass Ihnen ein ‘pulseaudio’-Paket fehlt, möchten Sie es
          vielleicht durch den oben genannten ‘alsa-service-type’
          aktivieren.

 -- Datentyp: pulseaudio-configuration
     Repräsentiert die Konfiguration für den Dienst
     ‘pulseaudio-service’.

     CLIENT-CONF (Vorgabe: ‘'()’)
          Eine Liste der Einstellungen, die in ‘client.conf’ vorgenommen
          werden. Hierfür wird eine Liste von entweder Zeichenketten
          oder Symbol-Wert-Paaren akzeptiert. Eine Zeichenkette wird so,
          wie sie ist, eingefügt, mit einem Zeilenumbruch danach. Ein
          Paar wird als „Schlüssel = Wert“ formatiert, auch hier gefolgt
          von einem Zeilenumbruch.

     DAEMON-CONF (Vorgabe: ‘'((flat-volumes . no))’)
          Eine Liste der Einstellungen, die in ‘daemon.conf’ vorgenommen
          werden, im gleichen Format wie CLIENT-CONF.

     SCRIPT-FILE (Vorgabe: ‘(file-append pulseaudio "/etc/pulse/default.pa")’)
          Welche Skriptdatei als ‘default.pa’ verwendet werden soll.

     SYSTEM-SCRIPT-FILE (Vorgabe: ‘(file-append pulseaudio "/etc/pulse/system.pa")’)
          Welche Skriptdatei als ‘system.pa’ verwendet werden soll.

 -- Scheme-Variable: ladspa-service-type
     Der Diensttyp für den Dienst, der die LADSPA_PATH-Variable
     festlegt, damit sie beachtende Programme, z.B. PulseAudio,
     LADSPA-Plugins laden können.

     Das folgende Beispiel wird den Dienst so einrichten, dass Module
     aus dem ‘swh-plugins’-Paket aktiviert werden:

          (service ladspa-service-type
                   (ladspa-configuration (plugins (list swh-plugins))))

     Siehe <http://plugin.org.uk/ladspa-swh/docs/ladspa-swh.html> für
     die Details.


File: guix.de.info,  Node: Datenbankdienste,  Next: Mail-Dienste,  Prev: Tondienste,  Up: Dienste

8.8.9 Datenbankdienste
----------------------

Das Modul ‘(gnu services databases)’ stellt die folgenden Dienste zur
Verfügung.

 -- Scheme-Prozedur: postgresql-service [#:postgresql postgresql]
          [#:config-file] [#:data-directory "/var/lib/postgresql/data"]
           [#:port
     5432] [#:locale "en_US.utf8"] [#:extension-packages ’()] Liefert
     einen Dienst, der POSTGRESQL, den PostgreSQL-Datenbankserver,
     ausführt.

     Der PostgreSQL-Daemon lädt seine Laufzeitkonfiguration aus der bei
     CONFIG-FILE angegebenen Konfigurationsdatei, erzeugt einen
     Datenbankverbund mit der angegebenen LOCALE als voreingestellte
     Locale, gespeichert im bei DATA-DIRECTORY angegebenen Verzeichnis.
     Er lauscht dann auf dem PORT.

     Zusätzliche Erweiterungen werden aus den unter EXTENSION-PACKAGES
     aufgeführten Paketen geladen. Erweiterungen sind zur Laufzeit
     verfügbar. Zum Beispiel kann ein Nutzer den
     postgresql-service-Dienst wie in diesem Beispiel konfigurieren, um
     eine geografische Datenbank mit Hilfe der ‘postgis’-Erweiterung zu
     erzeugen:

          (use-package-modules databases geo)

          (operating-system
            …
            ;; postgresql wird benötigt, um „psql“ auszuführen, aber postgis ist
            ;; für den Betrieb nicht unbedingt notwendig.
            (packages (cons* postgresql %base-packages))
            (services
              (cons*
                (postgresql-service #:extension-packages (list postgis))
                %base-services)))

     Dann wird die Erweiterung sichtbar und Sie können eine leere
     geografische Datenbak auf diese Weise initialisieren:

          psql -U postgres
          > create database postgistest;
          > \connect postgistest;
          > create extension postgis;
          > create extension postgis_topology;

     Es ist nicht notwendig, dieses Feld für contrib-Erweiterungen wie
     hstore oder dblink hinzuzufügen, weil sie bereits durch postgresql
     geladen werden können. Dieses Feld wird nur benötigt, um
     Erweiterungen hinzuzufügen, die von anderen Paketen zur Verfügung
     gestellt werden.

 -- Scheme-Prozedur: mysql-service [#:config (mysql-configuration)]
     Liefert einen Dienst, der ‘mysqld’, den Datenbankserver von MySQL
     oder MariaDB, ausführt.

     Als optionales CONFIG-Argument wird die Konfiguration für ‘mysqld’
     angegeben, die ein ‘<mysql-configuration>’-Objekt sein sollte.

 -- Datentyp: mysql-configuration
     Der Datentyp, der die Konfiguration des MYSQL-SERVICE
     repräsentiert.

     ‘mysql’ (Vorgabe: MARIADB)
          Das Paketobjekt des MySQL-Datenbankservers; es kann entweder
          MARIADB oder MYSQL sein.

          Für MySQL wird bei der Aktivierung des Dienstes ein temporäres
          Administratorpasswort („root“-Passwort) angezeigt. Für MariaDB
          ist das „root“-Passwort leer.

     ‘port’ (Vorgabe: ‘3306’)
          Der TCP-Port, auf dem der Datenbankserver auf eingehende
          Verbindungen lauscht.

 -- Scheme-Variable: memcached-service-type
     Dies ist der Diensttyp für den Memcached-Dienst
     (https://memcached.org/), der einen verteilten Zwischenspeicher im
     Arbeitsspeicher (einen „In-Memory-Cache“) zur Verfügung stellt. Der
     Wert dieses Dienstes ist ein ‘memcached-configuration’-Objekt.

     (service memcached-service-type)

 -- Datentyp: memcached-configuration
     Der Datentyp, der die Konfiguration von memcached repräsentiert.

     ‘memcached’ (Vorgabe: ‘memcached’)
          Das Memcached-Paket, das benutzt werden soll.

     ‘interfaces’ (Vorgabe: ‘'("0.0.0.0")’)
          Auf welchen Netzwerkschnittstellen gelauscht werden soll.

     ‘tcp-port’ (Vorgabe: ‘11211’)
          Der Port, auf dem Verbindungen akzeptiert werden.

     ‘udp-port’ (Vorgabe: ‘11211’)
          Der Port, auf dem UDP-Verbindungen akzeptiert werden. Ist der
          Wert 0, wird _nicht_ auf einem UDP-Socket gelauscht.

     ‘additional-options’ (Vorgabe: ‘'()’)
          Zusätzliche Befehlszeilenoptionen, die an ‘memcached’
          übergeben werden.

 -- Scheme-Variable: mongodb-service-type
     Dies ist der Diensttyp für MongoDB (https://www.mongodb.com/). Der
     Wert dieses Diensttyps ist ein ‘mongodb-configuration’-Objekt.

     (service mongodb-service-type)

 -- Datentyp: mongodb-configuration
     Der Datentyp, der die Konfiguration von mongodb repräsentiert.

     ‘mongodb’ (Vorgabe: ‘mongodb’)
          Das zu benutzende MongoDB-Paket.

     ‘config-file’ (Vorgabe: ‘%default-mongodb-configuration-file’)
          Die Konfigurationsdatei für MongoDB.

     ‘data-directory’ (Vorgabe: ‘"/var/lib/mongodb"’)
          Dieser Wert wird benutzt, um das Verzeichnis so zu erstellen,
          dass es existiert und zum Benutzer mongodb gehört. Es sollte
          mit dem Verzeichnis übereinstimmen, das in der
          Konfigurationsdatei von MongoDB als „data-directory“ angegeben
          wird.

 -- Scheme-Variable: redis-service-type
     Dies ist der Diensttyp für den Schlüssel-/Wert-Speicher Redis
     (https://redis.io/), dessen Wert ein ‘redis-configuration’-Objekt
     ist.

 -- Datentyp: redis-configuration
     Der Datentyp, der die Konfiguration von redis repräsentiert.

     ‘redis’ (Vorgabe: ‘redis’)
          Das zu benutzende Redis-Paket.

     ‘bind’ (Vorgabe: ‘"127.0.0.1"’)
          Die Netzwerkschnittstelle, auf der gelauscht wird.

     ‘port’ (Vorgabe: ‘6379’)
          Der Port, auf dem Verbindungen akzeptiert werden. Ist der Wert
          0, wird das Lauschen auf einem TCP-Socket deaktiviert.

     ‘working-directory’ (Vorgabe: ‘"/var/lib/redis"’)
          Das Verzeichnis, in dem die Datenbank und damit zu tun habende
          Dateien gespeichert werden.


File: guix.de.info,  Node: Mail-Dienste,  Next: Kurznachrichtendienste,  Prev: Datenbankdienste,  Up: Dienste

8.8.10 Mail-Dienste
-------------------

Das Modul ‘(gnu services mail)’ stellt Guix-Dienstdefinitionen für
E-Mail-Dienste zur Verfügung: IMAP-, POP3- und LMTP-Server sowie Mail
Transport Agents (MTAs). Jede Menge Akronyme! Auf diese Dienste wird in
den folgenden Unterabschnitten im Detail eingegangen.

Dovecot-Dienst
..............

 -- Scheme-Prozedur: dovecot-service [#:config (dovecot-configuration)]
     Liefert einen Dienst, der den IMAP-/POP3-/LMTP-Mailserver Dovecot
     ausführt.

   Normalerweise muss für Dovecot nicht viel eingestellt werden; das
vorgegebene Konfigurationsobjekt, das mit ‘(dovecot-configuration)’
erzeugt wird, wird genügen, wenn Ihre Mails in ‘~/Maildir’ gespeichert
werden. Ein selbstsigniertes Zertifikat wird für durch TLS geschützte
Verbindungen generiert, aber Dovecot lauscht nach Vorgabe auch auf
unverschlüsselten Ports. Es gibt jedoch eine Reihe von Optionen, die
Mail-Administratoren unter Umständen ändern müssen, was Guix — wie auch
bei anderen Diensten — mit einer einheitlichen Scheme-Schnittstelle
möglich macht.

   Um zum Beispiel anzugeben, dass sich Mails in ‘maildir~/.mail’
befinden, würde man den Dovecot-Dienst wie folgt instanziieren:

     (dovecot-service #:config
                      (dovecot-configuration
                       (mail-location "maildir:~/.mail")))

   Im Folgenden sehen Sie die verfügbaren Konfigurationsparameter. Jeder
Parameterdefinition ist ihr Typ vorangestellt; zum Beispiel bedeutet
‘Zeichenketten-Liste foo’, dass der Parameter ‘foo’ als eine Liste von
Zeichenketten angegeben werden sollte. Es ist auch möglich, die
Konfiguration als Zeichenkette anzugeben, wenn Sie eine alte
‘dovecot.conf’-Datei haben, die Sie von einem anderen System übernehmen
möchten; am Ende finden Sie mehr Details dazu.

   Verfügbare ‘dovecot-configuration’-Felder sind:

 -- ‘dovecot-configuration’-Parameter: „package“ dovecot
     Das Dovecot-Paket.

 -- ‘dovecot-configuration’-Parameter:
          Kommagetrennte-Zeichenketten-Liste listen
     Eine Liste der IPs oder der Rechnernamen („Hosts“), auf denen auf
     Verbindungen gelauscht wird. ‘*’ bedeutet, auf allen
     IPv4-Schnittstellen zu lauschen; ‘::’ lässt auf allen
     IPv6-Schnittstellen lauschen. Wenn Sie nicht der Vorgabe
     entsprechende Ports oder komplexere Einstellungen festlegen
     möchten, sollten Sie die Adress- und Portfelder des ‘inet-listener’
     beim jeweiligen Dienst anpassen, für den Sie sich interessieren.

 -- ‘dovecot-configuration’-Parameter: „protocol-configuration“-Liste
          protocols
     Die Liste der Protokolle, die angeboten werden sollen. Zu den
     verfügbaren Protokollen gehören ‘imap’, ‘pop3’ und ‘lmtp’.

     Verfügbare ‘protocol-configuration’-Felder sind:

      -- ‘protocol-configuration’-Parameter: Zeichenkette name
          Der Name des Protokolls.

      -- ‘protocol-configuration’-Parameter: Zeichenkette
               auth-socket-path
          Der Pfad des UNIX-Sockets zum Hauptauthentifizierungsserver,
          um Benutzer zu finden. Er wird von imap (für geteilte
          Benutzer) und lda benutzt. Die Vorgabe ist
          ‘"/var/run/dovecot/auth-userdb"’.

      -- ‘protocol-configuration’-Parameter:
               Leerzeichengetrennte-Zeichenketten-Liste mail-plugins
          Leerzeichengetrennte Liste der zu ladenden Plugins.

      -- ‘protocol-configuration’-Parameter: Nichtnegative-ganze-Zahl
               mail-max-userip-connections
          Die Maximalzahl der IMAP-Verbindungen, die jeder Nutzer von
          derselben IP-Adresse aus benutzen kann. _Anmerkung_: Beim
          Vergleichen des Benutzernamens wird Groß- und Kleinschreibung
          unterschieden. Die Vorgabe ist ‘10’.

 -- ‘dovecot-configuration’-Parameter: „service-configuration“-Liste
          services
     Die Liste der zu aktivierenden Dienste. Zu den verfügbaren Diensten
     gehören ‘imap’, ‘imap-login’, ‘pop3’, ‘pop3-login’, ‘auth’ und
     ‘lmtp’.

     Verfügbare ‘service-configuration’-Felder sind:

      -- ‘service-configuration’-Parameter: Zeichenkette kind
          Die Dienstart (englisch „kind“). Zu den gültigen Werten
          gehören ‘director’, ‘imap-login’, ‘pop3-login’, ‘lmtp’,
          ‘imap’, ‘pop3’, ‘auth’, ‘auth-worker’, ‘dict’, ‘tcpwrap’,
          ‘quota-warning’ oder alles andere.

      -- ‘service-configuration’-Parameter:
               „listener-configuration“-Liste listeners
          „Listener“ für den Dienst, also Lauscher auf neue
          Verbindungen. Als Listener kann entweder eine
          ‘unix-listener-configuration’, eine
          ‘fifo-listener-configuration’ oder eine
          ‘inet-listener-configuration’ angegeben werden. Die Vorgabe
          ist ‘()’.

          Verfügbare ‘unix-listener-configuration’-Felder sind:

           -- ‘unix-listener-configuration’-Parameter: Zeichenkette path
               Der Pfad zur Datei, relativ zum Feld ‘base-dir’. Er wird
               auch als der Abschnittsname verwendet.

           -- ‘unix-listener-configuration’-Parameter: Zeichenkette mode
               Der Zugriffsmodus des Sockets. Die Vorgabe ist ‘"0600"’.

           -- ‘unix-listener-configuration’-Parameter: Zeichenkette user
               Der Benutzer, dem der Socket gehört. Die Vorgabe ist
               ‘""’.

           -- ‘unix-listener-configuration’-Parameter: Zeichenkette
                    group
               Die Gruppe, der der Socket gehört. Die Vorgabe ist ‘""’.

          Verfügbare ‘fifo-listener-configuration’-Felder sind:

           -- ‘fifo-listener-configuration’-Parameter: Zeichenkette path
               Der Pfad zur Datei, relativ zum Feld ‘base-dir’. Er wird
               auch als der Abschnittsname verwendet.

           -- ‘fifo-listener-configuration’-Parameter: Zeichenkette mode
               Der Zugriffsmodus des Sockets. Die Vorgabe ist ‘"0600"’.

           -- ‘fifo-listener-configuration’-Parameter: Zeichenkette user
               Der Benutzer, dem der Socket gehört. Die Vorgabe ist
               ‘""’.

           -- ‘fifo-listener-configuration’-Parameter: Zeichenkette
                    group
               Die Gruppe, der der Socket gehört. Die Vorgabe ist ‘""’.

          Verfügbare ‘inet-listener-configuration’-Felder sind:

           -- ‘inet-listener-configuration’-Parameter: Zeichenkette
                    protocol
               Das Protokoll, auf das gelauscht wird.

           -- ‘inet-listener-configuration’-Parameter: Zeichenkette
                    address
               Die Adresse, auf der gelauscht wird. Bleibt das Feld
               leer, wird auf allen Adressen gelauscht. Die Vorgabe ist
               ‘""’.

           -- ‘inet-listener-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl port
               Der Port, auf dem gelauscht werden soll.

           -- ‘inet-listener-configuration’-Parameter:
                    Boolescher-Ausdruck ssl?
               Ob für diesen Dienst SSL benutzt werden kann: ‘yes’ für
               ja, ‘no’ für nein oder ‘required’ für „verpflichtend“.
               Die Vorgabe ist ‘#t’.

      -- ‘service-configuration’-Parameter: Nichtnegative-ganze-Zahl
               client-limit
          Die maximale Anzahl gleichzeitiger Verbindungen mit Clients
          pro Prozess. Sobald diese Anzahl von Verbindungen eingegangen
          ist, bewirkt das Eingehen der nächsten Verbindung, dass
          Dovecot einen weiteren Prozess startet. Ist sie auf 0 gesetzt,
          benutzt Dovecot stattdessen ‘default-client-limit’.

          Die Vorgabe ist ‘0’.

      -- ‘service-configuration’-Parameter: Nichtnegative-ganze-Zahl
               service-count
          Die Anzahl Verbindungen, die behandelt werden, bevor ein neuer
          Prozess gestartet wird. Typischerweise sind die einzig
          sinnvollen Werte 0 (unbeschränkt) oder 1. 1 ist sicherer, aber
          0 ist schneller. Siehe <doc/wiki/LoginProcess.txt>. Die
          Vorgabe ist ‘1’.

      -- ‘service-configuration’-Parameter: Nichtnegative-ganze-Zahl
               process-limit
          Die maximale Anzahl von Prozessen, die für diesen Dienst
          existieren können. Wenn sie auf 0 gesetzt ist, benutzt Dovecot
          stattdessen ‘default-process-limit’.

          Die Vorgabe ist ‘0’.

      -- ‘service-configuration’-Parameter: Nichtnegative-ganze-Zahl
               process-min-avail
          Die Anzahl der Prozesse, mit denen immer auf neue Verbindungen
          gewartet wird. Die Vorgabe ist ‘0’.

      -- ‘service-configuration’-Parameter: Nichtnegative-ganze-Zahl
               vsz-limit
          Wenn Sie ‘service-count 0’ festlegen, müssen Sie hierfür
          wahrscheinlich eine größere Zahl wählen. Die Vorgabe ist
          ‘256000000’.

 -- ‘dovecot-configuration’-Parameter: dict-configuration dict
     Die Wörterbuchkonfiguration, wie sie der
     ‘dict-configuration’-Konstruktor erzeugt.

     Verfügbare ‘dict-configuration’-Felder sind:

      -- ‘dict-configuration’-Parameter: Formlose-Felder entries
          Eine Liste von Schlüssel-Wert-Paaren, die in diesem Wörterbuch
          enthalten sein sollen. Die Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter: „passdb-configuration“-Liste
          passdbs
     Eine Liste von Passwortdatenbankkonfigurationen, die jeweils mit
     dem ‘passdb-configuration’-Konstruktor erzeugt werden.

     Verfügbare ‘passdb-configuration’-Felder sind:

      -- ‘passdb-configuration’-Parameter: Zeichenkette driver
          Der Treiber, den die Passwortdatenbank benutzen soll. Zu den
          gültigen Werten gehören ‘pam’, ‘passwd’, ‘shadow’, ‘bsdauth’
          und ‘static’. Die Vorgabe ist ‘"pam"’.

      -- ‘passdb-configuration’-Parameter:
               Leerzeichengetrennte-Zeichenketten-Liste args
          Leerzeichengetrennte Liste der Argumente an den
          Passwortdatenbanktreiber. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: „userdb-configuration“-Liste
          userdbs
     Liste der Benutzerdatenbankkonfigurationen, die jeweils mit dem
     ‘userdb-configuration’-Konstruktor erzeugt werden.

     Verfügbare ‘userdb-configuration’-Felder sind:

      -- ‘userdb-configuration’-Parameter: Zeichenkette driver
          Der Treiber, den die Benutzerdatenbank benutzen soll. Zu den
          gültigen Werten gehören ‘passwd’ und ‘static’. Die Vorgabe ist
          ‘"passwd"’.

      -- ‘userdb-configuration’-Parameter:
               Leerzeichengetrennte-Zeichenketten-Liste args
          Leerzeichengetrennte Liste der Argumente an den
          Benutzerdatenbanktreiber. Die Vorgabe ist ‘""’.

      -- ‘userdb-configuration’-Parameter: Formlose-Argumente
               override-fields
          Einträge, die Vorrang vor den Feldern aus passwd haben. Die
          Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter: „plugin-configuration“
          plugin-configuration
     Die Plugin-Konfiguration, die vom
     ‘plugin-configuration’-Konstruktor erzeugt wird.

 -- ‘dovecot-configuration’-Parameter: „namespace-configuration“-Liste
          namespaces
     Liste der Namensräume. Jedes Objekt in der Liste wird durch den
     ‘namespace-configuration’-Konstruktor erzeugt.

     Verfügbare ‘namespace-configuration’-Felder sind:

      -- ‘namespace-configuration’-Parameter: Zeichenkette name
          Der Name dieses Namensraums.

      -- ‘namespace-configuration’-Parameter: Zeichenkette type
          Namensraum-Typ: ‘private’, ‘shared’ oder ‘public’. Die Vorgabe
          ist ‘"private"’.

      -- ‘namespace-configuration’-Parameter: Zeichenkette separator
          Welche Trennzeichen in der Hierarchie von Namensräumen benutzt
          werden sollen. Sie sollten denselben Trenner für alle
          Namensräume benutzen, sonst führt es zu Verwirrung bei manchen
          Clients. Meistens ist ‘/’ eine gute Wahl, die Voreinstellung
          ist allerdings abhängig vom darunterliegenden
          Mail-Speicher-Format. Die Vorgabe ist ‘""’.

      -- ‘namespace-configuration’-Parameter: Zeichenkette prefix
          Das Präfix, das für Zugang auf diesen Namensraum angegeben
          werden muss. Es muss für jeden Namensraum ein anderes gewählt
          werden. Ein Beispiel ist ‘Public/’. Die Vorgabe ist ‘""’.

      -- ‘namespace-configuration’-Parameter: Zeichenkette location
          Der physische Ort, an dem sich dieses Postfach („Mailbox“)
          befindet. Das Format ist dasselbe wie beim Mail-Ort („mail
          location“), der auch als Voreinstellung hierfür benutzt wird.
          Die Vorgabe ist ‘""’.

      -- ‘namespace-configuration’-Parameter: Boolescher-Ausdruck inbox?
          Es kann nur eine INBOX geben; hiermit wird festgelegt, zu
          welchem Namensraum sie gehört. Die Vorgabe ist ‘#f’.

      -- ‘namespace-configuration’-Parameter: Boolescher-Ausdruck
               hidden?
          Wenn der Namensraum versteckt ist, wird er Clients gegenüber
          _nicht_ über die NAMESPACE-Erweiterung mitgeteilt.
          Wahrscheinlich möchten Sie auch ‘list? #f’ festlegen. Das ist
          in erster Linie dann nützlich, wenn Sie von einem anderen
          Server mit anderen Namensräumen umziehen, die Sie ersetzen
          möchten, die aber trotzdem noch weiterhin funktionieren
          sollen. Zum Beispiel können Sie versteckte Namensräume mit
          Präfixen ‘~/mail/’, ‘~%u/mail/’ und ‘mail/’ anlegen. Die
          Vorgabe ist ‘#f’.

      -- ‘namespace-configuration’-Parameter: Boolescher-Ausdruck list?
          Ob die Postfächer („Mailboxes“) unter diesem Namensraum mit
          dem LIST-Befehl angezeigt werden können. Dadurch wird der
          Namensraum für Clients sichtbar, die die NAMESPACE-Erweiterung
          nicht unterstützen. Mit dem besonderen Wert ‘children’ werden
          auch Kind-Postfächer aufgelistet, aber das Namensraumpräfix
          verborgen. Die Vorgabe ist ‘#t’.

      -- ‘namespace-configuration’-Parameter: Boolescher-Ausdruck
               subscriptions?
          Die Abonnements werden im Namensraum selbst behandelt. Wenn es
          auf ‘#f’ gesetzt ist, werden sie im Elternnamensraum
          behandelt. Das leere Präfix sollte hier immer ‘#t’ haben. Die
          Vorgabe ist ‘#t’.

      -- ‘namespace-configuration’-Parameter:
               „mailbox-configuration“-Liste mailboxes
          Die Liste der in diesem Namensraum vordefinierten Postfächer.
          Die Vorgabe ist ‘()’.

          Verfügbare ‘mailbox-configuration’-Felder sind:

           -- ‘mailbox-configuration’-Parameter: Zeichenkette name
               Der Name dieses Postfachs (dieser „Mailbox“).

           -- ‘mailbox-configuration’-Parameter: Zeichenkette auto
               Bei ‘create’ wird dieses Postfach automatisch erzeugt.
               Bei ‘subscribe’ wird dieses Postfach sowohl automatisch
               erzeugt als auch automatisch abonniert. Die Vorgabe ist
               ‘"no"’.

           -- ‘mailbox-configuration’-Parameter:
                    Leerzeichengetrennte-Zeichenketten-Liste special-use
               Liste der ‘SPECIAL-USE’-Attribute von IMAP, wie sie im
               RFC 6154 festgelegt wurden. Gültige Werte sind ‘\All’,
               ‘\Archive’, ‘\Drafts’, ‘\Flagged’, ‘\Junk’, ‘\Sent’ und
               ‘\Trash’. Die Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter: Dateiname base-dir
     Das Basisverzeichnis, in dem Laufzeitdaten gespeichert werden. Die
     Vorgabe ist ‘"/var/run/dovecot/"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette login-greeting
     Begrüßungsnachricht für Clients. Die Vorgabe ist ‘"Dovecot
     ready."’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste
          login-trusted-networks
     Die Liste der Netzwerkbereiche, denen vertraut wird. Für
     Verbindungen von diesen IP-Adressen können abweichende IP-Adressen
     und Ports angegeben werden (zur Protokollierung und zur
     Authentifizierung). ‘disable-plaintext-auth’ wird für diese
     Netzwerke außerdem ignoriert. Normalerweise würden Sie hier Ihre
     IMAP-Proxy-Server eintragen. Die Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste login-access-sockets
     Die Liste der Sockets zur Zugriffsprüfung beim Anmelden (z.B.
     tcpwrap). Die Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          verbose-proctitle?
     Ausführlichere Prozessnamen anzeigen (mit „ps“). Nach
     Voreinstellung werden Benutzername und IP-Adresse angezeigt. Die
     Einstellung ist nützlich, wenn man sehen können will, wer
     tatsächlich IMAP-Prozesse benutzt (z.B. gemeinsam genutzte
     Postfächer oder wenn derselbe Benutzeridentifikator/„UID“ für
     mehrere Konten benutzt wird). Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          shutdown-clients?
     Ob alle Prozesse abgewürgt werden sollen, wenn der
     Haupt-Dovecot-Prozess terminiert. Ist dies auf ‘#f’ gesetzt, kann
     Dovecot aktualisiert werden, ohne dass bestehende
     Client-Verbindungen zwangsweise geschlossen werden (jedoch kann das
     problematisch sein, wenn die Aktualisierung z.B. eine
     Sicherheitslücke schließen soll). Die Vorgabe ist ‘#t’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          doveadm-worker-count
     Ist dies _nicht_ null, werden Mail-Befehle über die angegebene
     Anzahl von Verbindungen an den doveadm-Server geschickt, statt sie
     direkt im selben Prozess auszuführen. Die Vorgabe ist ‘0’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette doveadm-socket-path
     Der UNIX-Socket oder das „Host:Port“-Paar, mit dem Verbindungen zum
     doveadm-Server hergestellt werden. Die Vorgabe ist
     ‘"doveadm-server"’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste import-environment
     Die Liste der Umgebungsvariablen, die beim Starten von Dovecot
     erhalten bleiben und allen Kindprozessen davon mitgegeben werden.
     Sie können auch „Schlüssel=Wert“-Paare angeben, um wie immer
     bestimmte Zuweisungen festzulegen.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          disable-plaintext-auth?
     Deaktiviert den LOGIN-Befehl und alle anderen
     Klartext-Authentisierungsverfahren, solange kein SSL/TLS benutzt
     wird (die LOGINDISABLED-Capability). Beachten Sie, dass, wenn die
     entfernte IP-Adresse mit der lokalen IP-Adresse identisch ist (Sie
     sich also vom selben Rechner aus verbinden), die Verbindung als
     sicher aufgefasst und Klartext-Authentisierung möglich ist. Siehe
     auch die „ssl=required“-Einstellung. Die Vorgabe ist ‘#t’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          auth-cache-size
     Die Größe des Zwischenspeichers für Authentifizierungen (z.B.
     ‘#e10e6’). Bei 0 ist er deaktiviert. Beachten Sie, dass für
     bsdauth, PAM und vpopmail die Einstellung ‘cache-key’ festgelegt
     sein muss, damit ein Zwischenspeicher benutzt wird. Die Vorgabe ist
     ‘0’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette auth-cache-ttl
     Wie lange Daten im Zwischenspeicher gültig bleiben („Time to
     live“). Nachdem die TTL ausläuft, wird der zwischengespeicherte
     Eintrag nicht mehr benutzt, _außer_ wenn eine Auflösung über die
     Hauptdatenbank zu einem internen Fehler führt. Dovecot versucht
     zudem, Passwortänderungen automatisch zu behandeln: Wenn die letzte
     Authentisierung erfolgreich war, diese jetzt aber nicht, wird der
     Zwischenspeicher _nicht_ benutzt. Derzeit funktioniert dies nur bei
     Klartext-Authentisierung. Die Vorgabe ist ‘"1 hour"’ für 1 Stunde.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          auth-cache-negative-ttl
     TTL beim Zwischenspeichern negativer Ergebnisse („negative Hits“,
     z.B. wenn der Benutzer nicht gefunden wurde oder das Passwort nicht
     stimmt). 0 deaktiviert das Zwischenspeichern davon vollständig. Die
     Vorgabe ist ‘"1 hour"’ für 1 Stunde.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste auth-realms
     Die Liste der Administrationsbereiche („Realms“) für
     SASL-Authentisierungsmechanismen, die solche benötigen. Sie können
     dieses Feld leer lassen, wenn Sie _keine_ Unterstützung für mehrere
     Administrationsbereiche wollen. Viele Clients benutzen den ersten
     hier aufgelisteten Administrationsbereich, also sollte der als
     Voreinstellung gewünschte Bereich vorne stehen. Die Vorgabe ist
     ‘()’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette auth-default-realm
     Der voreingestellte Administrationsbereich bzw. die Domain, falls
     keiner angegeben wurde. Dies wird sowohl für
     SASL-Administrationsbereiche als auch zum Anhängen von @domain an
     den Benutzernamen bei Klartextanmeldungen benutzt. Die Vorgabe ist
     ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette auth-username-chars
     Die Liste der in Benutzernamen zulässigen Zeichen. Wenn der vom
     Benutzer angegebene Benutzername ein hier nicht aufgelistetes
     Zeichen enthält, wird die Authentisierung automatisch abgelehnt.
     Dies dient bloß als eine weitere Überprüfung, um zu gewährleisten,
     dass mögliche Schwachstellen bei der Maskierung von
     Anführungszeichen in SQL-/LDAP-Datenbanken nicht ausgenutzt werden
     können. Wenn Sie alle Zeichen zulassen möchten, setzen Sie dieses
     Feld auf eine leere Zeichenkette. Die Vorgabe ist
     ‘"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ01234567890.-_@"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          auth-username-translation
     Wie Zeichen in Benutzernamen ersetzt werden sollen, bevor der Name
     mit Datenbanken aufgelöst wird. Der Wert besteht aus einer Reihe
     von Angaben, welches Zeichen durch welches zu ersetzen ist. Zum
     Beispiel werden für ‘#@/@’ die Zeichen ‘#’ und ‘/’ beide durch ‘@’
     ersetzt. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette auth-username-format
     Formatierungsanweisungen, die auf jeden Benutzernamen angewandt
     werden, bevor er mit einer Datenbank aufgelöst wird. Sie können
     hierzu die Standardvariablen verwenden, z.B. würde %Lu den
     Benutzernamen in Kleinbuchstaben umschreiben („lowercase“), %n
     würde den Domainnamen weglassen, wenn einer angegeben wurde, und
     ‘%n-AT-%d’ würde alle ‘@’ durch ‘-AT-’ ersetzen. Diese Übersetzung
     wird durchgeführt, nachdem die Änderungen aus
     ‘auth-username-translation’ angewandt wurden. Die Vorgabe ist
     ‘"%Lu"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          auth-master-user-separator
     Wenn Sie es für „Master“-Benutzer erlauben möchten, sich durch
     Angeben des Master-Benutzernamens als Teil einer normalen
     Benutzernamens-Zeichenkette als jemand anders anzumelden (also ohne
     Verwendung der Unterstützung davon durch den SASL-Mechanismus),
     können Sie hier die Trennzeichen dazwischen angeben. Das Format ist
     dann <Benutzername><Trenner><Master-Benutzername>. UW-IMAP benutzt
     ‘*’ als Trennzeichen, also könnte das eine gute Wahl sein. Die
     Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          auth-anonymous-username
     Der Benutzername, der verwendet wird, wenn sich Benutzer mit dem
     SASL-Mechanismus „ANONYMOUS“ anmelden. Die Vorgabe ist
     ‘"anonymous"’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          auth-worker-max-count
     Die maximale Anzahl von dovecot-auth-Arbeiterprozessen. Diese
     werden benutzt, um blockierende Anfragen an die Passwortdatenbank
     („passdb“) und an die Benutzerdatenbank („userdb“) zu stellen (z.B.
     MySQL und PAM). Sie werden automatisch erzeugt und gelöscht, je
     nachdem, wann sie gebraucht werden. Die Vorgabe ist ‘30’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette auth-gssapi-hostname
     Der Rechnername, der in GSSAPI-Prinzipalnamen benutzt wird. Nach
     Voreinstellung wird der durch gethostname() zurückgelieferte Name
     verwendet. Benutzen Sie ‘$ALL’ (mit Anführungszeichen), damit alle
     Einträge in der Schlüsseltabelle („Keytab“) akzeptiert werden. Die
     Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette auth-krb5-keytab
     Kerberos-Schlüsseltabelle („Keytab“), die für den
     GSSAPI-Mechanismus benutzt werden soll. Wenn sie nicht angegeben
     wird, wird die Voreinstellung des Systems benutzt (in der Regel
     ‘/etc/krb5.keytab’). Eventuell müssen Sie den Auth-Dienst als
     Administratornutzer „root“ ausführen lassen, um Lesezugriffe auf
     diese Datei zu ermöglichen. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          auth-use-winbind?
     NTLM-Authentifizierung und GSS-SPNEGO-Authentifizierung mit dem
     winbind-Daemon und dem ‘ntlm-auth’-Hilfsprogramm von Samba
     durchführen. Siehe
     <doc/wiki/Authentication/Mechanisms/Winbind.txt>. Die Vorgabe ist
     ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Dateiname
          auth-winbind-helper-path
     Der Pfad zur Binärdatei ‘ntlm-auth’ von Samba. Die Vorgabe ist
     ‘"/usr/bin/ntlm_auth"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette auth-failure-delay
     Die Zeit, wie lange vor der Antwort auf eine fehlgeschlagene
     Authentisierung gewartet wird. Die Vorgabe ist ‘"2 secs"’ für 2
     Sekunden.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          auth-ssl-require-client-cert?
     Es wird ein gültiges SSL-Client-Zertifikat verlangt, andernfalls
     schlägt die Authentisierung fehl. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          auth-ssl-username-from-cert?
     Ob der Benutzername aus dem SSL-Zertifikat des Clients ausgelesen
     werden soll, indem ‘X509_NAME_get_text_by_NID()’ benutzt wird, um
     den Distinguished Name („DN“) als Gebräuchlicher Name
     („CommonName“) des Zertifikatinhabers („Subject“) auszulesen. Die
     Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste auth-mechanisms
     Die Liste der erwünschten Authentisierungsmechanismen. Unterstützte
     Mechanismen sind: ‘plain’, ‘login’, ‘digest-md5’, ‘cram-md5’,
     ‘ntlm’, ‘rpa’, ‘apop’, ‘anonymous’, ‘gssapi’, ‘otp’, ‘skey’ und
     ‘gss-spnego’. _Anmerkung_: Siehe auch die Einstellung zu
     ‘disable-plaintext-auth’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste director-servers
     Die Liste der IP-Adressen oder Rechnernamen („Hostnames“) für alle
     Direktorserver, einschließlich dieses Servers selbst. Ports können
     wie in „IP:Port“ angegeben werden. Der voreingestellte Port ist
     derselbe wie der, der beim ‘inet-listener’ des Direktordienstes
     benutzt wird. Die Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste director-mail-servers
     Die Liste der IP-Adressen oder Rechnernamen („Hostnames“), um alle
     Hintergrund-Mailserver zu erreichen. Auch Bereiche können angegeben
     werden, wie 10.0.0.10-10.0.0.30. Die Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette director-user-expire
     Wie lange Benutzer zum selben Server weitergeleitet werden, sobald
     dieser keine Verbindungen mehr hat. Die Vorgabe ist ‘"15 min"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          director-username-hash
     Wie der Benutzername umgeschrieben wird, bevor er gehasht wird. Zu
     den sinnvollen Werten gehören %Ln, wenn der Nutzer sich mit oder
     ohne @domain anmelden kann, oder %Ld, wenn Postfächer innerhalb der
     Domain gemeinsam genutzt werden. Die Vorgabe ist ‘"%Lu"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette log-path
     Die Protokolldatei, die für Fehlermeldungen benutzt werden soll.
     Bei ‘syslog’ wird das Protokoll an syslog geschrieben, bei
     ‘/dev/stderr’ an die Standardfehlerausgabe. Die Vorgabe ist
     ‘"syslog"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette info-log-path
     Die Protokolldatei, die für Informationsmeldungen benutzt werden
     soll. Die Voreinstellung ist ‘log-path’. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette debug-log-path
     Die Protokolldatei, die für Meldungen zur Fehlersuche benutzt
     werden soll. Die Voreinstellung ist ‘info-log-path’. Die Vorgabe
     ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette syslog-facility
     Als welche Syslog-Einrichtung Protokolle an Syslog übermittelt
     werden sollen. Falls Sie ‘mail’ hierbei _nicht_ benutzen wollen,
     eignen sich normalerweise local0–local7. Andere
     Standardeinrichtungen werden auch unterstützt. Die Vorgabe ist
     ‘"mail"’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck auth-verbose?
     Ob gescheiterte Anmeldeversuche und die Gründe, warum diese nicht
     erfolgreich waren, protokolliert werden sollen. Die Vorgabe ist
     ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          auth-verbose-passwords
     Ob bei falschen Passwörtern das versuchte falsche Passwort ins
     Protokoll geschrieben werden soll. Gültige Werte sind "no"
     („nein“), "plain" (als Klartext) und "sha1". Den SHA1-Hash zu
     speichern kann nützlich sein, um zu erkennen, wenn jemand versucht,
     sehr viele Passwörter durchzuprobieren (ein „Brute-Force“-Angriff)
     oder ob Benutzer einfach nur dasselbe Passwort immer wieder
     probieren. Sie können auch nur die ersten n Zeichen des Wertes
     protokollieren, indem Sie ":n" anhängen (z.B. sha1:6). Die Vorgabe
     ist ‘"no"’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck auth-debug?
     Ob zur Fehlersuche noch ausführlichere Protokolle geschrieben
     werden sollen. Zum Beispiel werden SQL-Anfragen protokolliert. Die
     Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          auth-debug-passwords?
     Ob bei falschen Passwörtern das versuchte falsche Passwort und das
     benutzte Passwortschema ins Protokoll geschrieben werden soll,
     damit das Problem untersucht werden kann. Wenn dies aktiviert wird,
     wird auch ‘auth-debug’ aktiviert. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck mail-debug?
     Ob die Fehlersuche beim Mail-Prozess ermöglicht werden soll. Dies
     kann Ihnen dabei helfen, herauszufinden, warum Dovecot Ihre E-Mails
     nicht findet. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck verbose-ssl?
     SSL-Fehler auf Protokollebene anzeigen. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette log-timestamp
     Das Präfix für jede Zeile, die ins Protokoll geschrieben wird.
     %-Codes sind im Format von strftime(3). Die Vorgabe ist ‘"\"%b %d
     %H:%M:%S \""’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste
          login-log-format-elements
     Eine Liste der Elemente, die protokolliert werden sollen. Die
     Elemente, deren Variablenwerte nicht leer sind, werden zu einer
     kommagetrennten Zeichenkette zusammengefügt.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette login-log-format
     Das Format des Anmeldeprogramms. %s umfasst die Zeichenkette
     ‘login-log-format-elements’, %$ enthält die Daten, die man
     protokollieren lassen möchte. Die Vorgabe ist ‘"%$: %s"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-log-prefix
     Das Präfix, das Protokollen für Mailprozesse vorangestellt wird.
     Siehe doc/wiki/Variables.txt für eine Liste der benutzbaren
     Variablen. Die Vorgabe ist ‘"\"%s(%u)<%{pid}><%{session}>: \""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette deliver-log-format
     Welches Format zur Protokollierung von Mailzustellungen verwendet
     werden soll. Sie können die folgenden Variablen benutzen:
     ‘%$’
          Zustellungsstatusnachricht (z.B. ‘saved to INBOX’)
     ‘%m’
          Nachrichtenidentifikator („Message-ID“)
     ‘%s’
          Betreff („Subject“)
     ‘%f’
          Absendeadresse („From“)
     ‘%p’
          Physische Größe
     ‘%w’
          Virtuelle Größe.
     Die Vorgabe ist ‘"msgid=%m: %$"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-location
     Wo die Postfächer (die „Mailboxes“) der Benutzer gespeichert sind.
     Die Vorgabe ist die leere Zeichenkette, was bedeutet, dass Dovecot
     die Postfächer automatisch zu finden versucht. Das funktioniert
     nur, wenn der Nutzer bereits E-Mails gespeichert hat, also sollten
     Sie Dovecot den vollständigen Pfad mitteilen.

     If you’re using mbox, giving a path to the INBOX file (e.g.
     ‘/var/mail/%u’) isn’t enough. You’ll also need to tell Dovecot
     where the other mailboxes are kept. This is called the _root mail
     directory_, and it must be the first path given in the
     ‘mail-location’ setting.

     There are a few special variables you can use, e.g.:

     ‘%u’
          Benutzername
     ‘%n’
          Benutzerteil in Benutzer@Domain; sonst dasselbe wie %u, wenn
          es keine Domain gibt
     ‘%d’
          Domainteil in Benutzer@Domain; sonst leer, wenn es keine
          Domain gibt
     ‘%h’
          Persönliches Verzeichnis

     Siehe doc/wiki/Variables.txt für die vollständige Liste. Einige
     Beispiele:
     ‘maildir:~/Maildir’
     ‘mbox:~/mail:INBOX=/var/mail/%u’
     ‘mbox:/var/mail/%d/%1n/%n:INDEX=/var/indexes/%d/%1n/%’
     Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-uid
     Systembenutzer und -gruppe, die benutzt werden sollen, um auf Mails
     zuzugreifen. Wenn Sie mehrere Benutzerkonten verwenden, kann auch
     die Benutzerdatenbank „userdb“ vorrangig verwendet werden, indem
     sie zu Benutzer- oder Gruppenidentifikatoren (UIDs und GIDs)
     auflöst. Sie können hier Zahlen oder Namen angeben. Siehe
     <doc/wiki/UserIds.txt>. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-gid

     Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          mail-privileged-group
     Group to enable temporarily for privileged operations. Currently
     this is used only with INBOX when either its initial creation or
     dotlocking fails. Typically this is set to ‘"mail"’ to give access
     to ‘/var/mail’. Defaults to ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-access-groups
     Grant access to these supplementary groups for mail processes.
     Typically these are used to set up access to shared mailboxes. Note
     that it may be dangerous to set these if users can create symlinks
     (e.g. if ‘mail’ group is set here, ‘ln -s /var/mail ~/mail/var’
     could allow a user to delete others’ mailboxes, or ‘ln -s
     /secret/shared/box ~/mail/mybox’ would allow reading it). Defaults
     to ‘""’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mail-full-filesystem-access?
     Allow full file system access to clients. There’s no access checks
     other than what the operating system does for the active UID/GID.
     It works with both maildir and mboxes, allowing you to prefix
     mailboxes names with e.g. ‘/path/’ or ‘~user/’. Defaults to ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck mmap-disable?
     Don’t use ‘mmap()’ at all. This is required if you store indexes to
     shared file systems (NFS or clustered file system). Defaults to
     ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          dotlock-use-excl?
     Ob sich Dovecot darauf verlassen kann, dass ‘O_EXCL’ funktioniert,
     wenn es Sperrdateien als „Dotlock“ erstellt. NFS unterstützt
     ‘O_EXCL’ seit Version 3, also sollte es heutzutage kein Problem
     mehr sein, dies als Voreinstellung zu benutzen. Die Vorgabe ist
     ‘#t’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-fsync
     Wann fsync() oder fdatasync() aufgerufen werden soll:
     ‘optimized’
          Wann immer es nötig ist, um keine wichtigen Daten zu verlieren
     ‘always’
          Useful with e.g. NFS when ‘write()’s are delayed
     ‘never’
          Niemals benutzen (ist am schnellsten, aber Abstürze können zu
          Datenverlusten führen)
     Die Vorgabe ist ‘"optimized"’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mail-nfs-storage?
     Mails werden in NFS gespeichert. Setzen Sie dies auf ja, damit
     Dovecot NFS-Zwischenspeicher zurückschreiben kann, wann immer es
     nötig ist. Wenn Sie nur einen einzigen Mail-Server benutzen,
     brauchen Sie es _nicht_. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mail-nfs-index?
     Ob die Index-Dateien für Mails auch in NFS gespeichert sind. Wenn
     dies auf ja gesetzt ist, muss ‘mmap-disable? #t’ und
     ‘fsync-disable? #f’ gesetzt sein. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette lock-method
     Die Sperrmethode für Indexdateien. Die Alternativen sind fcntl,
     flock und dotlock. Bei Dotlocking werden ein paar Tricks benutzt,
     die mehr Plattenein- und -ausgaben als andere Sperrmethoden zur
     Folge haben. Für NFS-Benutzer gilt: flock funktioniert nicht, also
     denken Sie bitte daran, ‘mmap-disable’ zu ändern. Die Vorgabe ist
     ‘"fcntl"’.

 -- ‘dovecot-configuration’-Parameter: Dateiname mail-temp-dir
     Das Verzeichnis, in dem LDA/LMTP zwischenzeitlich eingehende
     E-Mails >128 kB speichert. Die Vorgabe ist ‘"/tmp"’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          first-valid-uid
     Der Bereich, in dem die Benutzerkennungen („UIDs“) von sich bei
     Dovecot anmeldenden Benutzern liegen müssen. Das dient
     hauptsächlich dazu, sicherzustellen, dass sich Anwender nicht mit
     den Benutzerkonten von Daemons oder sonstigen Systembenutzerkonten
     anmelden können. Beachten Sie, dass eine Anmeldung als
     Administrator „root“ grundsätzlich vom Code des Dovecot-Programms
     verboten wird und selbst dann _nicht_ möglich ist, wenn Sie
     ‘first-valid-uid’ auf 0 setzen. Die Vorgabe ist ‘500’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          last-valid-uid

     Die Vorgabe ist ‘0’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          first-valid-gid
     Der Bereich, in dem die Gruppenkennungen („GIDs“) von sich bei
     Dovecot anmeldenden Benutzern liegen müssen. Benutzerkonten, deren
     primäre Gruppe keine gültige GID hat, können sich nicht anmelden.
     Wenn das Benutzerkonto zu zusätzlichen Gruppen mit ungültiger GID
     gehört, werden diese Gruppen-Berechtigungen von Dovecot wieder
     abgegeben. Die Vorgabe ist ‘1’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          last-valid-gid

     Die Vorgabe ist ‘0’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          mail-max-keyword-length
     Die maximale zulässige Länge eines Mail-Schlüsselwort-Namens. Sie
     wirkt sich nur aus, wenn Sie neue Schlüsselwörter anzulegen
     versuchen. Die Vorgabe ist ‘50’.

 -- ‘dovecot-configuration’-Parameter:
          Doppelpunktgetrennte-Dateinamen-Liste valid-chroot-dirs
     List of directories under which chrooting is allowed for mail
     processes (i.e. ‘/var/mail’ will allow chrooting to
     ‘/var/mail/foo/bar’ too). This setting doesn’t affect
     ‘login-chroot’ ‘mail-chroot’ or auth chroot settings. If this
     setting is empty, ‘/./’ in home dirs are ignored. WARNING: Never
     add directories here which local users can modify, that may lead to
     root exploit. Usually this should be done only if you don’t allow
     shell access for users. <doc/wiki/Chrooting.txt>. Defaults to ‘()’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-chroot
     Default chroot directory for mail processes. This can be overridden
     for specific users in user database by giving ‘/./’ in user’s home
     directory (e.g. ‘/home/./user’ chroots into ‘/home’). Note that
     usually there is no real need to do chrooting, Dovecot doesn’t
     allow users to access files outside their mail directory anyway. If
     your home directories are prefixed with the chroot directory,
     append ‘/.’ to ‘mail-chroot’. <doc/wiki/Chrooting.txt>. Defaults to
     ‘""’.

 -- ‘dovecot-configuration’-Parameter: Dateiname auth-socket-path
     Der UNIX-Socket-Pfad, unter dem der Hauptauthentifizierungsserver
     zu finden ist, mit dem Nutzer gefunden werden können. Er wird von
     IMAP (für gemeinsame Benutzerkonten) und von LDA benutzt. Die
     Vorgabe ist ‘"/var/run/dovecot/auth-userdb"’.

 -- ‘dovecot-configuration’-Parameter: Dateiname mail-plugin-dir
     Das Verzeichnis, in dem Mailplugins zu finden sind. Die Vorgabe ist
     ‘"/usr/lib/dovecot"’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste mail-plugins
     Die Liste der Plugins, die für alle Dienste geladen werden sollen.
     Plugins, die nur für IMAP, LDA, etc. gedacht sind, werden in ihren
     eigenen .conf-Dateien zu dieser Liste hinzugefügt. Die Vorgabe ist
     ‘()’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          mail-cache-min-mail-count
     Die kleinste Anzahl an Mails in einem Postfach, bevor
     Aktualisierungen an der Zwischenspeicherdatei vorgenommen werden.
     Damit kann das Verhalten von Dovecot optimiert werden, um weniger
     Schreibzugriffe auf die Platte durchzuführen, wofür allerdings mehr
     Lesezugriffe notwendig werden. Die Vorgabe ist ‘0’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          mailbox-idle-check-interval
     Während der IDLE-Befehl läuft, wird ab und zu im Postfach (der
     „Mailbox“) nachgeschaut, ob es neue Mails oder andere Änderungen
     gibt. Mit dieser Einstellung wird festgelegt, wie lange zwischen
     diesen Überprüfungen höchstens gewartet wird. Dovecot kann auch
     dnotify, inotify und kqueue benutzen, um sofort über Änderungen
     informiert zu werden. Die Vorgabe ist ‘"30 secs"’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mail-save-crlf?
     Ob Mails mit CR+LF-Kodierung für Zeilenumbrüche statt einfacher LF
     gespeichert werden sollen. Dadurch wird das Versenden dieser Mails
     den Prozessor weniger beanspruchen, dies gilt besonders für den
     Systemaufruf sendfile() unter Linux und FreeBSD. Allerdings werden
     auch ein bisschen mehr Ein- und Ausgaben auf der Platte notwendig,
     wodurch es insgesamt langsamer werden könnte. Beachten Sie
     außerdem, dass andere Software, die die mboxes/maildirs ausliest,
     mit den CRs falsch umgehen und Probleme verursachen könnte. Die
     Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          maildir-stat-dirs?
     Nach Voreinstellung liefert der LIST-Befehl alle Einträge im
     Mailverzeichnis („Maildir“), die mit einem Punkt beginnen. Wenn
     diese Option aktiviert wird, liefert Dovecot nur solche Einträge,
     die für Verzeichnisse stehen. Dazu wird auf jedem Eintrag stat()
     aufgerufen, wodurch mehr Ein- und Ausgaben auf der Platte anfallen.
     (Bei Systemen, die einen Struktureintrag ‘dirent->d_type’ machen,
     ist diese Überprüfung unnötig, daher werden dort nur Verzeichnisse
     geliefert, egal was hier eingestellt ist.) Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          maildir-copy-with-hardlinks?
     Ob zum Kopieren einer Nachricht statt einer Kopie so weit möglich
     harte Verknüpfungen („Hard Links“) verwendet werden sollen. Dadurch
     wird das System wesentlich weniger ausgelastet und Nebenwirkungen
     sind unwahrscheinlich. Die Vorgabe ist ‘#t’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          maildir-very-dirty-syncs?
     Ob Dovecot annehmen darf, dass es der einzige MUA ist, der auf
     Maildir zugreift. Dann wird das cur/-Verzeichnis nur bei
     unerwarteten Änderungen an seiner mtime durchsucht oder wenn die
     Mail sonst nicht gefunden werden kann. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste mbox-read-locks
     Welche Sperrmethoden zum Sperren des mbox-Postfachs (der „Mailbox“)
     benutzt werden. Es stehen vier Methoden zur Auswahl:

     ‘dotlock’
          Hier wird eine Datei namens <Postfach>.lock erzeugt. Es
          handelt sich um die älteste und am ehesten mit NFS verwendbare
          Lösung. Wenn Sie ein Verzeichnis wie /var/mail/ benutzen,
          müssen die Benutzer Schreibzugriff darauf haben.
     ‘dotlock-try’
          Genau wie dotlock, aber wenn es mangels Berechtigungen
          fehlschlägt oder nicht genug Plattenplatz verfügbar ist, wird
          einfach nicht gesperrt.
     ‘fcntl’
          Benutzen Sie diese Einstellung wenn möglich. Sie funktioniert
          auch mit NFS, sofern lockd benutzt wird.
     ‘flock’
          Existiert vielleicht nicht auf allen Systemen. Funktioniert
          nicht mit NFS.
     ‘lockf’
          Existiert vielleicht nicht auf allen Systemen. Funktioniert
          nicht mit NFS.

     Sie können mehrere Sperrmethoden angeben; wenn ja, dann ist deren
     Reihenfolge entscheidend, um Verklemmungen („Deadlocks“) zu
     vermeiden, wenn andere MTAs/MUAs auch mehrere Sperrmethoden
     benutzen. Manche Betriebssysteme erlauben es nicht, manche davon
     gleichzeitig zu benutzen.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste mbox-write-locks

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mbox-lock-timeout
     Wie lange höchstens auf Sperren (irgendeiner Art) gewartet wird,
     bevor abgebrochen wird. Die Vorgabe ist ‘"5 mins"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          mbox-dotlock-change-timeout
     Wenn eine Dotlock-Sperrdatei existiert, das Postfach (die
     „Mailbox“) aber auf keine Weise geändert wurde, wird die Sperrdatei
     nach der hier angegebenen Zeit außer Kraft gesetzt. Die Vorgabe ist
     ‘"2 mins"’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mbox-dirty-syncs?
     Wenn sich das mbox-Postfach unerwartet ändert, müssen wir es
     gänzlich neu einlesen, um herauszufinden, was sich geändert hat.
     Wenn die mbox groß ist, kann das viel Zeit in Anspruch nehmen. Weil
     es sich bei der Änderung meistens nur um eine neu angefügte Mail
     handelt, wäre es schneller, nur die neuen Mails zu lesen. Wenn
     diese Einstellung hier aktiviert ist, arbeitet Dovecot nach dem
     eben beschriebenen Prinzip, liest aber doch die ganze mbox-Datei
     neu ein, sobald es etwas nicht wie erwartet vorfindet. Der einzige
     wirkliche Nachteil bei dieser Einstellung ist, dass es Dovecot
     nicht sofort erkennt, wenn ein anderer MUA die Statusindikatoren
     („Flags“) ändert. Beachten Sie, dass eine komplette Synchronisation
     bei den Befehlen SELECT, EXAMINE, EXPUNGE und CHECK durchgeführt
     wird. Die Vorgabe ist ‘#t’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mbox-very-dirty-syncs?
     Wie ‘mbox-dirty-syncs’, aber ohne dass komplette Synchronisationen
     selbst bei den Befehlen SELECT, EXAMINE, EXPUNGE oder CHECK
     durchgeführt werden. Wenn dies hier aktiviert ist, wird
     ‘mbox-dirty-syncs’ ignoriert. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mbox-lazy-writes?
     Ob das Schreiben von mbox-Kopfzeilen hinausgezögert wird, bis eine
     komplette Schreibsynchronisation durchgeführt wird (bei den
     Befehlen EXPUNGE und CHECK, und beim Schließen des Postfachs, d.h.
     der „Mailbox“). Das wird besonders nützlich, wenn Clients POP3
     verwenden, wo es oft vorkommt, dass die Clients alle Mails löschen.
     Der Nachteil ist, dass Dovecots Änderungen nicht sofort für andere
     MUAs sichtbar werden. Die Vorgabe ist ‘#t’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          mbox-min-index-size
     Wenn die Größe des mbox-Postfaches kleiner als die angegebene Größe
     (z.B. 100k) ist, werden keine Index-Dateien geschrieben. Wenn
     bereits eine Index-Datei existiert, wird sie weiterhin gelesen und
     nur nicht aktualisiert. Die Vorgabe ist ‘0’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          mdbox-rotate-size
     Die maximale Größe der dbox-Datei, bis sie rotiert wird. Die
     Vorgabe ist ‘10000000’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          mdbox-rotate-interval
     Das maximale Alter der dbox-Datei, bis sie rotiert wird.
     Typischerweise wird es in Tagen angegeben. Der Tag beginnt um
     Mitternacht, also steht 1d für heute, 2d für gestern, etc. 0 heißt,
     die Überprüfung ist abgeschaltet. Die Vorgabe ist ‘"1d"’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          mdbox-preallocate-space?
     Ob beim Erstellen neuer mdbox-Postfachdateien gleich am Anfang eine
     Datei der Größe ‘mdbox-rotate-size’ vorab angelegt werden soll.
     Diese Einstellung funktioniert derzeit nur mit Linux auf manchen
     Dateisystemen (ext4, xfs). Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-attachment-dir
     Postfächer in den Formaten sdbox und mdbox unterstützen es,
     Mail-Anhänge in externen Dateien zu speichern, wodurch sie mit
     Einzelinstanz-Speicherung („Single-Instance Storage“) dedupliziert
     werden können. Andere Hintergrundsysteme („Backends“) bieten dafür
     noch keine Unterstützung.

     _Warnung_: Diese Funktionalität wurde noch nicht ausgiebig
     getestet. Benutzen Sie sie auf eigene Gefahr.

     Das Wurzelverzeichnis, in dem Mail-Anhänge gespeichert werden. Wenn
     es leer gelassen wird, ist es deaktiviert. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          mail-attachment-min-size
     Anhänge, die kleiner sind als hier angegeben, werden _nicht_ extern
     gespeichert. Es ist auch möglich, ein Plugin zu schreiben, das
     externes Speichern bestimmter Anhänge deaktiviert. Die Vorgabe ist
     ‘128000’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-attachment-fs
     Ein Dateisystemhintergrundprogramm, mit dem Anhänge gespeichert
     werden:
     ‘posix’
          Dovecot führt keine Einzelinstanzspeicherung durch (aber das
          Dateisystem kann so leichter selbst deduplizieren)
     ‘sis posix’
          Einzelinstanzspeicherung wird durch einen sofortigen
          Byte-für-Byte-Vergleich beim Speichern umgesetzt
     ‘sis-queue posix’
          Einzelinstanzspeicherung mit verzögertem Vergleich und
          Deduplizierung.
     Die Vorgabe ist ‘"sis posix"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette mail-attachment-hash
     Welches Hash-Format die Dateinamen von Anhängen bestimmt. Sie
     können beliebigen Text und Variable beifügen: ‘%{md4}’, ‘%{md5}’,
     ‘%{sha1}’, ‘%{sha256}’, ‘%{sha512}’, ‘%{size}’. Es können auch nur
     Teile der Variablen benutzt werden, z.B. liefert ‘%{sha256:80}’ nur
     die ersten 80 Bits. Die Vorgabe ist ‘"%{sha1}"’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          default-process-limit

     Die Vorgabe ist ‘100’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          default-client-limit

     Die Vorgabe ist ‘1000’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          default-vsz-limit
     Die vorgegebene Beschränkung der VSZ („Virtual Memory Size“,
     virtuelle Speichergröße) für Dienstprozesse. Dies ist hauptsächlich
     dafür gedacht, Prozessen, die ein Speicherleck aufweisen,
     rechtzeitig Einhalt zu gebieten und sie abzuwürgen, bevor sie allen
     Speicher aufbrauchen. Die Vorgabe ist ‘256000000’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette default-login-user
     Der Anmeldebenutzer, der intern von Anmeldeprozessen benutzt wird.
     Der Anmeldebenutzer ist derjenige Benutzer im Dovecot-System, dem
     am wenigsten Vertrauen zugeschrieben wird. Er sollte auf überhaupt
     nichts Zugriff haben. Die Vorgabe ist ‘"dovenull"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          default-internal-user
     Der interne Benutzer, der von Prozessen ohne besondere
     Berechtigungen benutzt wird. Er sollte sich vom Anmeldebenutzer
     unterscheiden, damit Anmeldeprozesse keine anderen Prozesse stören
     können. Die Vorgabe ist ‘"dovecot"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl?
     SSL/TLS-Unterstützung: yes für ja, no für nein, oder required, wenn
     SSL/TLS verpflichtend benutzt werden muss. Siehe
     <doc/wiki/SSL.txt>. Die Vorgabe ist ‘"required"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl-cert
     Das PEM-kodierte X.509-SSL/TLS-Zertifikat (der öffentliche
     Schlüssel). Die Vorgabe ist ‘"</etc/dovecot/default.pem"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl-key
     Der PEM-kodierte private Schlüssel für SSL/TLS. Der Schlüssel wird
     geöffnet, bevor Administratorrechte abgegeben werden, damit niemand
     außer dem Administratornutzer „root“ Lesezugriff auf die
     Schlüsseldatei hat. Die Vorgabe ist
     ‘"</etc/dovecot/private/default.pem"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl-key-password
     Wenn die Schlüsseldatei passwortgeschützt ist, geben Sie hier das
     Passwort an. Alternativ können Sie es angeben, wenn sie Dovecot
     starten, indem Sie es mit dem Parameter -p übergeben. Da die
     Konfigurationsdatei oftmals allgemein lesbar ist, möchten Sie es
     vielleicht in einer anderen Datei ablegen. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl-ca
     Die PEM-kodierte Zertifikatsautorität, die als vertrauenswürdig
     eingestuft wird. Legen Sie sie nur dann fest, wenn Sie
     ‘ssl-verify-client-cert? #t’ setzen möchten. Die Datei sollte das
     oder die Zertifikat(e) der Zertifikatsautorität („Certificate
     Authority“, kurz CA) enthalten, gefolgt von den entsprechenden
     Zertifikatsperrlisten (CRLs), z.B. ‘ssl-ca </etc/ssl/certs/ca.pem’.
     Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          ssl-require-crl?
     Ob die Prüfung der Client-Zertifikate gegen die
     Zertifikatsperrlisten (CRLs) erfolgreich sein muss. Die Vorgabe ist
     ‘#t’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          ssl-verify-client-cert?
     Ob der Client gebeten wird, ein Zertifikat zu schicken. Wenn Sie es
     auch verpflichtend machen wollen, setzen Sie
     ‘auth-ssl-require-client-cert? #t’ im Autorisierungsabschnitt. Die
     Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          ssl-cert-username-field
     Welches Feld im Zertifikat den Benutzernamen angibt. In der Regel
     wählt man den Gebräuchlichen Namen „commonName“ oder den
     Eindeutigen Identifikator „x500UniqueIdentifier“ als Benutzernamen,
     wenn man Client-Zertifikate benutzt. Sie müssen dann auch
     ‘auth-ssl-username-from-cert? #t’ setzen. Die Vorgabe ist
     ‘"commonName"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl-min-protocol
     Die kleinste Version des SSL-Protokolls, die noch akzeptiert werden
     soll. Die Vorgabe ist ‘"TLSv1"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl-cipher-list
     Welche SSL-Ciphers benutzt werden dürfen. Die Vorgabe ist
     ‘"ALL:!kRSA:!SRP:!kDHd:!DSS:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!PSK:!RC4:!ADH:!LOW@STRENGTH"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette ssl-crypto-device
     Das SSL-Verschlüsselungsgerät („Crypto Device“), das benutzt werden
     soll. Gültige Werte bekommen Sie gezeigt, wenn Sie „openssl engine“
     ausführen. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette postmaster-address
     An welche Adresse Mails versandt werden sollen, die über die
     Zurückweisung einer Mail informieren. %d wird zur Domain des
     Empfängers umgeschrieben. Die Vorgabe ist ‘"postmaster@%d"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette hostname
     Der Rechnername, der an mehreren Stellen in versandten E-Mails
     (z.B. im Nachrichtenidentifikator „Message-Id“) und in
     LMTP-Antworten benutzt wird. Die Voreinstellung entspricht dem
     wirklichen Rechnernamen des Systems. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          quota-full-tempfail?
     Ob bei einem Nutzer, der sein Kontingent überschreitet, ein
     temporärer Fehler gemeldet werden soll, statt Nachrichten zurück zu
     versenden (zu „bouncen“). Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Dateiname sendmail-path
     Welche Binärdatei zum Versenden von Mails benutzt werden soll. Die
     Vorgabe ist ‘"/usr/sbin/sendmail"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette submission-host
     Wenn dieses Feld nicht leer ist, werden Mails an den SMTP-Server
     auf dem angegebenen „Rechner[:Port]“ statt an sendmail geschickt.
     Die Vothabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette rejection-subject
     Die Betreffkopfzeile („Subject:“), die für Mails benutzt werden
     soll, die über die Zurückweisung einer Mail informieren. Sie können
     dieselben Variablen wie beim hierunter beschriebenen
     Zurückweisungsgrund ‘rejection-reason’ benutzen. Die Vorgabe ist
     ‘"Rejected: %s"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette rejection-reason
     Die menschenlesbare Fehlermeldung in Mails, die über die
     Zurückweisung einer Mail informieren. Sie können diese Variablen
     benutzen:

     ‘%n’
          CRLF-Zeilenumbruch
     ‘%r’
          Begründung („Reason“)
     ‘%s’
          Ursprünglicher Betreff („Subject“)
     ‘%t’
          Empfänger („To“)
     Die Vorgabe ist ‘"Your message to <%t> was automatically
     rejected:%n%r"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette recipient-delimiter
     Trennzeichen zwischen dem eigentlichen Lokalteil („local-part“) und
     Detailangaben in der E-Mail-Adresse. Die Vorgabe ist ‘"+"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          lda-original-recipient-header
     Aus welcher Kopfzeile die Adresse des Ursprünglichen Empfängers
     (SMTPs „RCPT TO:“-Adresse) genommen wird, wenn sie nicht
     anderweitig eingetragen ist. Wird die Befehlszeilenoption ‘-a’ von
     dovecot-lda angegeben, hat sie Vorrang vor diesem Feld. Oft wird
     die Kopfzeile X-Original-To hierfür verwendet. Die Vorgabe ist
     ‘""’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          lda-mailbox-autocreate?
     Ob ein nicht existierendes Postfach (eine „Mailbox“) automatisch
     erzeugt werden soll, wenn eine Mail darin abgespeichert wird. Die
     Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Boolescher-Ausdruck
          lda-mailbox-autosubscribe?
     Ob automatisch erzeugte Postfächer („Mailboxes“) auch automatisch
     abonniert werden sollen. Die Vorgabe ist ‘#f’.

 -- ‘dovecot-configuration’-Parameter: Nichtnegative-ganze-Zahl
          imap-max-line-length
     Die maximale Länge einer IMAP-Befehlszeile. Manche Clients erzeugen
     sehr lange Befehlszeilen bei riesigen Postfächern, daher müssen Sie
     diesen Wert gegebenenfalls anheben, wenn Sie Fehlermeldungen wie
     „Too long argument“ oder „IMAP command line too large“ häufig
     sehen. Die Vorgabe ist ‘64000’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette imap-logout-format
     Formatzeichenkette für das Abmelden bei IMAP:
     ‘%i’
          Gesamtzahl vom Client empfangener Bytes
     ‘%o’
          Gesamtzahl zum Client versandter Bytes
     Siehe ‘doc/wiki/Variables.txt’ für eine Liste aller Variablen, die
     Sie benutzen können. Die Vorgabe ist ‘"in=%i out=%o
     deleted=%{deleted} expunged=%{expunged} trashed=%{trashed}
     hdr_count=%{fetch_hdr_count} hdr_bytes=%{fetch_hdr_bytes}
     body_count=%{fetch_body_count} body_bytes=%{fetch_body_bytes}"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette imap-capability
     Ersetzt die Antworten auf IMAP-CAPABILITY-Anfragen. Wenn der Wert
     mit „+“ beginnt, werden die angegebenen Capabilitys zu den
     voreingestellten hinzugefügt (z.B. +XFOO XBAR). Die Vorgabe ist
     ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette
          imap-idle-notify-interval
     Wie lange zwischen „OK Still here“-Benachrichtigungen gewartet
     wird, wenn der Client auf IDLE steht. Die Vorgabe ist ‘"2 mins"’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette imap-id-send
     ID-Feldnamen und -werte, die an Clients versandt werden sollen.
     Wenn * als der Wert angegeben wird, benutzt Dovecot dafür den
     voreingestellten Wert. Die folgenden Felder verfügen derzeit über
     voreingestellte Werte: name, version, os, os-version, support-url,
     support-email. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette imap-id-log
     Welche vom Client übermittelten ID-Felder protokolliert werden. *
     bedeutet alle. Die Vorgabe ist ‘""’.

 -- ‘dovecot-configuration’-Parameter:
          Leerzeichengetrennte-Zeichenketten-Liste
          imap-client-workarounds
     Maßnahmen, um verschiedene Fehler in Clients zu umgehen:

     ‘delay-newmail’
          Benachrichtigungen über neue Mails mit EXISTS/RECENT nur als
          Antwort auf NOOP- und CHECK-Befehle versenden. Manche Clients
          ignorieren diese ansonsten, zum Beispiel OSX Mail (<v2.1).
          Outlook Express verhält sich noch problematischer, denn ohne
          diese Maßnahme können dem Anwender Fehlermeldungen wie „Die
          Nachricht steht nicht mehr auf dem Server zur Verfügung“
          („Message no longer in server“) angezeigt werden. Beachten
          Sie, dass OE6 auch mit dieser Maßnahme immer noch Probleme
          macht, wenn die Synchronisation auf „nur Kopfzeilen“ („Headers
          Only“) eingestellt ist.

     ‘tb-extra-mailbox-sep’
          Thunderbird kommt aus irgendeinem Grund durcheinander bei
          LAYOUT=fs (mbox und dbox) und fügt überzählige ‘/’-Suffixe an
          Postfachnamen („Mailbox“-Namen) an. Mit dieser Maßnahme
          ignoriert Dovecot zusätzliche ‘/’, statt sie als ungültige
          Postfachnamen zu behandeln.

     ‘tb-lsub-flags’
          Ob \Noselect-Flags für LSUB-Antworten mit LAYOUT=fs (z.B.
          mbox) geliefert werden. Dadurch merkt Thunderbird, dass man
          Postfächer nicht auswählen kann, und zeigt sie ausgegraut an,
          statt erst nach einiger Zeit eine Fehlermeldung einzublenden,
          sie seien nicht auswählbar.
     Die Vorgabe ist ‘()’.

 -- ‘dovecot-configuration’-Parameter: Zeichenkette imap-urlauth-host
     Welcher Rechner in vom Client übermittelten URLAUTH-URLs zugelassen
     wird. Bei „*“ wird jeder zugelassen. Die Vorgabe ist ‘""’.

   Uff! Das waren viele Konfigurationsoptionen. Das Schöne daran ist
aber, dass Guix eine vollständige Schnittstelle für alles bietet, was
man in Dovecots Konfigurationssprache ausdrücken kann. Damit kann man
Konfigurationen nicht nur auf schöne Art aufschreiben, sondern kann auch
reflektiven Code schreiben, der Konfigurationen aus Scheme heraus
auslesen und umschreiben kann.

   Vielleicht haben Sie aber auch einfach schon eine ‘dovecot.conf’, die
Sie mit Guix zum Laufen bringen möchten. In diesem Fall können Sie eine
‘opaque-dovecot-configuration’ im ‘#:config’-Parameter an
‘dovecot-service’ übergeben. Wie der Name schon sagt, bietet eine opake
Konfiguration keinerlei Unterstützung für Reflexion.

   Verfügbare ‘opaque-dovecot-configuration’-Felder sind:

 -- ‘opaque-dovecot-configuration’-Parameter: „package“ dovecot
     Das Dovecot-Paket.

 -- ‘opaque-dovecot-configuration’-Parameter: Zeichenkette string
     Der Inhalt der ‘dovecot.conf’ als eine Zeichenkette.

   Wenn Ihre ‘dovecot.conf’ zum Beispiel nur aus der leeren Zeichenkette
bestünde, könnten Sie einen Dovecot-Dienst wie folgt instanziieren:

     (dovecot-service #:config
                      (opaque-dovecot-configuration
                       (string "")))

OpenSMTPD-Dienst
................

 -- Scheme-Variable: opensmtpd-service-type
     Dies ist der Diensttyp des OpenSMTPD-Dienstes
     (https://www.opensmtpd.org), dessen Wert ein
     ‘opensmtpd-configuration’-Objekt sein sollte, wie in diesem
     Beispiel:

          (service opensmtpd-service-type
                   (opensmtpd-configuration
                     (config-file (local-file "./my-smtpd.conf"))))

 -- Datentyp: opensmtpd-configuration
     Datentyp, der die Konfiguration von opensmtpd repräsentiert.

     ‘package’ (Vorgabe: OPENSMTPD)
          Das Paketobjekt des SMTP-Servers OpenSMTPD.

     ‘config-file’ (Vorgabe: ‘%default-opensmtpd-file’)
          Ein dateiartiges Objekt der OpenSMTPD-Konfigurationsdatei, die
          benutzt werden soll. Nach Vorgabe lauscht OpenSMTPD auf der
          Loopback-Netzwerkschnittstelle und ist so eingerichtet, dass
          Mail von Nutzern und Daemons auf der lokalen Maschine sowie
          E-Mails an entfernte Server versandt werden können. Führen Sie
          ‘man smtpd.conf’ aus, wenn Sie mehr erfahren möchten.

Exim-Dienst
...........

 -- Scheme-Variable: exim-service-type
     Dies ist der Diensttyp für den Mail Transfer Agent (MTA) namens
     Exim (https://exim.org), dessen Wert ein
     ‘exim-configuration’-Objekt sein sollte, wie in diesem Beispiel:

          (service exim-service-type
                   (exim-configuration
                     (config-file (local-file "./my-exim.conf"))))

   Um einen Dienst vom Typ ‘exim-service-type’ zu benutzen, müssen Sie
auch einen Dienst ‘mail-aliases-service-type’ in Ihrer
‘operating-system’-Deklaration stehen haben (selbst wenn darin keine
Alias-Namen eingerichtet sind).

 -- Datentyp: exim-configuration
     Der Datentyp, der die Konfiguration von Exim repräsentiert.

     ‘package’ (Vorgabe: EXIM)
          Das Paketobjekt des Exim-Servers.

     ‘config-file’ (Vorgabe: ‘#f’)
          Ein dateiartiges Objekt der Exim-Konfigurationsdatei. Wenn
          sein Wert ‘#f’ ist, wird die vorgegebene Konfigurationsdatei
          aus dem als ‘package’ angegebenen Paket benutzt. Die sich
          ergebende Konfigurationsdatei wird geladen, nachdem die
          Konfigurationsvariablen ‘exim_user’ und ‘exim_group’ gesetzt
          wurden.

Getmail-Dienst
..............

 -- Scheme-Variable: getmail-service-type
     Dies ist der Diensttyp des Mail-Retrievers Getmail
     (http://pyropus.ca/software/getmail/), der als Wert ein
     ‘getmail-configuration’-Objekt hat.

   Verfügbare ‘getmail-configuration’-Felder sind:

 -- ‘getmail-configuration’-Parameter: Zeichenkette name
     Ein Symbol, das den getmail-Dienst identifiziert.

     Die Vorgabe ist ‘"unset"’.

 -- ‘getmail-configuration’-Parameter: „package“ package
     Das getmail-Paket, das benutzt werden soll.

 -- ‘getmail-configuration’-Parameter: Zeichenkette user
     Das Benutzerkonto, mit dem getmail ausgeführt wird.

     Die Vorgabe ist ‘"getmail"’.

 -- ‘getmail-configuration’-Parameter: Zeichenkette group
     Die Benutzergruppe, mit der getmail ausgeführt wird.

     Die Vorgabe ist ‘"getmail"’.

 -- ‘getmail-configuration’-Parameter: Zeichenkette directory
     Welches getmail-Verzeichnis benutzt werden soll.

     Die Vorgabe ist ‘"/var/lib/getmail/default"’.

 -- ‘getmail-configuration’-Parameter: „getmail-configuration-file“
          rcfile
     Die zu benutzende getmail-Konfigurationsdatei.

     Verfügbare ‘getmail-configuration-file’-Felder sind:

      -- ‘getmail-configuration-file’-Parameter:
               „getmail-retriever-configuration“ retriever
          Von welchem E-Mail-Konto Mails bezogen werden sollen und wie
          auf dieses zugegriffen werden kann.

          Verfügbare ‘getmail-retriever-configuration’-Felder sind:

           -- ‘getmail-retriever-configuration’-Parameter: Zeichenkette
                    type
               Welche Art von Mail-Retriever benutzt werden soll. Zu den
               gültigen Werten gehören ‘passwd’ und ‘static’.

               Die Vorgabe ist ‘"SimpleIMAPSSLRetriever"’.

           -- ‘getmail-retriever-configuration’-Parameter: Zeichenkette
                    server
               Der Benutzername, mit dem man sich beim Mailserver
               anmeldet.

               Die Vorgabe ist ‘unset’.

           -- ‘getmail-retriever-configuration’-Parameter: Zeichenkette
                    username
               Der Benutzername, mit dem man sich beim Mailserver
               anmeldet.

               Die Vorgabe ist ‘unset’.

           -- ‘getmail-retriever-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl port
               Die Portnummer, mit der eine Verbindung hergestellt wird.

               Vorgegeben ist ‘#f’.

           -- ‘getmail-retriever-configuration’-Parameter: Zeichenkette
                    password
               Einträge, die Vorrang vor den Feldern aus passwd haben.

               Die Vorgabe ist ‘""’.

           -- ‘getmail-retriever-configuration’-Parameter: Liste
                    password-command
               Einträge, die Vorrang vor den Feldern aus passwd haben.

               Die Vorgabe ist ‘()’.

           -- ‘getmail-retriever-configuration’-Parameter: Zeichenkette
                    keyfile
               Der Schlüssel im PEM-Format, der für das Aufbauen der
               TLS-Verbindung genutzt werden soll.

               Die Vorgabe ist ‘""’.

           -- ‘getmail-retriever-configuration’-Parameter: Zeichenkette
                    certfile
               Die Zertifikatsdatei im PEM-Format, die für das Aufbauen
               der TLS-Verbindung genutzt werden soll.

               Die Vorgabe ist ‘""’.

           -- ‘getmail-retriever-configuration’-Parameter: Zeichenkette
                    ca-certs
               Welche Zertifikate von Zertifikatsautoritäten („CA
               Certificates“) benutzt werden sollen.

               Die Vorgabe ist ‘""’.

           -- ‘getmail-retriever-configuration’-Parameter:
                    Parameter-Assoziative-Liste extra-parameters
               Weitere Parameter für den Retriever.

               Die Vorgabe ist ‘()’.

      -- ‘getmail-configuration-file’-Parameter:
               „getmail-destination-configuration“ destination
          Was mit geholten Nachrichten geschehen soll.

          Verfügbare ‘getmail-destination-configuration’-Felder sind:

           -- ‘getmail-destination-configuration’-Parameter:
                    Zeichenkette type
               Die Art des Empfängers der Mail. Zu den gültigen Werten
               gehören ‘Maildir’, ‘Mboxrd’ und ‘MDA_external’.

               Die Vorgabe ist ‘unset’.

           -- ‘getmail-destination-configuration’-Parameter:
                    Zeichenkette-oder-Dateiartiges-Objekt path
               Entspricht der path-Option für den Mailempfänger
               („Destination“). Was hiermit bewirkt wird, hängt von der
               gewählten Empfängerart ab.

               Die Vorgabe ist ‘""’.

           -- ‘getmail-destination-configuration’-Parameter:
                    Parameter-Assoziative-Liste extra-parameters
               Weitere Empfängerparameter.

               Die Vorgabe ist ‘()’.

      -- ‘getmail-configuration-file’-Parameter:
               „getmail-options-configuration“ options
          getmail konfigurieren.

          Verfügbare ‘getmail-options-configuration’-Felder sind:

           -- ‘getmail-options-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl verbose
               Wenn es auf ‘0’ gesetzt ist, wird getmail nur Warnungen
               und Fehler ausgeben. Ein Wert von ‘1’ bedeutet, dass
               Meldungen über das Holen und Löschen von Nachrichten
               ausgegeben werden. Wenn es auf ‘2’ gesetzt ist, wird
               getmail Meldungen über jede durchgeführte Aktion
               ausgeben.

               Die Vorgabe ist ‘1’.

           -- ‘getmail-options-configuration’-Parameter:
                    Boolescher-Ausdruck read-all
               Wenn es auf wahr gesetzt ist, wird getmail alle
               verfügbaren Nachrichten holen. Andernfalls wird es nur
               solche Nachrichten holen, die es nicht bereits gesehen
               hat.

               Die Vorgabe ist ‘#t’.

           -- ‘getmail-options-configuration’-Parameter:
                    Boolescher-Ausdruck delete
               Wenn es auf wahr gesetzt ist, werden Mitteilungen vom
               Server gelöscht, nachdem sie erfolgreich geholt und
               zugestellt wurden. Andernfalls werden Nachrichten auf dem
               Server gelassen.

               Vorgegeben ist ‘#f’.

           -- ‘getmail-options-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl delete-after
               Getmail wird nach der hier angegebenen Anzahl von Tagen
               Nachrichten löschen, die es gesehen hat, wenn sie
               zugestellt wurden. Dadurch werden Nachrichten diese
               Anzahl von Tagen lang auf dem Server gelassen, nachdem
               sie zugestellt wurden. Ein Wert von ‘0’ deaktiviert diese
               Funktionalität.

               Die Vorgabe ist ‘0’.

           -- ‘getmail-options-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl delete-bigger-than
               Nachrichten, die größer als die angegebene Anzahl von
               Bytes sind, nach dem Holen löschen, selbst wenn die
               Optionen delete und delete-after abgeschaltet sind. Ein
               Wert von ‘0’ deaktiviert diese Funktionalität.

               Die Vorgabe ist ‘0’.

           -- ‘getmail-options-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl max-bytes-per-session
               Nachrichten, die höchstens die angegebene Anzahl von
               Bytes groß sind, vor dem Beenden der Serversitzung von
               dort holen. Ein Wert von ‘0’ deaktiviert diese
               Funktionalität.

               Die Vorgabe ist ‘0’.

           -- ‘getmail-options-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl max-message-size
               _Keine_ Nachrichten holen, deren Größe die angegebene
               Anzahl von Bytes überschreitet. Ein Wert von ‘0’
               deaktiviert diese Funktionalität.

               Die Vorgabe ist ‘0’.

           -- ‘getmail-options-configuration’-Parameter:
                    Boolescher-Ausdruck delivered-to
               Wenn dies auf wahr gesetzt ist, fügt getmail eine
               Delivered-To-Kopfzeile an die Nachrichten an.

               Die Vorgabe ist ‘#t’.

           -- ‘getmail-options-configuration’-Parameter:
                    Boolescher-Ausdruck received
               Wenn dies gesetzt ist, fügt getmail eine
               Received-Kopfzeile an die Nachrichten an.

               Die Vorgabe ist ‘#t’.

           -- ‘getmail-options-configuration’-Parameter: Zeichenkette
                    message-log
               Getmail wird seine Aktionen in die genannte Datei
               protokollieren. Wenn als Wert ‘""’ angegeben wird, wird
               diese Funktionalität deaktiviert.

               Die Vorgabe ist ‘""’.

           -- ‘getmail-options-configuration’-Parameter:
                    Boolescher-Ausdruck message-log-syslog
               Wenn es auf wahr gesetzt ist, wird getmail ein Protokoll
               seiner Aktionen an den Systemprotokolldienst übergeben.

               Vorgegeben ist ‘#f’.

           -- ‘getmail-options-configuration’-Parameter:
                    Boolescher-Ausdruck message-log-verbose
               Wenn dies auf wahr gesetzt ist, wird getmail
               Informationen über _nicht_ geholte Nachrichten und den
               jeweiligen Grund dafür sowie Anfang und Ende des
               Holvorgangs in Informationszeilen protokollieren.

               Vorgegeben ist ‘#f’.

           -- ‘getmail-options-configuration’-Parameter:
                    Parameter-Assoziative-Liste extra-parameters
               Weitere geltende Optionen.

               Die Vorgabe ist ‘()’.

 -- ‘getmail-configuration’-Parameter: Liste idle
     Eine Liste der Postfächer, für die getmail beim Server auf
     Benachrichtigungen wegen neuer Mails warten soll. Diese
     Funktionalität setzt voraus, dass der Server die IDLE-Erweiterung
     unterstützt.

     Die Vorgabe ist ‘()’.

 -- ‘getmail-configuration’-Parameter: Liste environment-variables
     Umgebungsvariable, die für getmail gelten sollen.

     Die Vorgabe ist ‘()’.

Dienst für Mail-Alias-Namen
...........................

 -- Scheme-Variable: mail-aliases-service-type
     Das ist der Typ des Dienstes, der ‘/etc/aliases’ zur Verfügung
     stellt, wo festgelegt wird, wie Mail-Nachrichten an Benutzer des
     Systems geliefert werden.

          (service mail-aliases-service-type
                   '(("postmaster" "bob")
                     ("bob" "bob@example.com" "bob@example2.com")))

   Die Konfiguration für einen Dienst vom Typ
‘mail-aliases-service-type’ ist eine assoziative Liste, die angibt, wie
beim System ankommende Mail-Nachrichten zuzustellen sind. Jeder Eintrag
hat die Form ‘(Alias Adressen ...)’, wobei das ‘Alias’ den lokalen
Alias-Namen angibt und ‘Adressen’ angibt, wo die Mail-Nachrichten für
diesen Benutzer ankommen sollen.

   Die Alias-Namen müssen nicht als Benutzerkonten auf dem lokalen
System existieren. Im Beispiel oben muss es also keinen Eintrag für
‘postmaster’ unter den ‘user-accounts’ in der
‘operating-system’-Deklaration geben, um die ‘postmaster’-Mails an ‘bob’
weiterzuleiten (von wo diese dann an ‘bob@example.com’ und
‘bob@example2.com’ weitergeschickt würden).

GNU-Mailutils-IMAP4-Daemon
..........................

 -- Scheme-Variable: imap4d-service-type
     Dies ist der Diensttyp für den IMAP4-Daemon aus den GNU Mailutils
     (siehe *note (mailutils)imap4d::), dessen Wert ein
     ‘imap4d-configuration’-Objekt sein sollte, wie in diesem Beispiel:

          (service imap4d-service-type
                   (imap4d-configuration
                     (config-file (local-file "imap4d.conf"))))

 -- Datentyp: imap4d-configuration
     Datentyp, der die Konfiguration von ‘imap4d’ repräsentiert.

     ‘package’ (Vorgabe: ‘mailutils’)
          Das Paket, das ‘imap4d’ zur Verfügung stellt.

     ‘config-file’ (Vorgabe: ‘%default-imap4d-config-file’)
          Datei-artiges Objekt der zu nutzenden Konfigurationsdatei.
          Nach Vorgabe lauscht IMAP4D auf TCP-Port 143 vom lokalen
          Rechner ‘localhost’. Siehe *note (mailutils)Conf-imap4d:: für
          Details.


File: guix.de.info,  Node: Kurznachrichtendienste,  Next: Telefondienste,  Prev: Mail-Dienste,  Up: Dienste

8.8.11 Kurznachrichtendienste
-----------------------------

Das Modul ‘(gnu services messaging)’ stellt Guix-Dienstdefinitionen für
Kurznachrichtendienste, d.h. „Instant Messaging“, zur Verfügung. Zur
Zeit wird hier nur Prosody unterstützt.

Prosody-Dienst
..............

 -- Scheme-Variable: prosody-service-type
     Dies ist der Diensttyp für den XMPP-Kommunikationsserver Prosody
     (https://prosody.im). Sein Wert muss ein
     ‘prosody-configuration’-Verbundsobjekt wie in diesem Beispiel sein:

          (service prosody-service-type
                   (prosody-configuration
                    (modules-enabled (cons* "groups" "mam" %default-modules-enabled))
                    (int-components
                     (list
                      (int-component-configuration
                       (hostname "conference.example.net")
                       (plugin "muc")
                       (mod-muc (mod-muc-configuration)))))
                    (virtualhosts
                     (list
                      (virtualhost-configuration
                       (domain "example.net"))))))

     Siehe im Folgenden Details über die ‘prosody-configuration’.

   Prosody kann mit den Vorgabeeinstellungen ohne viel weitere
Konfiguration benutzt werden. Nur ein ‘virtualhosts’-Feld wird
gebraucht: Es legt die Domain fest, um die sich Prosody kümmert.

   Sie können die Korrektheit der generierten Konfigurationsdatei
überprüfen, indem Sie den Befehl ‘prosodyctl check’ ausführen.

   Prosodyctl hilft auch dabei, Zertifikate aus dem
‘letsencrypt’-Verzeichnis zu importieren, so dass das
‘prosody’-Benutzerkonto auf sie Zugriff hat. Siehe
<https://prosody.im/doc/letsencrypt>.

     prosodyctl --root cert import /etc/letsencrypt/live

   Im Folgenden finden Sie die verfügbaren Konfigurationsparameter.
Jeder Parameterdefinition ist ihr Typ vorangestellt; zum Beispiel
bedeutet ‘Zeichenketten-Liste foo’, dass der Parameter ‘foo’ als Liste
von Zeichenketten angegeben werden sollte. Typangaben, die mit
‘Vielleicht-’ beginnen, stehen für Parameter, die in ‘prosody.cfg.lua’
nicht vorkommen, falls deren Wert als ‘'disabled’ („deaktiviert“)
angegeben wurde.

   Sie können die Konfiguration auch als eine Zeichenkette festlegen,
wenn Sie über eine alte ‘prosody.cfg.lua’-Datei verfügen, die Sie von
einem anderen System übernehmen möchten; siehe das Ende dieses
Abschnitts für Details.

   Der Typ ‘Dateiobjekt’ bezeichnet hierbei entweder ein dateiartiges
Objekt (siehe *note dateiartige Objekte: G-Ausdrücke.) oder einen
Dateinamen.

   Verfügbare ‘prosody-configuration’-Felder sind:

 -- ‘prosody-configuration’-Parameter: „package“ prosody
     Das Prosody-Paket.

 -- ‘prosody-configuration’-Parameter: Dateiname data-path
     Der Ort, wo sich Prosodys Verzeichnis zum Speichern von Daten
     befinden soll. Siehe <https://prosody.im/doc/configure>. Die
     Vorgabe ist ‘"/var/lib/prosody"’.

 -- ‘prosody-configuration’-Parameter: Dateiobjekt-Liste plugin-paths
     Zusätzliche Plugin-Verzeichnisse. Plugins werden der Reihe nach in
     allen festgelegten Pfaden gesucht. Siehe
     <https://prosody.im/doc/plugins_directory>. Die Vorgabe ist ‘()’.

 -- ‘prosody-configuration’-Parameter: Dateiname certificates
     Jeder virtuellte Rechner und jede Komponente braucht ein
     Zertifikat, mit dem Clients und Server ihre Identität sicher
     verifizieren können. Prosody lädt automatisch Zertifikate bzw.
     Schlüssel aus dem hier angegebenen Verzeichnis. Die Vorgabe ist
     ‘"/etc/prosody/certs"’.

 -- ‘prosody-configuration’-Parameter: Zeichenketten-Liste admins
     Dies ist eine Liste der Benutzerkonten, die auf diesem Server
     Administratoren sind. Beachten Sie, dass Sie die Benutzerkonten
     noch separat als Nutzer erzeugen lassen müssen. Siehe
     <https://prosody.im/doc/admins> and
     <https://prosody.im/doc/creating_accounts>. Ein Beispiel: ‘(admins
     '("user1@example.com" "user2@example.net"))’ Die Vorgabe ist ‘()’.

 -- ‘prosody-configuration’-Parameter: Boolescher-Ausdruck use-libevent?
     Die Nutzung von libevent aktivieren, damit bessere
     Leistungsfähigkeit auch unter hoher Last gewährleistet wird. Siehe
     <https://prosody.im/doc/libevent>. Die Vorgabe ist ‘#f’.

 -- ‘prosody-configuration’-Parameter: Modul-Liste modules-enabled
     Die Liste der Module, die Prosody beim Starten lädt. Es sucht nach
     ‘mod_modulename.lua’ im Plugin-Verzeichnis, also sollten Sie
     sicherstellen, dass es dort auch existiert. Dokumentation über
     Module können Sie hier finden: <https://prosody.im/doc/modules>.
     Die Vorgabe ist ‘("roster" "saslauth" "tls" "dialback" "disco"
     "carbons" "private" "blocklist" "vcard" "version" "uptime" "time"
     "ping" "pep" "register" "admin_adhoc")’.

 -- ‘prosody-configuration’-Parameter: Zeichenketten-Liste
          modules-disabled
     ‘"offline"’, ‘"c2s"’ und ‘"s2s"’ werden automatisch geladen, aber
     wenn Sie sie deaktivieren möchten, tragen Sie sie einfach in die
     Liste ein. Die Vorgabe ist ‘()’.

 -- ‘prosody-configuration’-Parameter: Dateiobjekt groups-file
     Der Pfad zu einer Textdatei, in der gemeinsame Gruppen definiert
     werden. Wenn dieser Pfad leer ist, dann tut ‘mod_groups’ nichts.
     Siehe <https://prosody.im/doc/modules/mod_groups>. Die Vorgabe ist
     ‘"/var/lib/prosody/sharedgroups.txt"’.

 -- ‘prosody-configuration’-Parameter: Boolescher-Ausdruck
          allow-registration?
     Ob nach Voreinstellung _keine_ neuen Benutzerkonten angelegt werden
     können, aus Sicherheitsgründen. Siehe
     <https://prosody.im/doc/creating_accounts>. Die Vorgabe ist ‘#f’.

 -- ‘prosody-configuration’-Parameter: Vielleicht-„ssl-configuration“
          ssl
     Dies ist der Teil der Einstellungen, der mit SSL/TLS zu tun hat.
     Der Großteil davon ist deaktiviert, damit die Voreinstellungen von
     Prosody verwendet werden. Wenn Sie diese Optionen hier nicht völlig
     verstehen, sollten Sie sie _nicht_ in Ihrer Konfiguration
     verwenden. Es passiert leicht, dass Sie die Sicherheit Ihres
     Servers absenken, indem Sie sie falsch benutzen. Siehe
     <https://prosody.im/doc/advanced_ssl_config>.

     Verfügbare ‘ssl-configuration’-Felder sind:

      -- ‘ssl-configuration’-Parameter: Vielleicht-Zeichenkette protocol
          Dadurch wird entschieden, was für ein Handshake benutzt wird.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Dateiname key
          Der Pfad zur Datei mit Ihrem privaten Schlüssel.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Dateiname certificate
          Der Pfad zur Datei mit Ihrem Zertifikat.

      -- ‘ssl-configuration’-Parameter: Dateiobjekt capath
          Der Pfad zum Verzeichnis, das die Wurzelzertifikate enthält,
          die Prosody zur Verifikation der Zertifikate entfernter Server
          benutzen soll. Die Vorgabe ist ‘\"/etc/ssl/certs\"’.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Dateiobjekt cafile
          Der Pfad zu einer Datei, in der Wurzelzertifikate enthalten
          sind, denen Prosody vertrauen soll. Er verhält sich ähnlich
          wie ‘capath’, aber alle Zertifikate stehen hintereinander in
          der Datei.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Zeichenketten-Liste
               verify
          Eine Liste von Verifikationsoptionen. (Die meisten bilden auf
          die ‘set_verify()’-Flags von OpenSSL ab.)

      -- ‘ssl-configuration’-Parameter: Vielleicht-Zeichenketten-Liste
               options
          Eine Liste allgemeiner Optionen, die mit SSL/TLS zu tun haben.
          Diese bilden auf OpenSSLs ‘set_options()’ ab. Eine
          vollständige Liste der in LuaSec verfügbaren Optionen finden
          Sie im Quellcode von LuaSec.

      -- ‘ssl-configuration’-Parameter:
               Vielleicht-Nichtnegative-ganze-Zahl depth
          Wie lange eine Kette von Zertifikatsautoritäten („Certificate
          Authorities“) nach einem passenden Wurzelzertifikat durchsucht
          wird, dem vertraut wird.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Zeichenkette ciphers
          Eine Zeichenkette mit OpenSSL-Ciphers. Damit wird ausgewählt,
          welche Ciphers Prosody seinen Clients anbietet, und in welcher
          Reihenfolge.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Dateiname dhparam
          Ein Pfad zu einer Datei, in der Parameter für
          Diffie-Hellman-Schlüsselaustausche stehen. Sie können so eine
          Datei mit diesem Befehl erzeugen: ‘openssl dhparam -out
          /etc/prosody/certs/dh-2048.pem 2048’

      -- ‘ssl-configuration’-Parameter: Vielleicht-Zeichenkette curve
          Die Kurve, die für Diffie-Hellman mit elliptischen Kurven
          verwendet werden soll. Prosodys Voreinstellung ist
          ‘"secp384r1"’.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Zeichenketten-Liste
               verifyext
          A list of “extra” verification options.

      -- ‘ssl-configuration’-Parameter: Vielleicht-Zeichenkette password
          Das Passwort fÜr verschlüsselte private Schlüssel.

 -- ‘prosody-configuration’-Parameter: Boolescher-Ausdruck
          c2s-require-encryption?
     Ob alle Verbindungen von Client zu Server zwangsweise verschlüsselt
     sein müssen. Siehe <https://prosody.im/doc/modules/mod_tls>. Die
     Vorgabe ist ‘#f’.

 -- ‘prosody-configuration’-Parameter: Zeichenketten-Liste
          disable-sasl-mechanisms
     Welche Mechanismen angeboten werden. Siehe
     <https://prosody.im/doc/modules/mod_saslauth>. Die Vorgabe ist
     ‘("DIGEST-MD5")’.

 -- ‘prosody-configuration’-Parameter: Boolescher-Ausdruck
          s2s-require-encryption?
     Ob alle Verbindungen von Server zu Server zwangsweise verschlüsselt
     sein müssen. Siehe <https://prosody.im/doc/modules/mod_tls>. Die
     Vorgabe ist ‘#f’.

 -- ‘prosody-configuration’-Parameter: Boolescher-Ausdruck
          s2s-secure-auth?
     Ob Verschlüsselung und Zertifikatsauthentifizierung verpflichtend
     durchgeführt werden müssen. Das bietet das ideale Maß an
     Sicherheit, jedoch müssen dann auch die Server, mit denen Sie
     kommunizieren, Verschlüsselung unterstützen _und_ gültige
     Zertifikate vorweisen, denen Sie auch vertrauen. Siehe
     <https://prosody.im/doc/s2s#security>. Die Vorgabe ist ‘#f’.

 -- ‘prosody-configuration’-Parameter: Zeichenketten-Liste
          s2s-insecure-domains
     Viele Server bieten keine Unterstützung für Verschlüsselung oder
     ihre Zertifikate sind ungültig oder selbstsigniert. Hier können Sie
     Domains eintragen, die von der Pflicht zur Authentisierung mit
     Zertifikaten ausgenommen werden. Diese werden dann über DNS
     authentifiziert. Siehe <https://prosody.im/doc/s2s#security>. Die
     Vorgabe ist ‘()’.

 -- ‘prosody-configuration’-Parameter: Zeichenketten-Liste
          s2s-secure-domains
     Selbst wenn Sie ‘s2s-secure-auth?’ deaktiviert lassen, können Sie
     noch immer gültige Zertifikate bei manchen Domains verlangen, indem
     Sie diese hier auflisten. Siehe
     <https://prosody.im/doc/s2s#security>. Die Vorgabe ist ‘()’.

 -- ‘prosody-configuration’-Parameter: Zeichenkette authentication
     Wählen Sie aus, welcher Hintergrunddienst („Provider“) zur
     Authentifizierung benutzt werden soll. Das vorgegebene System
     speichert Passwörter im Klartext ab und benutzt dafür den in
     Prosody eingestellten Datenspeicher, um Authentifizierungsdaten zu
     speichern. Wenn Sie Ihrem Server kein Vertrauen entgegenbringen,
     siehe <https://prosody.im/doc/modules/mod_auth_internal_hashed> für
     Informationen, wie Sie den gehashten Hintergrunddienst benutzen.
     Siehe auch <https://prosody.im/doc/authentication>. Die Vorgabe ist
     ‘"internal_plain"’.

 -- ‘prosody-configuration’-Parameter: Vielleicht-Zeichenkette log
     Hiermit werden die Protokollierungsoptionen festgelegt.
     Fortgeschrittene Protokollierungskonfigurationen werden vom
     Prosody-Dienst noch nicht unterstützt. Siehe
     <https://prosody.im/doc/logging>. Die Vorgabe ist ‘"*syslog"’.

 -- ‘prosody-configuration’-Parameter: Dateiname pidfile
     Die Datei, in der Prosodys Prozessidentifikator („PID“) abgelegt
     wird. Siehe <https://prosody.im/doc/modules/mod_posix>. Die Vorgabe
     ist ‘"/var/run/prosody/prosody.pid"’.

 -- ‘prosody-configuration’-Parameter:
          Vielleicht-Nichtnegative-ganze-Zahl http-max-content-size
     Die maximal zulässige Größe des HTTP-Rumpfs (in Bytes).

 -- ‘prosody-configuration’-Parameter: Vielleicht-Zeichenkette
          http-external-url
     Manche Module machen auf verschiedene Arten ihre eigene URL
     verfügbar. Diese URL setzt sich aus dem benutzten Protokoll,
     Rechnernamen und Port zusammen. Wenn Prosody hinter einem Proxy
     ausgeführt wird, ist die öffentliche URL stattdessen die
     ‘http-external-url’. Siehe
     <https://prosody.im/doc/http#external_url>.

 -- ‘prosody-configuration’-Parameter: „virtualhost-configuration“-Liste
          virtualhosts
     Der Name eines Rechners („Host“) in Prosody bezeichnet eine Domain,
     auf der Benutzerkonten angelegt werden können. Wenn Sie zum
     Beispiel möchten, dass Nutzer Adressen haben wie
     ‘"john.smith@example.com"’, dann müssen Sie einen Rechnernamen
     ‘"example.com"’ hinzufügen. Alle Optionen in dieser Liste gelten
     nur für diesen Rechnernamen.

     Note: the name _virtual_ host is used in configuration to avoid
     confusion with the actual physical host that Prosody is installed
     on. A single Prosody instance can serve many domains, each one
     defined as a VirtualHost entry in Prosody’s configuration.
     Conversely a server that hosts a single domain would have just one
     VirtualHost entry.

     Siehe <https://prosody.im/doc/configure#virtual_host_settings>.

     Verfügbare ‘virtualhost-configuration’-Felder sind:

     Alle folgenden Felder, wie sie auch die ‘prosody-configuration’
     hat: ‘admins’, ‘use-libevent?’, ‘modules-enabled’,
     ‘modules-disabled’, ‘groups-file’, ‘allow-registration?’, ‘ssl’,
     ‘c2s-require-encryption?’, ‘disable-sasl-mechanisms’,
     ‘s2s-require-encryption?’, ‘s2s-secure-auth?’,
     ‘s2s-insecure-domains’, ‘s2s-secure-domains’, ‘authentication’,
     ‘log’, ‘http-max-content-size’, ‘http-external-url’, ‘raw-content’,
     und außerdem:
      -- ‘virtualhost-configuration’-Parameter: Zeichenkette domain
          Die Domain, auf der man Prosody erreichen soll.

 -- ‘prosody-configuration’-Parameter:
          „int-component-configuration“-Liste int-components
     Komponenten sind zusätzliche Dienste auf einem Server, die Clients
     zur Verfügung stehen. Sie sind normalerweise auf einer Subdomain
     des Hauptservers verfügbar (wie zum Beispiel
     ‘"mycomponent.example.com"’). Beispiele für Komponenten könnten
     Server für Chaträume, Benutzerverzeichnisse oder Zugänge
     („Gateways“) zu anderen Protokollen sein.

     Interne Komponenten werden über Prosody-spezifische Plugins
     implementiert. Um eine interne Komponente hinzuzufügen, tragen Sie
     einfach das ‘hostname’-Feld für den Rechnernamen und die Plugins
     ein, die Sie für die Komponente benutzen möchten.

     Siehe <https://prosody.im/doc/components>. Die Vorgabe ist ‘()’.

     Verfügbare ‘int-component-configuration’-Felder sind:

     Alle folgenden Felder, wie sie auch die ‘prosody-configuration’
     hat: ‘admins’, ‘use-libevent?’, ‘modules-enabled’,
     ‘modules-disabled’, ‘groups-file’, ‘allow-registration?’, ‘ssl’,
     ‘c2s-require-encryption?’, ‘disable-sasl-mechanisms’,
     ‘s2s-require-encryption?’, ‘s2s-secure-auth?’,
     ‘s2s-insecure-domains’, ‘s2s-secure-domains’, ‘authentication’,
     ‘log’, ‘http-max-content-size’, ‘http-external-url’, ‘raw-content’,
     und außerdem:
      -- ‘int-component-configuration’-Parameter: Zeichenkette hostname
          Der Rechnername für diese Komponente.

      -- ‘int-component-configuration’-Parameter: Zeichenkette plugin
          Das Plugin, das Sie für diese Komponente benutzen möchten.

      -- ‘int-component-configuration’-Parameter:
               Vielleicht-„mod-muc-configuration“ mod-muc
          Multi-User Chat (MUC) ist der Name von Prosodys Modul, womit
          Sie Chaträume/Konferenzen für XMPP-Benutzer anbieten lassen
          können.

          General information on setting up and using multi-user
          chatrooms can be found in the “Chatrooms” documentation
          (<https://prosody.im/doc/chatrooms>), which you should read if
          you are new to XMPP chatrooms.

          Siehe auch <https://prosody.im/doc/modules/mod_muc>.

          Verfügbare ‘mod-muc-configuration’-Felder sind:

           -- ‘mod-muc-configuration’-Parameter: Zeichenkette name
               Der Name, der in Antworten auf die Diensteermittlung
               benutzt. Die Vorgabe ist ‘"Prosody Chatrooms"’.

           -- ‘mod-muc-configuration’-Parameter:
                    Zeichenkette-oder-Boolescher-Ausdruck
                    restrict-room-creation
               Für ‘#t’ können nur Administratoren neue Chaträume
               anlegen. Andernfalls kann jeder einen Raum anlegen. Der
               Wert ‘"local"’ schränkt das Anlegen neuer Räume auf
               solche Nutzer ein, die zur Eltern-Domain des Dienstes
               gehören. Z.B. kann ‘user@example.com’ Räume auf
               ‘rooms.example.com’ anlegen. Für den Wert ‘"admin"’
               können nur Dienstadministratoren Chaträume anlegen. Die
               Vorgabe ist ‘#f’.

           -- ‘mod-muc-configuration’-Parameter:
                    Nichtnegative-ganze-Zahl max-history-messages
               Die Maximalzahl der Nachrichten aus dem Chat-Verlauf, die
               an ein Mitglied nachversandt werden, das gerade erst dem
               Raum beigetreten ist. Die Vorgabe ist ‘20’.

 -- ‘prosody-configuration’-Parameter:
          „ext-component-configuration“-Liste ext-components
     Externe Komponenten benutzen XEP-0114, das von den meisten
     eigenständigen Komponenten unterstützt wird. Um eine externe
     Komponente hinzuzufügen, tragen Sie einfach den Rechnernamen ins
     ‘hostname’-Feld ein. Siehe <https://prosody.im/doc/components>. Die
     Vorgabe ist ‘()’.

     Verfügbare ‘ext-component-configuration’-Felder sind:

     Alle folgenden Felder, wie sie auch die ‘prosody-configuration’
     hat: ‘admins’, ‘use-libevent?’, ‘modules-enabled’,
     ‘modules-disabled’, ‘groups-file’, ‘allow-registration?’, ‘ssl’,
     ‘c2s-require-encryption?’, ‘disable-sasl-mechanisms’,
     ‘s2s-require-encryption?’, ‘s2s-secure-auth?’,
     ‘s2s-insecure-domains’, ‘s2s-secure-domains’, ‘authentication’,
     ‘log’, ‘http-max-content-size’, ‘http-external-url’, ‘raw-content’,
     und außerdem:
      -- ‘ext-component-configuration’-Parameter: Zeichenkette
               component-secret
          Das Passwort, das die Komponente für die Anmeldung benutzt.

      -- ‘ext-component-configuration’-Parameter: Zeichenkette hostname
          Der Rechnername für diese Komponente.

 -- ‘prosody-configuration’-Parameter: Nichtnegative-ganze-Zahl-Liste
          component-ports
     Der/Die Port(s), wo Prosody auf Verbindungen zu Komponenten
     lauscht. Die Vorgabe ist ‘(5347)’.

 -- ‘prosody-configuration’-Parameter: Zeichenkette component-interface
     Die Schnittstelle, auf der Prosody auf Verbindungen zu Komponenten
     lauscht. Die Vorgabe ist ‘"127.0.0.1"’.

 -- ‘prosody-configuration’-Parameter: Vielleicht-Roher-Inhalt
          raw-content
     „Roher Inhalt“, der so, wie er ist, an die Konfigurationsdatei
     angefügt wird.

   Möglicherweise möchten Sie einfach nur eine bestehende
‘prosody.cfg.lua’ zum Laufen bringen. In diesem Fall können Sie ein
‘opaque-prosody-configuration’-Verbundsobjekt als der Wert des
‘prosody-service-type’ übergeben. Wie der Name schon sagt, bietet eine
opake Konfiguration keinerlei Unterstützung für Reflexion. Verfügbare
‘opaque-prosody-configuration’-Felder sind:

 -- ‘opaque-prosody-configuration’-Parameter: „package“ prosody
     Das Prosody-Paket.

 -- ‘opaque-prosody-configuration’-Parameter: Zeichenkette
          prosody.cfg.lua
     Der Inhalt, der als ‘prosody.cfg.lua’ benutzt werden soll.

   Wenn Ihre ‘prosody.cfg.lua’ zum Beispiel nur aus der leeren
Zeichenkette bestünde, könnten Sie einen Prosody-Dienst wie folgt
instanziieren:

     (service prosody-service-type
              (opaque-prosody-configuration
               (prosody.cfg.lua "")))

BitlBee-Dienst
..............

BitlBee (https://bitlbee.org) ist ein Zugang („Gateway“), der eine
IRC-Schnittstelle für verschiedene Kurznachrichtenprotokolle wie XMPP
verfügbar macht.

 -- Scheme-Variable: bitlbee-service-type
     Dies ist der Diensttyp für den BitlBee-IRC-Zugangsdaemon
     (https://bitlbee.org) (englisch „IRC Gateway Daemon“). Sein Wert
     ist eine ‘bitlbee-configuration’ (siehe unten).

     Damit BitlBee auf Port 6667 vom lokalen Rechner („localhost“)
     lauscht, fügen Sie diese Zeile zu Ihrem „services“-Feld hinzu:

          (service bitlbee-service-type)

 -- Datentyp: bitlbee-configuration
     Dies ist die Konfiguration für BitlBee. Sie hat folgende Felder:

     ‘interface’ (Vorgabe: ‘"127.0.0.1"’)
     ‘port’ (Vorgabe: ‘6667’)
          Lauscht auf der Netzwerkschnittstelle, die der als INTERFACE
          angegebenen IP-Adresse entspricht, auf dem angegebenen PORT.

          Wenn als INTERFACE ‘127.0.0.1’ angegeben wurde, können sich
          nur lokale Clients verbinden; bei ‘0.0.0.0’ können die
          Verbindungen von jeder Netzwerkschnittstelle aus hergestellt
          werden.

     ‘bitlbee’ (Vorgabe: ‘bitlbee’)
          Das zu benutzende BitlBee-Paket.

     ‘plugins’ (Vorgabe: ‘'()’)
          Die Liste zu verwendender Plugin-Pakete — z.B.
          ‘bitlbee-discord’.

     ‘extra-settings’ (Vorgabe: ‘""’)
          Ein Konfigurationsschnipsel, das wortwörtlich in die
          BitlBee-Konfigurationsdatei eingefügt wird.

Quassel-Dienst
..............

Quassel (https://quassel-irc.org/) ist ein verteilter IRC-Client, was
bedeutet, dass sich ein oder mehr Clients mit dem zentralen Kern
verbinden und die Verbindung wieder trennen können.

 -- Scheme-Variable: quassel-service-type
     Dies ist der Diensttyp für den Daemon zum IRC-Hintergrundsystem
     („Backend“) Quassel (https://quassel-irc.org/). Sein Wert ist eine
     ‘quassel-configuration’ (siehe unten).

 -- Datentyp: quassel-configuration
     Die Konfiguration für Quassel mit den folgenden Feldern:

     ‘quassel’ (Vorgabe: ‘quassel’)
          Das zu verwendende Quassel-Paket.

     ‘interface’ (Vorgabe: ‘"::,0.0.0.0"’)
     ‘port’ (Vorgabe: ‘4242’)
          Lauscht auf der/den Netzwerkschnittstelle(n), die den in der
          kommagetrennten INTERFACE-Liste festgelegten IPv4- oder
          IPv6-Schnittstellen entsprechen, auf dem angegebenen PORT.

     ‘loglevel’ (Vorgabe: ‘"Info"’)
          Die gewünschte Detailstufe der Protokollierung. Akzeptiert
          werden die Werte Debug (ausführlich zur Fehlersuche), Info,
          Warning (nur Warnungen und Fehler) und Error (nur Fehler).


File: guix.de.info,  Node: Telefondienste,  Next: Systemüberwachungsdienste,  Prev: Kurznachrichtendienste,  Up: Dienste

8.8.12 Telefondienste
---------------------

Dieser Abschnitt beschreibt, wie Sie einen Murmur-Server einrichten und
ausführen. Murmur ist der Server zur Internettelefonie-Suite Mumble
(https://mumble.info) für „Voice over IP“ (VoIP).

 -- Datentyp: murmur-configuration
     Der Diensttyp für den Murmur-Server. Eine Beispielkonfiguration
     kann so aussehen:

          (service murmur-service-type
                   (murmur-configuration
                    (welcome-text
                      "Willkommen zu diesem mit Guix betriebenen Mumble-Server!")
                    (cert-required? #t) ;Anmeldungen mit Textpasswort deaktivieren
                    (ssl-cert "/etc/letsencrypt/live/mumble.example.com/fullchain.pem")
                    (ssl-key "/etc/letsencrypt/live/mumble.example.com/privkey.pem")))

     Nachdem Sie Ihr System rekonfiguriert haben, können Sie das
     Passwort des Murmur-Administratornutzers ‘SuperUser’ mit Hilfe des
     Befehls von Hand festlegen, der Ihnen in Murmurs Aktivierungsphase
     angezeigt wird.

     Es wird empfohlen, ein normales Mumble-Benutzerkonto zu
     registrieren und mit Administrator- oder Moderatorrechten
     auszustatten. Sie können auch das Clientprogramm ‘mumble’ benutzen,
     um sich als neuer normaler Benutzer anzumelden und zu registrieren,
     und sich dann abmelden. Im nächsten Schritt melden Sie sich mit dem
     Benutzernamen ‘SuperUser’ mit dem vorher festgelegten
     ‘SuperUser’-Passwort an und statten Ihren registrierten
     Mumble-Benutzer mit Administrator- oder Moderatorrechten aus oder
     erzeugen ein paar Kanäle.

     Verfügbare ‘murmur-configuration’-Felder sind:

     ‘package’ (Vorgabe: ‘mumble’)
          Das Paket, das ‘bin/murmurd’ enthält.

     ‘user’ (Vorgabe: ‘"murmur"’)
          Der Benutzer, der den Murmur-Server ausführt.

     ‘group’ (Vorgabe: ‘"murmur"’)
          Die Gruppe des Benutzers, der den Murmur-Server ausführt.

     ‘port’ (Vorgabe: ‘64738’)
          Der Port, auf dem der Server lauschen wird.

     ‘welcome-text’ (Vorgabe: ‘""’)
          Der Willkommenstext, der an Clients geschickt wird, sobald sie
          eine Verbindung aufgebaut haben.

     ‘server-password’ (Vorgabe: ‘""’)
          Das Passwort, das Clients eingeben müssen, um sich verbinden
          zu können.

     ‘max-users’ (Vorgabe: ‘100’)
          Die Maximalzahl von Nutzern, die gleichzeitig mit dem Server
          verbunden sein können.

     ‘max-user-bandwidth’ (Vorgabe: ‘#f’)
          Wieviele Stimmdaten ein Benutzer pro Sekunde versenden kann.

     ‘database-file’ (Vorgabe: ‘"/var/lib/murmur/db.sqlite"’)
          Der Dateiname der SQLite-Datenbank. Das Benutzerkonto für den
          Dienst wird Besitzer des Verzeichnisses.

     ‘log-file’ (Vorgabe: ‘"/var/log/murmur/murmur.log"’)
          Der Dateiname der Protokolldatei. Das Benutzerkonto für den
          Dienst wird Besitzer des Verzeichnisses.

     ‘autoban-attempts’ (Vorgabe: ‘10’)
          Wie oft sich ein Benutzer innerhalb des in ‘autoban-timeframe’
          angegebenen Zeitrahmens verbinden kann, ohne automatisch für
          die in ‘autoban-time’ angegebene Zeit vom Server verbannt zu
          werden.

     ‘autoban-timeframe’ (Vorgabe: ‘120’)
          Der Zeitrahmen für automatisches Bannen in Sekunden.

     ‘autoban-time’ (Vorgabe: ‘300’)
          Wie lange in Sekunden ein Client gebannt wird, wenn er die
          Autobann-Beschränkungen überschreitet.

     ‘opus-threshold’ (Vorgabe: ‘100’)
          Der Prozentanteil der Clients, die Opus unterstützen müssen,
          bevor der Opus-Audiocodec verwendet wird.

     ‘channel-nesting-limit’ (Vorgabe: ‘10’)
          Wie tief Kanäle höchstens ineinander verschachtelt sein
          können.

     ‘channelname-regex’ (Vorgabe: ‘#f’)
          Eine Zeichenkette in Form eines regulären Ausdrucks von Qt, zu
          dem Kanalnamen passen müssen.

     ‘username-regex’ (Vorgabe: ‘#f’)
          Eine Zeichenkette in Form eines regulären Ausdrucks von Qt, zu
          dem Nutzernamen passen müssen.

     ‘text-message-length’ (Vorgabe: ‘5000’)
          Wieviele Bytes ein Benutzer höchstens in einer
          Textchatnachricht verschicken kann.

     ‘image-message-length’ (Vorgabe: ‘(* 128 1024)’)
          Wieviele Bytes ein Benutzer höchstens in einer Bildnachricht
          verschicken kann.

     ‘cert-required?’ (Vorgabe: ‘#f’)
          Falls dies auf ‘#t’ gesetzt ist, werden Clients abgelehnt, die
          sich bloß mit Passwörtern authentisieren. Benutzer müssen den
          Zertifikatsassistenten abgeschlossen haben, bevor sie sich
          verbinden können.

     ‘remember-channel?’ (Vorgabe: ‘#f’)
          Ob sich Murmur für jeden Nutzer den Kanal merken soll, auf dem
          er sich zuletzt befunden hat, als er die Verbindung getrennt
          hat, so dass er wieder auf dem gemerkten Kanal landet, wenn er
          dem Server wieder beitritt.

     ‘allow-html?’ (Vorgabe: ‘#f’)
          Ob HTML in Textnachrichten, Nutzerkommentaren und
          Kanalbeschreibungen zugelassen wird.

     ‘allow-ping?’ (Vorgabe: ‘#f’)
          Wenn es auf wahr gesetzt ist, wird an nicht angemeldete
          Anwender die momentane Benutzerzahl, die maximale Benutzerzahl
          und die maximale Bandbreite pro Benutzer übermittelt. Im
          Mumble-Client werden diese Informationen im Verbinden-Dialog
          angezeigt.

          Wenn diese Einstellung deaktiviert ist, wird der Server nicht
          in der öffentlichen Serverliste aufgeführt.

     ‘bonjour?’ (Vorgabe: ‘#f’)
          Ob der Server im lokalen Netzwerk anderen über das
          Bonjour-Protokoll mitgeteilt werden soll.

     ‘send-version?’ (Vorgabe: ‘#f’)
          Ob die Murmur-Serverversion Clients gegenüber in Ping-Anfragen
          mitgeteilt werden soll.

     ‘log-days’ (Vorgabe: ‘31’)
          Murmur führt in der Datenbank Protokolle, auf die über
          entfernte Prozeduraufrufe („Remote Procedure Calls“, kurz RPC)
          zugegriffen werden kann. Nach Vorgabe bleiben diese 31 Tage
          lang erhalten, aber sie können diese Einstellung auf 0 setzen,
          damit sie ewig gespeichert werden, oder auf -1, um _keine_
          Protokolle in die Datenbank zu schreiben.

     ‘obfuscate-ips?’ (Vorgabe: ‘#t’)
          Ob IP-Adressen in Protokollen anonymisiert werden sollen, um
          die Privatsphäre von Nutzern zu schützen.

     ‘ssl-cert’ (Vorgabe: ‘#f’)
          Der Dateiname des SSL-/TLS-Zertifikats, das für verschlüsselte
          Verbindungen benutzt werden soll.

               (ssl-cert "/etc/letsencrypt/live/example.com/fullchain.pem")
     ‘ssl-key’ (Vorgabe: ‘#f’)
          Dateipfad zum privaten Schlüssel für SSL, was für
          verschlüsselte Verbindungen benutzt wird.
               (ssl-key "/etc/letsencrypt/live/example.com/privkey.pem")

     ‘ssl-dh-params’ (Vorgabe: ‘#f’)
          Dateiname einer PEM-kodierten Datei mit
          Diffie-Hellman-Parametern für die SSL-/TLS-Verschlüsselung.
          Alternativ setzen Sie ihn auf ‘"@ffdhe2048"’, ‘"@ffdhe3072"’,
          ‘"@ffdhe4096"’, ‘"@ffdhe6144"’ oder ‘"@ffdhe8192"’, wodurch
          die mitgelieferten Parameter aus RFC 7919 genutzt werden.

     ‘ssl-ciphers’ (Vorgabe: ‘#f’)
          Die Option ‘ssl-ciphers’ wählt aus, welche Cipher-Suites zur
          Verwendung in SSL/TLS verfügbar sein sollen.

          Diese Option wird in der OpenSSL-Notation für Cipher-Listen
          (https://www.openssl.org/docs/apps/ciphers.html#CIPHER-LIST-FORMAT)
          angegeben.

          Es wird empfohlen, dass Sie Ihre Cipher-Zeichenkette mit
          „openssl ciphers <Zeichenkette>“ prüfen, bevor Sie sie hier
          einsetzen, um ein Gefühl dafür zu bekommen, was für eine
          Cipher-Suite sie damit bekommen. Nachdem Sie diese Option
          festgelegt haben, wird empfohlen, dass Sie Ihr
          Murmur-Protokoll durchsehen und sicherstellen, dass Murmur
          auch wirklich die Cipher-Suites benutzt, die Sie erwarten.

          Beachten Sie: Änderungen hieran können die
          Rückwärtskompatibilität Ihres Murmur-Servers beeinträchtigen;
          dadurch kann es für ältere Mumblie-Clients unmöglich werden,
          sich damit zu verbinden.

     ‘public-registration’ (Vorgabe: ‘#f’)
          Hier muss ein
          ‘<murmur-public-registration-configuration>’-Verbundsobjekt
          oder ‘#f’ angegeben werden.

          Sie können Ihren Server optional in die öffentliche
          Serverliste eintragen lassen, die der Mumble-Client ‘mumble’
          beim Start anzeigt. Sie können Ihren Server nicht
          registrieren, wenn Sie ein ‘server-password’ festgelegt oder
          ‘allow-ping’ auf ‘#f’ gesetzt haben.

          Es könnte ein paar Stunden dauern, bis er in der öffentlichen
          Liste zu finden ist.

     ‘file’ (Vorgabe: ‘#f’)
          Optional kann hier eine vorrangig benutzte alternative
          Konfiguration festgelegt werden.

 -- Datentyp: murmur-public-registration-configuration
     Konfiguration für das öffentliche Registrieren eines
     Murmur-Dienstes.

     ‘name’
          Dies ist ein Anzeigename für Ihren Server. Er ist nicht zu
          verwechseln mit dem Rechnernamen („Hostname“).

     ‘password’
          Ein Passwort, um Ihre Registrierung zu identifizieren.
          Nachfolgende Aktualisierungen müssen dasselbe Passwort
          benutzen. Verlieren Sie Ihr Passwort nicht.

     ‘url’
          Dies sollte ein Link mit ‘http://’ oder ‘https://’ auf Ihren
          Webauftritt sein.

     ‘hostname’ (Vorgabe: ‘#f’)
          Nach Vorgabe wird Ihr Server über seine IP-Adresse aufgeführt.
          Wenn dies gesetzt ist, wird er stattdessen mit diesem
          Rechnernamen verknüpft.


File: guix.de.info,  Node: Systemüberwachungsdienste,  Next: Kerberos-Dienste,  Prev: Telefondienste,  Up: Dienste

8.8.13 Systemüberwachungsdienste
--------------------------------

Tailon-Dienst
.............

Tailon (https://tailon.readthedocs.io/) ist eine Web-Anwendung, um
Protokolldateien zu betrachten und zu durchsuchen.

   Das folgende Beispiel zeigt, wie Sie den Dienst mit den Vorgabewerten
konfigurieren. Nach Vorgabe kann auf Tailon auf Port 8080 zugegriffen
werden (‘http://localhost:8080’).

     (service tailon-service-type)

   Im folgenden Beispiel werden mehr Anpassungen an der
Tailon-Konfiguration vorgenommen: ‘sed’ gehört dort auch zur Liste der
erlaubten Befehle dazu.

     (service tailon-service-type
              (tailon-configuration
                (config-file
                  (tailon-configuration-file
                    (allowed-commands '("tail" "grep" "awk" "sed"))))))

 -- Datentyp: tailon-configuration
     Der Datentyp, der die Konfiguration von Tailon repräsentiert.
     Dieser Typ verfügt über die folgenden Parameter:

     ‘config-file’ (Vorgabe: ‘(tailon-configuration-file)’)
          Die Konfigurationsdatei, die für Tailon benutzt werden soll.
          Als Wert kann ein “tailon-configuration-file”-Verbundsobjekt
          oder ein beliebiger G-Ausdruck dienen (siehe *note
          G-Ausdrücke::).

          Um zum Beispiel stattdessen eine lokale Datei zu benutzen,
          kann von der Funktion ‘local-file’ Gebrauch gemacht werden.

               (service tailon-service-type
                        (tailon-configuration
                          (config-file (local-file "./my-tailon.conf"))))

     ‘package’ (Vorgabe: ‘tailon’)
          Das tailon-Paket, das benutzt werden soll.

 -- Datentyp: tailon-configuration-file
     Datentyp, der die Konfigurationsoptionen für Tailon repräsentiert.
     Dieser Typ verfügt über die folgenden Parameter:

     ‘files’ (Vorgabe: ‘(list "/var/log")’)
          Die Liste der anzuzeigenden Dateien. In der Liste dürfen
          Zeichenketten stehen, die jeweils für eine einzelne Datei oder
          ein Verzeichnis stehen, oder auch Listen, deren erstes Element
          den Namen eines Unterbereichs angibt und deren übrige Elemente
          die Dateien oder Verzeichnisse in diesem Unterbereich
          benennen.

     ‘bind’ (Vorgabe: ‘"localhost:8080"’)
          Adresse und Port, an die sich Tailon binden soll.

     ‘relative-root’ (Vorgabe: ‘#f’)
          Welcher URL-Pfad für Tailon benutzt werden soll. Wenn Sie
          hierfür ‘#f’ angeben, wird kein Pfad benutzt.

     ‘allow-transfers?’ (Vorgabe: ‘#t’)
          Ob es möglich sein soll, die Protokolldateien über die
          Weboberfläche herunterzuladen.

     ‘follow-names?’ (Vorgabe: ‘#t’)
          Ob noch nicht existierende Dateien „getailt“ werden können.

     ‘tail-lines’ (Vorgabe: ‘200’)
          Wieviele Zeilen am Anfang aus jeder Datei gelesen werden.

     ‘allowed-commands’ (Vorgabe: ‘(list "tail" "grep" "awk")’)
          Welche Befehle ausgeführt werden dürfen. Nach Vorgabe wird
          ‘sed’ _nicht_ erlaubt.

     ‘debug?’ (Vorgabe: ‘#f’)
          Legen Sie ‘debug?’ als ‘#t’ fest, um Nachrichten zur
          Fehlersuche anzuzeigen.

     ‘wrap-lines’ (Vorgabe: ‘#t’)
          Ob lange Zeilen nach der Anfangseinstellung in der
          Weboberfläche umgebrochen werden sollen. Setzen Sie es auf
          ‘#t’, werden Zeilen in der Anfangseinstellung umgebrochen (die
          Vorgabe), bei ‘#f’ werden sie anfänglich nicht umgebrochen.

     ‘http-auth’ (Vorgabe: ‘#f’)
          Welcher HTTP-Authentifizierungstyp benutzt werden soll. Setzen
          Sie dies auf ‘#f’, damit sich Benutzer nicht authentisieren
          müssen (die Vorgabe). Unterstützte Werte sind ‘"digest"’ oder
          ‘"basic"’.

     ‘users’ (Vorgabe: ‘#f’)
          Wenn HTTP-Authentifizierung aktiviert ist (siehe ‘http-auth’),
          wird der Zugriff nur gewährt, nachdem die hier angegebenen
          Zugangsinformationen eingegeben wurden. Um Nutzer
          hinzuzufügen, geben Sie hier eine Liste von Paaren an, deren
          erstes Element jeweils der Benutzername und deren zweites
          Element das Passwort ist.

               (tailon-configuration-file
                 (http-auth "basic")
                 (users     '(("benutzer1" . "passwort1")
                              ("benutzer2" . "passwort2"))))

Darkstat-Dienst
...............

Darkstat ist ein Netzwerkanalyseprogramm, das Pakete im Datenverkehr
aufzeichnet, Statistiken zur Netzwerknutzung berechnet und über HTTP
Berichte dazu bereitstellt.

 -- Variable: Scheme-Variable darkstat-service-type
     Dies ist der Diensttyp für den darkstat-Dienst
     (https://unix4lyfe.org/darkstat/). Sein Wert muss ein
     ‘darkstat-configuration’-Verbundsobjekt sein, wie in diesem
     Beispiel:

          (service darkstat-service-type
                   (darkstat-configuration
                     (interface "eno1")))

 -- Datentyp: darkstat-configuration
     Datentyp, der die Konfiguration von ‘darkstat’ repräsentiert.

     ‘package’ (Vorgabe: ‘darkstat’)
          Welches darkstat-Paket verwendet werden soll.

     ‘interface’
          Datenverkehr an der angegebenen Netzwerkschnittstelle
          mitschneiden.

     ‘port’ (Vorgabe: ‘"667"’)
          Bindet die Weboberfläche an den angegebenen Port.

     ‘bind-address’ (Vorgabe: ‘"127.0.0.1"’)
          Bindet die Weboberfläche an die angegebene Adresse.

     ‘base’ (Vorgabe: ‘"/"’)
          Geben Sie den Pfad der Basis-URL an. Das kann nützlich sein,
          wenn auf ‘darkstat’ über einen inversen Proxy („Reverse
          Proxy“) zugegriffen wird.

Prometheus-Node-Exporter-Dienst
...............................

Der Prometheus-„Node-Exporter“ stellt Statistiken über Hardware und
Betriebssystem für das Prometheus-Systemüberwachungssystem bereit, die
vom Linux-Kernel geliefert werden. Dieser Dienst sollte auf allen
physischen Netzwerkknoten und virtuellen Maschinen installiert werden,
für die eine Überwachung ihrer Statistiken gewünscht wird.

 -- Variable: Scheme-Variable prometheus-node-exporter-service-type
     Dies ist der Diensttyp für den „prometheus-node-exporter“-Dienst
     (https://github.com/prometheus/node_exporter/). Sein Wert muss ein
     ‘prometheus-node-exporter-configuration’-Verbundsobjekt wie in
     diesem Beispiel sein:

          (service prometheus-node-exporter-service-type
                   (prometheus-node-exporter-configuration
                     (web-listen-address ":9100")))

 -- Datentyp: prometheus-node-exporter-configuration
     Repräsentiert die Konfiguration von ‘node_exporter’.

     ‘package’ (Vorgabe: ‘go-github-com-prometheus-node-exporter’)
          Das Paket für den prometheus-node-exporter, was benutzt werden
          soll.

     ‘web-listen-address’ (Vorgabe: ‘":9100"’)
          Bindet die Weboberfläche an die angegebene Adresse.

Zabbix-Server
.............

Zabbix stellt Metriken zur Systemüberwachung zur Verfügung, unter
anderem die Netzwerk- und Prozessorauslastung sowie den
Plattenplatzverbrauch, und bietet dabei:

   • Hohe Leistungsfähigkeit und hohe Kapazität (hunderttausende Geräte
     können überwacht werden).
   • Automatische Erkennung von Servern, Netzwerkgeräten und
     -schnittstellen.
   • Systemnahe Erkennung, wodurch automatisch mit der Überwachung neuer
     Objekte, Dateisysteme, Netzwerkschnittstellen und anderer Dinge
     begonnen werden kann.
   • Verteilte Überwachung mit zentralisierter Web-Administrierbarkeit.
   • Native Hochleistungsagenten.
   • Berichte zum SLA und über ITIL-KPI-Metriken.
   • Überblickssicht (geschäftlich) auf die überwachten Ressourcen über
     benutzerdefinierte visuelle Konsolenbildschirme und Dashboards.
   • Entfernte Befehlsausführung über Zabbix-Proxys.

   Verfügbare ‘zabbix-server-configuration’-Felder sind:

 -- ‘zabbix-server-configuration’-Parameter: „package“ zabbix-server
     Das zabbix-server-Paket.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette user
     Das Benutzerkonto, mit dem der Zabbix-Server ausgeführt wird.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-server-configuration’-Parameter: Gruppe group
     Die Gruppe, mit der der Zabbix-Server ausgeführt wird.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette db-host
     Rechnername der Datenbank.

     Die Vorgabe ist ‘"127.0.0.1"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette db-name
     Datenbankname.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette db-user
     Benutzerkonto der Datenbank.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette db-password
     Das Datenbankpasswort. Bitte benutzen Sie stattdessen
     ‘include-files’ mit ‘DBPassword=SECRET’ in einer angegebenen Datei.

     Die Vorgabe ist ‘""’.

 -- ‘zabbix-server-configuration’-Parameter: Zahl db-port
     Datenbank-Portnummer.

     Die Vorgabe ist ‘5432’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette log-type
     Gibt an, wohin Protokollnachrichten geschrieben werden.

        • ‘system’ - Syslog.

        • ‘file’ - Die im ‘log-file’-Parameter angegebene Datei.

        • ‘console’ - Standardausgabe.

     Die Vorgabe ist ‘""’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette log-file
     Protokolldateiname für den ‘file’-Parameter von ‘log-type’.

     Die Vorgabe ist ‘"/var/log/zabbix/server.log"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette pid-file
     Name der PID-Datei.

     Die Vorgabe ist ‘"/var/run/zabbix/zabbix_server.pid"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette
          ssl-ca-location
     Der Ort mit den Dateien über die Zertifikatsautoritäten
     (Certificate Authoritys, CAs) zur Prüfung der
     SSL-Serverzertifikate.

     Die Vorgabe ist ‘"/etc/ssl/certs/ca-certificates.crt"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette
          ssl-cert-location
     Der Ort mit den SSL-Client-Zertifikaten.

     Die Vorgabe ist ‘"/etc/ssl/certs"’.

 -- ‘zabbix-server-configuration’-Parameter: Zeichenkette extra-options
     Zusätzliche Optionen werden an die
     Zabbix-Server-Konfigurationsdatei angehängt.

     Die Vorgabe ist ‘""’.

 -- ‘zabbix-server-configuration’-Parameter: Einzubindende-Dateien
          include-files
     Sie können einzelne Dateien oder alle Dateien in einem Verzeichnis
     in die Konfigurationsdatei einbinden.

     Die Vorgabe ist ‘()’.

Zabbix-Agent
............

Der Zabbix-Agent sammelt Informationen für den Zabbix-Server.

   Verfügbare ‘zabbix-agent-configuration’-Felder sind:

 -- ‘zabbix-agent-configuration’-Parameter: „package“ zabbix-agent
     Das zabbix-agent-Paket.

 -- ‘zabbix-agent-configuration’-Parameter: Zeichenkette user
     Das Benutzerkonto, mit dem der Zabbix-Agent ausgeführt wird.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-agent-configuration’-Parameter: Gruppe group
     Die Gruppe, mit der der Zabbix-Agent ausgeführt wird.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-agent-configuration’-Parameter: Zeichenkette hostname
     Der eindeutige Rechnername in richtiger Groß-/Kleinschreibung, der
     für aktive Überprüfungen benötigt wird und dem im Server
     eingestellten Rechnernamen entsprechen muss.

     Die Vorgabe ist ‘"Zabbix server"’.

 -- ‘zabbix-agent-configuration’-Parameter: Zeichenkette log-type
     Gibt an, wohin Protokollnachrichten geschrieben werden.

        • ‘system’ - Syslog.

        • ‘file’ - Die im ‘log-file’-Parameter angegebene Datei.

        • ‘console’ - Standardausgabe.

     Die Vorgabe ist ‘""’.

 -- ‘zabbix-agent-configuration’-Parameter: Zeichenkette log-file
     Protokolldateiname für den ‘file’-Parameter von ‘log-type’.

     Die Vorgabe ist ‘"/var/log/zabbix/agent.log"’.

 -- ‘zabbix-agent-configuration’-Parameter: Zeichenkette pid-file
     Name der PID-Datei.

     Die Vorgabe ist ‘"/var/run/zabbix/zabbix_agent.pid"’.

 -- ‘zabbix-agent-configuration’-Parameter: Liste server
     Die Liste der IP-Adressen, optional in CIDR-Notation angegeben,
     oder die Rechnernamen von Zabbix-Servern und Zabbix-Proxys.
     Eingehende Verbindungen werden nur dann angenommen, wenn sie von
     hier angegebenen Rechnern stammen.

     Die Vorgabe ist ‘("127.0.0.1")’.

 -- ‘zabbix-agent-configuration’-Parameter: Liste server-active
     Die Liste aus IP:Port-Paaren (oder Rechnername:Port-Paaren) von
     Zabbix-Servern und Zabbix-Proxys für aktive Überprüfungen. Wenn
     kein Port angegeben wurde, wird der Vorgabeport benutzt. Wenn
     dieser Parameter _nicht_ angegeben wird, werden aktive
     Überprüfungen deaktiviert.

     Die Vorgabe ist ‘("127.0.0.1")’.

 -- ‘zabbix-agent-configuration’-Parameter: Zeichenkette extra-options
     Zusätzliche Optionen werden an die
     Zabbix-Server-Konfigurationsdatei angehängt.

     Die Vorgabe ist ‘""’.

 -- ‘zabbix-agent-configuration’-Parameter: Einzubindende-Dateien
          include-files
     Sie können einzelne Dateien oder alle Dateien in einem Verzeichnis
     in die Konfigurationsdatei einbinden.

     Die Vorgabe ist ‘()’.

Zabbix-Frontend
...............

Dieser Dienst stellt eine Weboberfläche als Vordergrundsystem
(“Frontend”) für den Zabbix-Server zur Verfügung.

   Verfügbare ‘zabbix-front-end-configuration’-Felder sind:

 -- ‘zabbix-front-end-configuration’-Parameter:
          „nginx-server-configuration“-Liste nginx
     NGINX-Konfiguration.

 -- ‘zabbix-front-end-configuration’-Parameter: Zeichenkette db-host
     Rechnername der Datenbank.

     Die Vorgabe ist ‘"localhost"’.

 -- ‘zabbix-front-end-configuration’-Parameter: Zahl db-port
     Datenbank-Portnummer.

     Die Vorgabe ist ‘5432’.

 -- ‘zabbix-front-end-configuration’-Parameter: Zeichenkette db-name
     Datenbankname.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-front-end-configuration’-Parameter: Zeichenkette db-user
     Benutzerkonto der Datenbank.

     Die Vorgabe ist ‘"zabbix"’.

 -- ‘zabbix-front-end-configuration’-Parameter: Zeichenkette db-password
     Das Datenbankpasswort. Bitte benutzen Sie stattdessen
     ‘db-secret-file’.

     Die Vorgabe ist ‘""’.

 -- ‘zabbix-front-end-configuration’-Parameter: Zeichenkette
          db-secret-file
     Die Datei mit den Geheimnis-Informationen, die an die
     ‘zabbix.conf.php’-Datei angehängt wird. Diese Datei enthält
     Zugangsdaten für die Nutzung durch das Zabbix-Frontend. Es wird von
     Ihnen erwartet, dass Sie sie manuell erzeugen.

     Die Vorgabe ist ‘""’.

 -- ‘zabbix-front-end-configuration’-Parameter: Zeichenkette zabbix-host
     Zabbix-Server-Rechnername.

     Die Vorgabe ist ‘"localhost"’.

 -- ‘zabbix-front-end-configuration’-Parameter: Zahl zabbix-port
     Zabbix-Server-Port.

     Die Vorgabe ist ‘10051’.

